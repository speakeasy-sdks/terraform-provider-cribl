openapi: 3.0.2
info:
  version: 1.0.0
  title: Cribl API Reference
  description: This API Reference lists available REST endpoints, along with their
    supported operations for accessing, creating, updating, or deleting
    resources. See our complementary product documentation at
    [docs.cribl.io](http://docs.cribl.io).
  contact:
    name: Support
    email: support@cribl.io
servers:
  - url: https://logstream.{organizationID}.cribl.cloud/
    variables:
      organizationID:
        default: api
        description: The name of the customer sending API requests.
security:
  - bearerAuth: []
tags:
  - name: auth
    description: "Actions related to authentication. Do not use the /auth endpoints
      in Cribl.Cloud deployments. Instead, obtain a Bearer token as described
      here: https://docs.cribl.io/stream/api-tutorials/#criblcloud-free-tier"
  - name: preview
    description: Actions related to data preview
  - name: users
    description: Actions related to users
  - name: certificates
    description: Actions related to certificates
  - name: functions
    description: Actions related to functions
  - name: collectors
    description: Actions related to collectors
  - name: executors
    description: Actions related to executors
  - name: routes
    description: Actions related to routes
  - name: pipelines
    description: Actions related to pipelines
  - name: inputs
    description: Actions related to inputs
  - name: outputs
    description: Actions related to outputs
  - name: samples
    description: Actions related to samples
  - name: lookups
    description: Actions related to lookups
  - name: parsers
    description: Actions related to parsers
  - name: keys
    description: Actions related to encryption keys
  - name: licenses
    description: Actions related to licenses. The <code>/licenses</code> endpoints do not apply to Cribl.Cloud deployments.
  - name: event_breaker_rules
    description: Actions related to event breaker rules
  - name: regexes
    description: Actions related to regular expressions
  - name: expressions
    description: Actions related to expressions
  - name: diag
    description: Actions related to diagnostics
  - name: system
    description: Actions related to system settings
  - name: logging
    description: Actions related to logging
  - name: messages
    description: Actions related to messages
  - name: metrics
    description: Actions related to metrics
  - name: scripts
    description: Actions related to scripts
  - name: edge
    description: Actions enabled in Edge mode
  - name: search
    description: Actions related to search
  - name: health
    description: Actions related to REST server health
  - name: workers
    description: Actions related to workers
  - name: datasets
  - name: features
  - name: fleet-mappings
  - name: groups
  - name: mappings
  - name: notification-targets
  - name: policies
  - name: roles
  - name: saved-jobs
  - name: savedQueries
  - name: appscope-configs
  - name: grokfiles
  - name: database-connections
  - name: global_variables
  - name: parquetschemas
  - name: profiler
  - name: schemas
  - name: secrets
  - name: authorize
  - name: changelog
  - name: clui
  - name: conditions
  - name: git
  - name: edgeEvents
  - name: events
  - name: edgeFiles
  - name: edgeLs
  - name: fileSampler
  - name: jobs
  - name: security
  - name: logger
  - name: packs
  - name: processes
  - name: trust-policies
  - name: uiState
  - name: versioning
  - name: edgeContainers
  - name: edgeProcesses
  - name: distributed
x-speakeasy-name-override:
  - operationId: ^get.*
    methodNameOverride: get
  - operationId: ^create.*
    methodNameOverride: create
  - operationId: ^update.*
    methodNameOverride: update
  - operationId: ^delete.*
    methodNameOverride: delete
  - operationId: ^deploy.*
    methodNameOverride: deploy
  - operationId: ^upload.*
    methodNameOverride: upload
  - operationId: ^login.*
    methodNameOverride: login
  - operationId: ^logout.*
    methodNameOverride: logout
  - operationId: ^restarts.*
    methodNameOverride: restarts
  - operationId: ^install.*
    methodNameOverride: install
  - operationId: ^uninstall.*
    methodNameOverride: uninstall
  - operationId: ^upgrade.*
    methodNameOverride: upgrade
  - operationId: ^clone.*
    methodNameOverride: clone
  - operationId: ^export.*
    methodNameOverride: export
  - operationId: ^apply.*
    methodNameOverride: apply
  - operationId: ^returns.*
    methodNameOverride: returns
  - operationId: ^send.*
    methodNameOverride: send
  - operationId: ^enum.*
    methodNameOverride: enum
  - operationId: ^query.*
    methodNameOverride: query
  - operationId: ^post.*
    methodNameOverride: post
  - operationId: ^cancel.*
    methodNameOverride: cancel
  - operationId: ^prevent.*
    methodNameOverride: prevent
  - operationId: ^resume.*
    methodNameOverride: resume
  - operationId: ^restart.*
    methodNameOverride: restart
  - operationId: ^reload.*
    methodNameOverride: reload
  - operationId: ^push.*
    methodNameOverride: push
  - operationId: ^sync.*
    methodNameOverride: sync
  - operationId: ^test.*
    methodNameOverride: test
paths:
  x-speakeasy-errors:
    statusCodes:
     - 4XX
     - 5XX
  /system/certificates:
    get:
      tags:
        - certificates

      operationId: listCertificates
      summary: Get a list of Certificate objects
      description: Get a list of Certificate objects
      responses:
        "200":
          description: a list of Certificate objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificates"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags: 
        - certificates

      operationId: createCertificate
      summary: Create Certificate
      description: Create Certificate
      requestBody:
        description: New Certificate object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
      responses:
        "200":
          description: a list of Certificate objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/certificates/{id}":
    get:
      tags:
        - certificates

      operationId: getCertificate
      summary: Get Certificate by ID
      description: Get Certificate by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Certificate objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - certificates

      operationId: updateCertificate
      summary: Update Certificate
      description: Update Certificate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Certificate object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
      responses:
        "200":
          description: a list of Certificate objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - certificates

      operationId: deleteCertificate
      summary: Delete Certificate
      description: Delete Certificate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Certificate objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/dataset-provider-types:
    get:
      tags:
        - datasets
      operationId: listDatasetProviderTypes
      x-speakeasy-name-override: listProviderTypes
      summary: Get a list of DatasetProviderType objects
      description: Get a list of DatasetProviderType objects
      responses:
        "200":
          description: a list of DatasetProviderType objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetProviderTypes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - datasets

      operationId: createDatasetProviderType
      x-speakeasy-name-override: createProviderType
      summary: Create DatasetProviderType
      description: Create DatasetProviderType
      requestBody:
        description: New DatasetProviderType object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetProviderType"
      responses:
        "200":
          description: a list of DatasetProviderType objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetProviderType"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/dataset-provider-types/{id}:
    get:
      tags:
        - datasets
      operationId: getDatasetProviderType
      x-speakeasy-name-override: getProviderType
      summary: Get DatasetProviderType by ID
      description: Get DatasetProviderType by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of DatasetProviderType objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetProviderType"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - datasets

      operationId: updateDatasetProviderType
      x-speakeasy-name-override: updateProviderType
      summary: Update DatasetProviderType
      description: Update DatasetProviderType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: DatasetProviderType object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetProviderType"
      responses:
        "200":
          description: a list of DatasetProviderType objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetProviderType"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - datasets
      operationId: deleteDatasetProviderType
      x-speakeasy-name-override: deleteProviderType
      summary: Delete DatasetProviderType
      description: Delete DatasetProviderType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of DatasetProviderType objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetProviderType"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/datasets:
    get:
      tags:
        - datasets
      operationId: listDatasetObjects
      summary: Get a list of Dataset objects
      description: Get a list of Dataset objects
      responses:
        "200":
          description: a list of Dataset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Datasets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - datasets

      operationId: createDatasetObject
      summary: Create Dataset
      description: Create Dataset
      requestBody:
        description: New Dataset object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset"
      responses:
        "200":
          description: a list of Dataset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/datasets/{id}":
    get:
      tags:
        - datasets

      operationId: getDatasetObject
      summary: Get Dataset by ID
      description: Get Dataset by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Dataset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - datasets

      operationId: updateDatasetObject
      summary: Update Dataset
      description: Update Dataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Dataset object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset"
      responses:
        "200":
          description: a list of Dataset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - datasets

      operationId: deleteDatasetObject
      summary: Delete Dataset
      description: Delete Dataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Dataset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/settings/features/{id}":
    get:
      tags:
        - features

      operationId: getFeature
      summary: Get feature by Id 
      description: Get feature by id (i.e. 'type/name`)
      deprecated: false
      responses:
        "200":
          description: a list of FeaturesEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturesEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Feature id
  /settings/features:
    get:
      tags:
        - features

      operationId: listFeatures
      summary: List all features
      description: List all features
      deprecated: false
      responses:
        "200":
          description: a list of FeaturesEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturesEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /fleet-mappings:
    get:
      tags:
        - fleet-mappings

      operationId: listFleetMappings
      summary: Get a list of MappingRuleset objects
      description: Get a list of MappingRuleset objects
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - fleet-mappings

      operationId: createFleetMapping
      summary: Create MappingRuleset
      description: Create MappingRuleset
      requestBody:
        description: New MappingRuleset object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingRuleset"
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/fleet-mappings/{id}":
    get:
      tags:
        - fleet-mappings

      operationId: getMappingRuleset
      summary: Get MappingRuleset by ID
      description: Get MappingRuleset by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - fleet-mappings

      operationId: updateMappingRulesets
      summary: Update MappingRuleset
      description: Update MappingRuleset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: MappingRuleset object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingRuleset"
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - fleet-mappings

      operationId: deleteMappingRuleset
      summary: Delete MappingRuleset
      description: Delete MappingRuleset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /master/groups:
    get:
      tags:
        - groups

      operationId: listGroups
      summary: Get a list of ConfigGroup objects
      description: Get a list of ConfigGroup objects
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigGroups"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
          description: "additional fields to add to results: git.commit, git.localChanges,
            git.log"
        - name: product
          in: query
          required: false
          schema:
            type: string
          description: 'filter to specific product: "stream" or "edge"'
    post:
      tags:
        - groups

      operationId: createConfigGroup
      summary: Create ConfigGroup
      description: Create ConfigGroup
      requestBody:
        description: New ConfigGroup object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigGroup"
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/master/groups/{id}":
    get:
      tags:
        - groups

      operationId: getConfigGroup
      summary: Get a specific ConfigGroup object
      description: Get a specific ConfigGroup object
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
          description: "query string additional fields to add to results: git.commit,
            git.localChanges, git.log"
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
    patch:
      tags:
        - groups

      operationId: updateConfigGroup
      summary: Update ConfigGroup
      description: Update ConfigGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: ConfigGroup object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigGroup"
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - groups

      operationId: deleteConfigGroup
      summary: Delete ConfigGroup
      description: Delete ConfigGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/master/groups/{id}/configVersion":
    get:
      tags:
        - groups

      operationId: getGroupBundle
      x-speakeasy-name-override: getConfigVersion
      summary: Get effective bundle version for given Group
      description: Get effective bundle version for given Group
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupBundle"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DeployRequest object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeployRequest"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group ID
  "/master/groups/{id}/deploy":
    patch:
      tags:
        - groups

      operationId: deployFleetOrWorkerGroup
      summary: Deploy commits for a Fleet or Worker Group
      description: Deploy commits for a Fleet or Worker Group
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DeployRequest object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeployRequest"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
  /system/keys:
    get:
      tags:
        - keys

      operationId: listKeyMetadataEntities
      summary: Get a list of KeyMetadataEntity objects
      description: Get a list of KeyMetadataEntity objects
      responses:
        "200":
          description: a list of KeyMetadataEntity objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyMetadataEntities"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - keys

      operationId: createKeyMetadataEntity
      summary: Create KeyMetadataEntity
      description: Create KeyMetadataEntity
      requestBody:
        description: New KeyMetadataEntity object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyMetadataEntity"
      responses:
        "200":
          description: a list of KeyMetadataEntity objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyMetadataEntities"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/keys/{id}":
    get:
      tags:
        - keys

      operationId: getKeyMetadataEntity
      summary: Get KeyMetadataEntity by ID
      description: Get KeyMetadataEntity by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of KeyMetadataEntity objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyMetadataEntities"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - keys

      operationId: updateKeyMetadataEntity
      summary: Update KeyMetadataEntity
      description: Update KeyMetadataEntity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: KeyMetadataEntity object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyMetadataEntity"
      responses:
        "200":
          description: a list of KeyMetadataEntity objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyMetadataEntities"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - keys

      operationId: deleteKeyMetadataEntity
      summary: Delete KeyMetadataEntity
      description: Delete KeyMetadataEntity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of KeyMetadataEntity objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyMetadataEntities"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /mappings:
    get:
      tags:
        - mappings

      operationId: listMappingRulesets
      summary: Get a list of MappingRuleset objects
      description: Get a list of MappingRuleset objects
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - mappings

      operationId: createMappingRuleset
      summary: Create MappingRuleset
      description: Create MappingRuleset
      requestBody:
        description: New MappingRuleset object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingRuleset"
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/mappings/{id}":
    get:
      tags:
        - mappings

      operationId: getMappingRulesetID
      summary: Get MappingRuleset by ID
      description: Get MappingRuleset by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - mappings

      operationId: updateMappingRuleset
      summary: Update MappingRuleset
      description: Update MappingRuleset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: MappingRuleset object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingRuleset"
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - mappings

      operationId: deleteMappingRulesets
      summary: Delete MappingRuleset
      description: Delete MappingRuleset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of MappingRuleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappingRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/messages:
    get:
      tags:
        - messages

      operationId: listBulletinMessages
      summary: Get a list of BulletinMessage objects
      description: Get a list of BulletinMessage objects
      responses:
        "200":
          description: a list of BulletinMessage objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulletinMessages"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - messages

      operationId: createBulletinMessage
      summary: Create BulletinMessage
      description: Create BulletinMessage
      requestBody:
        description: New BulletinMessage object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulletinMessage"
      responses:
        "200":
          description: a list of BulletinMessage objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulletinMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/messages/{id}":
    get:
      tags:
        - messages

      operationId: getBulletinMessage
      summary: Get BulletinMessage by ID
      description: Get BulletinMessage by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of BulletinMessage objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulletinMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - messages

      operationId: deleteBulletinMessage
      summary: Delete BulletinMessage
      description: Delete BulletinMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of BulletinMessage objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulletinMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /notification-targets:
    get:
      tags:
        - notification-targets

      operationId: listNotificationTargets
      summary: Get a list of NotificationTarget objects
      description: Get a list of NotificationTarget objects
      responses:
        "200":
          description: a list of NotificationTarget objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTargets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - notification-targets

      operationId: createNotificationTarget
      summary: Create NotificationTarget
      description: Create NotificationTarget
      requestBody:
        description: New NotificationTarget object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationTarget"
      responses:
        "200":
          description: a list of NotificationTarget objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTargets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/notification-targets/{id}":
    get:
      tags:
        - notification-targets

      operationId: getNotificationTarget
      summary: Get NotificationTarget by ID
      description: Get NotificationTarget by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of NotificationTarget objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTargets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - notification-targets

      operationId: updatetNotificationTarget
      summary: Update NotificationTarget
      description: Update NotificationTarget
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: NotificationTarget object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationTarget"
      responses:
        "200":
          description: a list of NotificationTarget objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTargets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - notification-targets

      operationId: deletetNotificationTarget
      summary: Delete NotificationTarget
      description: Delete NotificationTarget
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of NotificationTarget objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTargets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/policies:
    get:
      tags:
        - policies

      operationId: listPolicyRules
      summary: Get a list of PolicyRule objects
      description: Get a list of PolicyRule objects
      responses:
        "200":
          description: a list of PolicyRule objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyRules"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - policies

      operationId: createPolicyRule
      summary: Create PolicyRule
      description: Create PolicyRule
      requestBody:
        description: New PolicyRule object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRule"
      responses:
        "200":
          description: a list of PolicyRule objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyRules"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/policies/{id}":
    get:
      tags:
        - policies

      operationId: getPolicyRule
      summary: Get PolicyRule by ID
      description: Get PolicyRule by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of PolicyRule objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyRules"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - policies

      operationId: updatePolicyRule
      summary: Update PolicyRule
      description: Update PolicyRule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: PolicyRule object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRule"
      responses:
        "200":
          description: a list of PolicyRule objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyRules"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - policies

      operationId: deletePolicyRule
      summary: Delete PolicyRule
      description: Delete PolicyRule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of PolicyRule objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyRules"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/roles:
    get:
      tags:
        - roles

      operationId: listRoles
      summary: Get a list of Role objects
      description: Get a list of Role objects
      responses:
        "200":
          description: a list of Role objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - roles

      operationId: createRole
      summary: Create Role
      description: Create Role
      requestBody:
        description: New Role object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        "200":
          description: a list of Role objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/roles/{id}":
    get:
      tags:
        - roles

      operationId: getRole
      summary: Get Role by ID
      description: Get Role by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Role objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - roles

      operationId: updateRole
      summary: Update Role
      description: Update Role
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Role object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        "200":
          description: a list of Role objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - roles

      operationId: deleteRole
      summary: Delete Role
      description: Delete Role
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Role objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/jobs:
    get:
      tags:
        - saved-jobs

      operationId: listSavedJobs
      summary: Get a list of SavedJob objects
      description: Get a list of SavedJob objects
      responses:
        "200":
          description: a list of SavedJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedJobs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - saved-jobs

      operationId: createSavedJobs
      summary: Create SavedJob
      description: Create SavedJob
      requestBody:
        description: New SavedJob object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedJob"
      responses:
        "200":
          description: a list of SavedJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedJobs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/jobs/{id}":
    get:
      tags:
        - saved-jobs

      operationId: getSavedJob
      summary: Get SavedJob by ID
      description: Get SavedJob by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of SavedJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedJobs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - saved-jobs

      operationId: updateSavedJob
      summary: Update SavedJob
      description: Update SavedJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: SavedJob object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedJob"
      responses:
        "200":
          description: a list of SavedJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedJobs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - saved-jobs

      operationId: deleteSavedJob
      summary: Delete SavedJob
      description: Delete SavedJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of SavedJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedJobs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/saved:
    get:
      tags:
        - savedQueries

      operationId: listSavedQueries
      summary: Get a list of SavedQuery objects
      description: Get a list of SavedQuery objects
      responses:
        "200":
          description: a list of SavedQuery objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedQueries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - savedQueries

      operationId: createSavedQueries
      summary: Create SavedQuery
      description: Create SavedQuery
      requestBody:
        description: New SavedQuery object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
      responses:
        "200":
          description: a list of SavedQuery objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedQuery"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/saved/{id}":
    get:
      tags:
        - savedQueries

      operationId: getSavedQuery
      summary: Get SavedQuery by ID
      description: Get SavedQuery by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of SavedQuery objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedQuery"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - savedQueries

      operationId: updateSavedQueries
      summary: Update SavedQuery
      description: Update SavedQuery
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: SavedQuery object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
      responses:
        "200":
          description: a list of SavedQuery objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedQuery"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - savedQueries

      operationId: deleteSavedQueries
      summary: Delete SavedQuery
      description: Delete SavedQuery
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of SavedQuery objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedQuery"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/scripts:
    get:
      tags:
        - scripts

      operationId: listScripts
      summary: Get a list of Script objects
      description: Get a list of Script objects
      responses:
        "200":
          description: a list of Script objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - scripts

      operationId: createScript
      summary: Create Script
      description: Create Script
      requestBody:
        description: New Script object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScriptLibEntry"
      responses:
        "200":
          description: a list of Script objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/scripts/{id}":
    get:
      tags:
        - scripts

      operationId: getScript
      summary: Get Script by ID
      description: Get Script by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Script objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - scripts

      operationId: updateScript
      summary: Update Script
      description: Update Script
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Script object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScriptLibEntry"
      responses:
        "200":
          description: a list of Script objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - scripts

      operationId: deleteScript
      summary: Delete Script
      description: Delete Script
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Script objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/jobs:
    get:
      tags:
        - search

      operationId: listSearchJobs
      summary: Get a list of SearchJob objects
      description: Get a list of SearchJob objects
      responses:
        "200":
          description: a list of SearchJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJobs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - search

      operationId: createSearchJob
      summary: Create SearchJob
      description: Create SearchJob
      requestBody:
        description: New SearchJob object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchJob"
      responses:
        "200":
          description: a list of SearchJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJob"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/jobs/{id}":
    get:
      tags:
        - search

      operationId: getSearchJob
      x-speakeasy-name-override: getJob
      summary: Get SearchJob by ID
      description: Get SearchJob by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of SearchJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJob"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - search

      operationId: updateSearchJob
      summary: Update SearchJob
      description: Update SearchJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: SearchJob object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchJob"
      responses:
        "200":
          description: a list of SearchJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJob"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - search

      operationId: deleteSearchJob
      summary: Delete SearchJob
      description: Delete SearchJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of SearchJob objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJob"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/jobs/{id}/dispatch-executors":
    post:
      tags:
        - search

      operationId: dispatchSearch
      summary: Dispatch search *id* to worker nodes filtered by
        worker node filter using RPC
      description: Dispatch search *id* to worker nodes filtered by
        worker node filter using RPC
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchId"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
  "/search/jobs/{id}/metrics":
    get:
      tags:
        - search

      operationId: listSearchJobMetrics
      summary: Get search job metrics
      description: Get search job metrics
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
  "/search/jobs/{id}/status":
    get:
      tags:
        - search

      operationId: listJobStatus
      summary: Get job status
      description: Get job status
      deprecated: false
      responses:
        "200":
          description: SearchJobStatus object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJobStatus"
        "401":
          description: Unauthorized
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
  "/search/jobs/{id}/timeline":
    get:
      tags:
        - search

      operationId: getSearchTimeline
      x-speakeasy-name-override: getTimeline
      summary: Get search timeline
      description: Get search timeline
      deprecated: false
      responses:
        "200":
          description: SearchTimeline object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTimeline"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
  "/search/jobs/{id}/field-summaries":
    get:
      tags:
        - search

      operationId: listFieldSummaries
      summary: List field summaries
      description: List field summaries
      deprecated: false
      responses:
        "200":
          description: FieldSummaries object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FieldSummaries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
  "/search/jobs/{id}/logs":
    get:
      tags:
        - search

      operationId: listSearchLogs
      summary: Get search logs
      description: Get search logs
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchLogs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
  /system/users:
    get:
      tags:
        - users

      operationId: listUsers
      summary: Get a list of User objects
      description: Get a list of User objects
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - users

      operationId: CreateUser
      x-speakeasy-entity-operation: User#create
      summary: Create User
      description: Create User
      requestBody:
        description: New User object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/users/{id}":
    get:
      tags:
        - users

      operationId: getUserID
      summary: Get User by ID
      description: Get User by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - users
      operationId: updateUserProperties
      x-speakeasy-name-override: updateProperties
      summary: Update User properties – admin use only
      description: Update User properties – admin use only
      deprecated: false
      responses:
        "200":
          description: a list of UserProfile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UserProfile object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
    delete:
      tags:
        - users

      operationId: deleteUserID
      summary: Delete User
      description: Delete User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/users/{id}/info":
    patch:
      tags:
        - users

      operationId: updateUserObject
      x-speakeasy-name-override: updateInfo
      summary: Update User except for their roles
      description: Update User except for their roles
      deprecated: false
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
  /lib/appscope-configs:
    get:
      tags:
        - appscope-configs

      operationId: listAppscopeLibEntries
      summary: Get a list of AppscopeLibEntry objects
      description: Get a list of AppscopeLibEntry objects
      responses:
        "200":
          description: a list of AppscopeLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppScopeLibEntries"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - appscope-configs

      operationId: createAppscopeLibEntry
      summary: Create AppscopeLibEntry
      description: Create AppscopeLibEntry
      requestBody:
        description: New AppscopeLibEntry object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppscopeLibEntry"
      responses:
        "200":
          description: a list of AppscopeLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppscopeLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/appscope-configs/{id}":
    get:
      tags:
        - appscope-configs

      operationId: getAppscopeLibEntry
      summary: Get AppscopeLibEntry by ID
      description: Get AppscopeLibEntry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of AppscopeLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppscopeLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - appscope-configs

      operationId: updateAppscopeLibEntry
      summary: Update AppscopeLibEntry
      description: Update AppscopeLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: AppscopeLibEntry object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppscopeLibEntry"
      responses:
        "200":
          description: a list of AppscopeLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppscopeLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - appscope-configs

      operationId: deleteAppscopeLibEntry
      summary: Delete AppscopeLibEntry
      description: Delete AppscopeLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of AppscopeLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppscopeLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/grok:
    get:
      tags:
        - grokfiles

      operationId: listGrokFiles
      summary: Get a list of GrokFile objects
      description: Get a list of GrokFile objects
      responses:
        "200":
          description: a list of GrokFile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrokFiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - grokfiles

      operationId: createGrokFile
      summary: Create GrokFile
      description: Create GrokFile
      requestBody:
        description: New GrokFile object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrokFile"
      responses:
        "200":
          description: a list of GrokFile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrokFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/grok/{id}":
    get:
      tags:
        - grokfiles

      operationId: getGrokFile
      summary: Get GrokFile by ID
      description: Get GrokFile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of GrokFile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrokFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - grokfiles

      operationId: updateGrokFile
      summary: Update GrokFile
      description: Update GrokFile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: GrokFile object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrokFile"
      responses:
        "200":
          description: a list of GrokFile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrokFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - grokfiles

      operationId: deleteGrokFile
      summary: Delete GrokFile
      description: Delete GrokFile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of GrokFile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrokFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/lookups:
    get:
      tags:
        - lookups

      operationId: listLookups
      summary: Get a list of LookupFile objects
      description: Get a list of LookupFile objects
      responses:
        "200":
          description: a list of LookupFile objects
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/LookupFiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - lookups

      operationId: createLookup
      summary: Create LookupFile
      description: Create LookupFile
      requestBody:
        description: New LookupFile object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
      responses:
        "200":
          description: a list of LookupFile objects
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/LookupFiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - lookups

      operationId: uploadLookup
      summary: Upload LookupFile
      description: Upload LookupFile
      deprecated: false
      responses:
        "200":
          description: LookupFileInfoResponse object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LookupFileInfoResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: query LookupFilenameSchema required Filename
  "/system/lookups/{id}":
    get:
      tags:
        - lookups

      operationId: getLookup
      summary: Get LookupFile by ID
      description: Get LookupFile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of LookupFile objects
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/LookupFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - lookups

      operationId: updateLookup
      summary: Update LookupFile
      description: Update LookupFile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: LookupFile object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
      responses:
        "200":
          description: a list of LookupFile objects
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/LookupFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - lookups

      operationId: deleteLookup
      summary: Delete LookupFile
      description: Delete LookupFile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of LookupFile objects
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/LookupFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/parsers:
    get:
      tags:
        - parsers

      operationId: listParser
      summary: Get a list of Parser objects
      description: Get a list of Parser objects
      responses:
        "200":
          description: a list of Parser objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParserLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - parsers

      operationId: postParserObject
      summary: Create Parser
      description: Create Parser
      requestBody:
        description: New Parser object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParserLibEntry"
      responses:
        "200":
          description: a list of Parser objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParserLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/parsers/{id}":
    get:
      tags:
        - parsers

      operationId: getParserID
      summary: Get Parser by ID
      description: Get Parser by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Parser objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParserLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - parsers

      operationId: updateParserID
      summary: Update Parser
      description: Update Parser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Parser object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParserLibEntry"
      responses:
        "200":
          description: a list of Parser objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParserLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - parsers

      operationId: deleteParserID
      summary: Delete Parser
      description: Delete Parser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Parser objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParserLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/regex:
    get:
      tags:
        - regexes

      operationId: listRegexLibEntryObject
      summary: Get a list of RegexLibEntry objects
      description: Get a list of RegexLibEntry objects
      responses:
        "200":
          description: a list of RegexLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegexLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - regexes

      operationId: postRegexLibEntry
      summary: Create RegexLibEntry
      description: Create RegexLibEntry
      requestBody:
        description: New RegexLibEntry object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegexLibEntry"
      responses:
        "200":
          description: a list of RegexLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegexLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/regex/{id}":
    get:
      tags:
        - regexes

      operationId: getRegexLibEntryID
      summary: Get RegexLibEntry by ID
      description: Get RegexLibEntry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of RegexLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegexLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - regexes

      operationId: updateRegexLibEntry
      summary: Update RegexLibEntry
      description: Update RegexLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: RegexLibEntry object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegexLibEntry"
      responses:
        "200":
          description: a list of RegexLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegexLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - regexes

      operationId: deleteRegexLibEntry
      summary: Delete RegexLibEntry
      description: Delete RegexLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of RegexLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegexLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/samples:
    get:
      tags:
        - samples

      operationId: listDataSample
      summary: Get a list of DataSample objects
      description: Get a list of DataSample objects
      responses:
        "200":
          description: a list of DataSample objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSamples"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - samples

      operationId: postDataSample
      summary: Create DataSample
      description: Create DataSample
      requestBody:
        description: New DataSample object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSample"
      responses:
        "200":
          description: a list of DataSample objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSamples"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/samples/{id}":
    get:
      tags:
        - samples

      operationId: getDataSampleID
      summary: Get DataSample by ID
      description: Get DataSample by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of DataSample objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSamples"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - samples

      operationId: updateDataSampleID
      summary: Update DataSample
      description: Update DataSample
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: DataSample object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSample"
      responses:
        "200":
          description: a list of DataSample objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSamples"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - samples

      operationId: deleteDataSampleID
      summary: Delete DataSample
      description: Delete DataSample
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of DataSample objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSamples"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/samples/{id}/content":
    get:
      tags:
        - samples

      operationId: getSampleContent
      x-speakeasy-name-override: getContent
      summary: Get sample content by ID
      description: Get sample content by ID
      deprecated: false
      responses:
        "200":
          description: a list of SampleContent objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleContents"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Sample ID
  /lib/database-connections:
    get:
      tags:
        - database-connections

      operationId: listDatabaseConnection
      summary: Get a list of DatabaseConnection objects
      description: Get a list of DatabaseConnection objects
      deprecated: false
      responses:
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseConnectionConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: databaseType
          in: query
          required: false
          schema:
            type: string
          description: type of database connection
    post:
      tags:
        - database-connections

      operationId: postDatabaseConnection
      summary: Create DatabaseConnectionConfig
      description: Create DatabaseConnectionConfig
      requestBody:
        description: New DatabaseConnectionConfig object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionConfig"
      responses:
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseConnectionConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/database-connections/{id}":
    get:
      tags:
        - database-connections

      operationId: getDatabaseConnectionConfigID
      summary: Get DatabaseConnectionConfig by ID
      description: Get DatabaseConnectionConfig by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseConnectionConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - database-connections

      operationId: updateDatabaseConnectionConfigID
      summary: Update DatabaseConnectionConfig
      description: Update DatabaseConnectionConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: DatabaseConnectionConfig object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionConfig"
      responses:
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseConnectionConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - database-connections

      operationId: deleteDatabaseConnectionConfigID
      summary: Delete DatabaseConnectionConfig
      description: Delete DatabaseConnectionConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseConnectionConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/database-connections/test:
    post:
      tags:
        - database-connections

      operationId: TestDatabaseConnection
      summary: Test a database connection given a type and connectionString
      description: Test a database connection given a type and connectionString
      deprecated: false
      responses:
        "200":
          description: a list of DatabaseConnectionTestResult objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseConnectionTestResults"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DatabaseConnectionTest object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionTest"
  /lib/breakers:
    get:
      tags:
        - event_breaker_rules

      operationId: listEventBreaker
      summary: Get a list of Event Breaker Ruleset objects
      description: Get a list of Event Breaker Ruleset objects
      responses:
        "200":
          description: a list of Event Breaker Ruleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventBreakerRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - event_breaker_rules

      operationId: postEventBreaker
      summary: Create Event Breaker Ruleset
      description: Create Event Breaker Ruleset
      requestBody:
        description: New Event Breaker Ruleset object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      responses:
        "200":
          description: a list of Event Breaker Ruleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventBreakerRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/breakers/{id}":
    get:
      tags:
        - event_breaker_rules

      operationId: getEventBreakerID
      summary: Get Event Breaker Ruleset by ID
      description: Get Event Breaker Ruleset by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Event Breaker Ruleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventBreakerRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - event_breaker_rules

      operationId: updateEventBreaker
      summary: Update Event Breaker Ruleset
      description: Update Event Breaker Ruleset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Event Breaker Ruleset object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      responses:
        "200":
          description: a list of Event Breaker Ruleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventBreakerRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - event_breaker_rules

      operationId: deleteEventBreaker
      summary: Delete Event Breaker Ruleset
      description: Delete Event Breaker Ruleset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Event Breaker Ruleset objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventBreakerRulesets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/vars:
    get:
      tags:
        - global_variables

      operationId: listGlobalVariable
      summary: Get a list of Global Variable objects
      description: Get a list of Global Variable objects
      responses:
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalVars"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - global_variables

      operationId: postGlobalVariable
      summary: Create Global Variable
      description: Create Global Variable
      requestBody:
        description: New Global Variable object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalVar"
      responses:
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalVars"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/vars/{id}":
    get:
      tags:
        - global_variables

      operationId: getGlobalVariableID
      summary: Get Global Variable by ID
      description: Get Global Variable by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalVars"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - global_variables

      operationId: updateGlobalVariableID
      summary: Update Global Variable
      description: Update Global Variable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Global Variable object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalVar"
      responses:
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalVars"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - global_variables

      operationId: deleteGlobalVariableID
      summary: Delete Global Variable
      description: Delete Global Variable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalVars"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/outputs:
    get:
      tags:
        - outputs

      operationId: listOutputObjects
      summary: Get a list of Output objects
      description: Get a list of Output objects
      responses:
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Outputs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - outputs

      operationId: createOutputObject
      summary: Create Output
      description: Create Output
      requestBody:
        description: New Output object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
      responses:
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Outputs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/outputs/{id}":
    get:
      tags:
        - outputs

      operationId: getOutputID
      summary: Get Output by ID
      description: Get Output by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Outputs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - outputs

      operationId: updateOutputID
      summary: Update Output
      description: Update Output
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Output object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
      responses:
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Outputs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - outputs

      operationId: deleteOutputID
      summary: Delete Output
      description: Delete Output
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Outputs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/outputs/{id}/pq":
    delete:
      tags:
        - outputs

      operationId: deleteDestinationQueue
      x-speakeasy-name-override: deletePQ
      summary: Delete destination persistent queue
      description: Delete destination persistent queue
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
    get:
      tags:
        - outputs

      operationId: getLatestPQ
      x-speakeasy-name-override: getLatestPQ
      summary: Get status of latest clear PQ job for an output
      description: Get status of latest clear PQ job for an output
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
  "/system/outputs/{id}/samples":
    get:
      tags:
        - outputs

      operationId: getSpecifiedOutput
      x-speakeasy-name-override: getSamples
      summary:
        Get samples data for the specified output. Used to get sample data
        for the test action.
      description: Get samples data for the specified output. Used to get sample
        data for the test action.
      deprecated: false
      responses:
        "200":
          description: a list of OutputSamplesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputSamplesResponse"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
  "/system/outputs/{id}/test":
    post:
      tags:
        - outputs

      operationId: postSampleOutput
      summary: Send sample data to an output to validate configuration or test
        connectivity
      description:
        Send sample data to an output to validate configuration or test
        connectivity
      deprecated: false
      responses:
        "200":
          description: a list of OutputTestResponse objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputTestResponses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: OutputTestRequest object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutputTestRequest"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
  /lib/parquet-schemas:
    get:
      tags:
        - parquetschemas

      operationId: listSchema
      summary: Get a list of Schema objects
      description: Get a list of Schema objects
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - parquetschemas

      operationId: postSchema
      summary: Create Schema
      description: Create Schema
      requestBody:
        description: New Schema object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/parquet-schemas/{id}":
    get:
      tags:
        - parquetschemas

      operationId: getSchemaID
      summary: Get Schema by ID
      description: Get Schema by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - parquetschemas

      operationId: updateSchemaID
      summary: Update Schema
      description: Update Schema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Schema object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - parquetschemas

      operationId: deleteSchemaID
      summary: Delete Schema
      description: Delete Schema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pipelines:
    get:
      tags:
        - pipelines

      operationId: listPipelineObject
      summary: Get a list of Pipeline objects
      description: Get a list of Pipeline objects
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pipelines"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - pipelines

      operationId: postCreatePipeline
      x-speakeasy-entity-operation: Pipeline#create
      summary: Create Pipeline
      description: Create Pipeline
      requestBody:
        description: New Pipeline object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pipelines"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/pipelines/{id}":
    get:
      tags:
        - pipelines

      operationId: getPipelineID
      x-speakeasy-entity-operation: Pipeline#get
      summary: Get Pipeline by ID
      description: Get Pipeline by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pipelines"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - pipelines

      operationId: updatePipelineID
      x-speakeasy-entity-operation: Pipeline#update
      summary: Update Pipeline
      description: Update Pipeline
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Pipeline object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pipelines"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - pipelines
      operationId: deletePipelineID
      x-speakeasy-entity-operation: Pipeline#delete
      summary: Delete Pipeline
      description: Delete Pipeline
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pipelines"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/profiler:
    get:
      tags:
        - profiler

      operationId: listProfilers
      summary: Get a list of ProfilerItem objects
      description: Get a list of ProfilerItem objects
      responses:
        "200":
          description: a list of ProfilerItem objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilerItems"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - profiler

      operationId: createProfiler
      summary: Create ProfilerItem
      description: Create ProfilerItem
      requestBody:
        description: New ProfilerItem object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfilerItem"
      responses:
        "200":
          description: a list of ProfilerItem objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilerItem"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/profiler/{id}":
    get:
      tags:
        - profiler

      operationId: getProfiler
      summary: Get ProfilerItem by ID
      description: Get ProfilerItem by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of ProfilerItem objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilerItem"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - profiler

      operationId: updateProfiler
      summary: Update ProfilerItem
      description: Update ProfilerItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: ProfilerItem object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfilerItem"
      responses:
        "200":
          description: a list of ProfilerItem objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilerItem"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - profiler

      operationId: deleteProfiler
      summary: Delete ProfilerItem
      description: Delete ProfilerItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of ProfilerItem objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilerItem"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/routes/{id}":
    get:
      tags:
        - routes

      operationId: getRouteListID
      summary: List all routes by id
      description: List all routes by id
      deprecated: false
      responses:
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Routes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "There is only one route entity and it should be accessed with id:
            default."
    patch:
      tags:
        - routes

      operationId: updateRouteObject
      summary: Add, delete or update the routes with the required content.
      description: Add, delete or update the routes with the required content.
      deprecated: false
      responses:
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Routes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: Routes object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "There is only one route entity and it should be accessed with id:
            default."
  /routes:
    get:
      tags:
        - routes

      operationId: listRouteLists
      summary: List all routes
      description: List all routes
      deprecated: false
      responses:
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Routes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/schemas:
    get:
      tags:
        - schemas

      operationId: listSchemas
      summary: Get a list of Schema objects
      description: Get a list of Schema objects
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - schemas

      operationId: createSchema
      summary: Create Schema
      description: Create Schema
      requestBody:
        description: New Schema object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/lib/schemas/{id}":
    get:
      tags:
        - schemas

      operationId: getSchema
      summary: Get Schema by ID
      description: Get Schema by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - schemas

      operationId: updateSchema
      summary: Update Schema
      description: Update Schema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: Schema object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - schemas

      operationId: deleteSchema
      summary: Delete Schema
      description: Delete Schema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaLibEntry"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/secrets:
    get:
      tags:
        - secrets

      operationId: listRestSecrets
      summary: Get a list of RestSecret objects
      description: Get a list of RestSecret objects
      responses:
        "200":
          description: a list of RestSecret objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestSecrets"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - secrets

      operationId: createRestSecret
      summary: Create RestSecret
      description: Create RestSecret
      requestBody:
        description: New RestSecret object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestSecret"
      responses:
        "200":
          description: a list of RestSecret objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestSecret"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/secrets/{id}":
    get:
      tags:
        - secrets

      operationId: getRestSecret
      summary: Get RestSecret by ID
      description: Get RestSecret by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of RestSecret objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestSecret"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - secrets

      operationId: updateRestSecret
      summary: Update RestSecret
      description: Update RestSecret
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: RestSecret object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestSecret"
      responses:
        "200":
          description: a list of RestSecret objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestSecret"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - secrets

      operationId: deleteRestSecret
      summary: Delete RestSecret
      description: Delete RestSecret
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of RestSecret objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestSecret"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/status/outputs:
    get:
      tags:
        - outputs

      operationId: listOutputStatus
      summary: Get a list of OutputStatus objects
      description: Get a list of OutputStatus objects
      responses:
        "200":
          description: a list of OutputStatus objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputStatuses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/status/outputs/{id}":
    get:
      tags:
        - outputs

      operationId: getOutputStatusID
      x-speakeasy-name-override: getStatus
      summary: Get OutputStatus by ID
      description: Get OutputStatus by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of OutputStatus objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputStatuses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/authorization-code/callback:
    get:
      tags:
        - auth

      operationId: getIDPAuth
      summary: Get IDP used for an authorization code callback
      parameters:
        - in: query
          description: Authorization Code
          name: code
          schema:
            type: string
        - in: query
          name: state
          schema:
            type: string
      responses:
        "200":
          description: Authorization success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/metadata:
    get:

      operationId: getCriblMetadata
      x-speakeasy-name-override: getMetadata
      summary: Obtain metadata which Cribl Stream/Edge uses when acting as a Service
        Provider
      tags:
        - auth
      responses:
        "200":
          description: Service Provider metadata
          content:
            text/xml:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/login:
    post:

      operationId: loginAuthToken
      summary: Log in and obtain Auth token
      description: "This endpoint is unavailable on Cribl.Cloud. Instead, get the
        Bearer token as detailed here:
        https://docs.cribl.io/stream/api-tutorials/#criblcloud-free-tier"
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInfo"
      security: []
      responses:
        "200":
          description: Authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/logout:
    post:
      summary: Log current user out
      tags:
        - auth

      operationId: logoutUserAuth
      responses:
        "200":
          description: Log out success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/slo/callback:
    post:
      tags:
        - auth

      operationId: logoutRequestUserAuth
      x-speakeasy-name-override: requestLogout
      summary: API call that the IDP should use for a logout request
      requestBody:
        description: Logout request object
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LogoutRequest"
      responses:
        "200":
          description: Logout success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - auth

      operationId: logoutIDPUserAuth
      x-speakeasy-name-override: IDPlogout
      summary: Accepts a logout request from an IDP and logs out the user
      parameters:
        - in: query
          description: Logout request object
          name: SAMLResponse
          schema:
            type: string
        - in: query
          name: RelayState
          schema:
            type: string
      responses:
        "200":
          description: Logout success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/slo:
    get:
      summary: Redirect user to IDP with logout request
      tags:
        - auth

      operationId: logoutRedirectUserAuth
      x-speakeasy-name-override: logoutRedirect
      responses:
        "200":
          description: SLO redirect info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
  /auth/sso/callback:
    post:
      tags:
        - auth

      operationId: postRequestAuth
      summary: API call that the IDP should use for an authentication request
      requestBody:
        description: Authentication request object
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SAMLResponse:
                  description: Authentication request object
                  type: string
                RelayState:
                  type: string
      responses:
        "200":
          description: Authentication success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - auth

      operationId: getRequestAuth
      x-speakeasy-name-override: acceptIDPRequest
      summary: Accepts an authentication request from an IDP and authenticates the user
      parameters:
        - in: query
          description: Authentication request object
          name: SAMLResponse
          schema:
            type: string
        - in: query
          name: RelayState
          schema:
            type: string
      responses:
        "200":
          description: Authentication success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/sso:
    get:
      summary: Obtain redirect information
      description: Obtain information needed to redirect users to the configured SSO
        IDP for authentication.
      tags:
        - auth

      operationId: getRedirectInfo
      x-speakeasy-name-override: getRedirect
      responses:
        "200":
          description: Redirect info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedirectInfo"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/groups:
    get:
      tags:
        - auth

      operationId: listAuthGroup
      summary: List the external authentication system's groups
      description: List the external authentication system's groups
      deprecated: false
      responses:
        "200":
          description: a list of CrudEntityBase objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrudEntityBases"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /authorize/policy:
    get:
      tags:
        - authorize

      operationId: listAuthorizations
      summary: get the client's authorization policy
      description: get the client's authorization policy
      deprecated: false
      responses:
        "200":
          description: a list of AuthPolicyEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthPolicyEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /authorize/roles:
    get:
      tags:
        - authorize

      operationId: listClientRoles
      summary: get the client's roles
      description: get the client's roles
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientRoleEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/capture:
    post:
      tags:
        - preview
        - samples

      operationId: postLiveData
      x-speakeasy-name-override: captureLiveData
      summary: Capture live incoming data
      description: Capture live incoming data
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiveData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CaptureParams object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
  /changelog/viewed:
    get:
      tags:
        - changelog

      operationId: listChangelogs
      summary: Get changelog viewed state
      description: Get changelog viewed state
      deprecated: false
      responses:
        "200":
          description: a list of ChangelogState objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangelogStates"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - system

      operationId: updateChangelogViewState
      x-speakeasy-name-override: updateChangelogViewState
      summary: Update changelog viewed state
      description: Update changelog viewed state
      deprecated: false
      responses:
        "200":
          description: a list of ChangelogState objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangelogStateses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /clui:
    get:
      tags:
        - clui

      operationId: listCluisResults
      summary: Get CLUI search results
      description: Get CLUI search results
      deprecated: false
      responses:
        "200":
          description: a list of CluiItem objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CluiItems"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search query
        - name: context
          in: query
          required: false
          schema:
            type: string
          description: Search query context, either "stream" or "edge"
  /conditions:
    get:
      tags:
        - conditions

      operationId: listConditions
      summary: Get a list of Condition objects
      description: Get a list of Condition objects
      responses:
        "200":
          description: a list of Condition objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conditions"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/conditions/{id}":
    get:
      tags:
        - conditions

      operationId: getCondition
      summary: Get Condition by ID
      description: Get Condition by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Condition objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conditions"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/event-breaker-preview:
    post:
      tags:
        - search

      operationId: postEventBreakerOnData
      summary: Runs an event breaker rule on the specified data
      description: Runs an event breaker rule on the specified data
      deprecated: false
      responses:
        "200":
          description: a list of PreviewResponseBody objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreviewResponses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DatatypePreviewRequestBody object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatatypePreviewRequestBody"
  "/system/distributed/upgrade/cancel/{group}":
    post:
      tags:
        - system

      operationId: cancelRunningGroup
      x-speakeasy-name-override: cancelRunningGroup
      summary: Cancel a running group upgrade
      description: Cancel a running group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelRunningGroup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: id of the group
  "/system/distributed/upgrade/download/{file}":
    get:
      tags:
        - system

      operationId: getPreviousCriblPackage
      x-speakeasy-name-override: getPreviousPackage
      summary: Get the previously downloaded Cribl package
      description: Get the previously downloaded Cribl package
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriblPackage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: file
          in: path
          required: true
          schema:
            type: string
          description: Name of the file to be downloaded
  "/system/distributed/upgrade/stage/{group}":
    post:
      tags:
        - system

      operationId: postStageDistributedPackage
      x-speakeasy-name-override: stageGroupUpgrade
      summary: Stage distributed group upgrade
      description: Stage distributed group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriblPackage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: Group to upgrade
        - name: upgradePercentage
          in: query
          required: false
          schema:
            type: string
          description: body number percentage of nodes on the worker group to upgrade
  "/system/distributed/upgrade/{group}":
    post:
      tags:
        - system

      operationId: ExecuteDistributedUpgrade
      x-speakeasy-name-override: executeGroupUpgrade
      summary: Execute distributed group upgrade
      description: Execute distributed group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriblPackage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: distributedUpgrade object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DistributedUpgradeRequest"
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: Group to upgrade
  /edge/events/collectors:
    get:
      tags:
        - edgeEvents
        - edge

      operationId: listConfiguredCollectors
      summary: Get list of configured collectors
      description: Get list of configured collectors
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfiguredCollectors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/events/query:
    get:
      tags:
        - events

      operationId: listEvents
      summary: Get events generated by a specified source
      description: Get events generated by a specified source
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: Files
          in: query
          required: false
          schema:
            type: string
          description: Optional parameter, when provided the files and provided offsets
            are used to look for events.
        - name: source
          in: query
          required: false
          schema:
            type: string
          description: The type of source events to search in the format {type}/{subtype}
            i.e system_state/hostsfile, system_state/routes, etc...
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
  /edge/fileinspect:
    get:
      tags:
        - edgeFiles
        - edge

      operationId: listEdgeHostFiles
      summary: Get details about a file on the edge host.
      description: Get details about a file on the edge host.
      deprecated: false
      responses:
        "200":
          description: a list of EdgeFileInspectResponse objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeHostFiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/edge/ls{path}":
    get:
      tags:
        - edgeLs
        - edge

      operationId: getEdgeListing
      x-speakeasy-name-override: getDirectoryListing
      summary: Get a directory listing of the given path
      description: Get a directory listing of the given path
      deprecated: false
      responses:
        "200":
          description: a list of FilesystemEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilesystemEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
  /edge/metadata:
    get:
      tags:
        - edge

      operationId: getHostMetadataStructure
      x-speakeasy-name-override: getMetadata
      summary: Get the host's metadata structure
      description: Get the host's metadata structure
      deprecated: false
      responses:
        "200":
          description: a list of EdgeMetadata objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeMetadatas"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lib/expression:
    post:
      tags:
        - expressions

      operationId: postJavascriptExpression
      summary: Evaluate JavaScript expression
      description: Evaluate JavaScript expression
      deprecated: false
      responses:
        "200":
          description: a list of ExprLibEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExprLibEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/file/sample:
    get:
      tags:
        - fileSampler
        - edge

      operationId: listBytes
      summary: Get some number of bytes from the file at the given path
      description: Get some number of bytes from the file at the given path
      deprecated: false
      responses:
        "200":
          description: a list of SampleFile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleFiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
          description: The path to the file to sample
        - name: bytesRequested
          in: query
          required: false
          schema:
            type: integer
          description: The number of bytes to return;   this value could be constrained by
            system limits.
  /health:
    get:

      operationId: getHealthInfo
      summary: Provides health info for REST server
      security: []
      tags:
        - health
      responses:
        "200":
          description: Healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
        "420":
          description: Shutting Down
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
  "/jobs/{id}/results/":
    get:
      tags:
        - jobs

      operationId: listJobResults
      summary: Get results for a discover job by instance id
      description: Get results for a discover job by instance id
      responses:
        "200":
          description: Get results for a discover job by instance id
          content:
            application/x-ndjson:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
  "/jobs/{id}/cancel":
    patch:
      tags:
        - jobs

      operationId: cancelJob
      summary: Cancel a job by instance id
      description: Cancel a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCancel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
  /jobs:
    post:
      tags:
        - jobs

      operationId: runJob
      summary: Run or schedule a job
      description: Run or schedule a job
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobRun"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SavedJob object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedJob"
    get:
      tags:
        - jobs

      operationId: listJobInfos
      summary: Get info on jobs
      description: Get info on jobs
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Pagination offset
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of items to return
        - name: runType
          in: query
          required: false
          schema:
            type: string
          description: Filter by job run type, one of "adhoc", "scheduled", "system"
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: Filter by current job state, e.g. "running"
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: Filter by job id, e.g. "id=1608713335.3&id=1608713326.1"
        - name: collectorId
          in: query
          required: false
          schema:
            type: string
          description: Filter by collector id, e.g. "collectorId=Prometheus-in"
  "/jobs/{id}":
    delete:
      tags:
        - jobs

      operationId: deleteJob
      summary: Remove job from job inspector by instance id
      description: Remove job from job inspector by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobDelete"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
    get:
      tags:
        - jobs

      operationId: getJob
      summary: Get job info by instance id
      description: Get job info by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
  "/jobs/{id}/keep":
    patch:
      tags:
        - jobs

      operationId: preventJob
      summary: prevent job from being deleted automatically
      description: prevent job from being deleted automatically
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job Instance id
  "/jobs/{id}/pause":
    patch:
      tags:
        - jobs

      operationId: pauseJob
      summary: Pause a job by instance id
      description: Pause a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobPause"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
  "/jobs/{id}/resume":
    patch:
      tags:
        - jobs

      operationId: resumeJob
      summary: Resume a job by instance id
      description: Resume a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobResume"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
  "/jobs/{id}/results/{group}":
    get:
      tags:
        - jobs

      operationId: getJobResult
      x-speakeasy-name-override: getResult
      summary: Get results for a discover job by instance id
      description: Get results for a discover job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobResult"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Instance id of the job to get results for
        - name: maxFiles
          in: query
          required: false
          schema:
            type: integer
          description: Maximum files to get job results
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: Group the job belongs to
  "/jobs/{id}/errors/{group}":
    get:
      tags:
        - jobs

      operationId: listTaskErrors
      summary: Get Task errors for a job by id
      description: Get Task errors for a job by id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskErrors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Instance id of the job to get results for
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: Group the job belongs to
  "/jobs/{id}/errors/":
    get:
      tags:
        - jobs

      operationId: getTaskError
      x-speakeasy-name-override: getError
      summary: Get Task errors for a job by id
      description: Get Task errors for a job by id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskErrors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Instance id of the job to get results for
  /security/kms/config:
    get:
      tags:
        - security

      operationId: getKMSConfig
      x-speakeasy-name-override: getKMSConfig
      summary: Get Cribl KMS config
      description: Get Cribl KMS config
      deprecated: false
      responses:
        "200":
          description: a list of IKMSProviderConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - security

      operationId: updateKMSConfig
      summary: Update Cribl KMS config
      description: Update Cribl KMS config
      deprecated: false
      responses:
        "200":
          description: a list of IKMSProviderConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IKMSProviderConfig"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: IKMSProviderConfig object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IKMSProviderConfig"
  /security/kms/health:
    get:
      tags:
        - security

      operationId: getKMSHealth
      x-speakeasy-name-override: getKMSHealth
      summary: Get Cribl KMS health
      description: Get Cribl KMS health
      deprecated: false
      responses:
        "200":
          description: a list of IKMSHealth objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSHealth"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/licenses:
    get:
      tags:
        - licenses

      operationId: listLicenses
      summary: Get a list of License objects
      description: Get a list of License objects
      responses:
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Licenses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - licenses

      operationId: createLicense
      summary: Create License
      description: Create License
      requestBody:
        description: New License object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/License"
      responses:
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/License"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/licenses/{id}":
    get:
      tags:
        - licenses

      operationId: getLicense
      summary: Get License by ID
      description: Get License by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/License"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - licenses

      operationId: deleteLicense
      summary: Delete License
      description: Delete License
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/License"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/licenses/usage:
    get:
      tags:
        - licenses

      operationId: listLicenseUsageMetrics
      summary: Get license usage metrics, aggregated by day, up to last 90 days
      description: Get license usage metrics, aggregated by day, up to last 90 days
      deprecated: false
      responses:
        "200":
          description: a list of DailyUsageMetrics objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyMetrics"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/logger:
    get:
      tags:
        - logger

      operationId: listLoggerConfigs
      summary: Get a list of LoggerConfig objects
      description: Get a list of LoggerConfig objects
      responses:
        "200":
          description: a list of LoggerConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoggerConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/logger/{id}":
    get:
      tags:
        - logger

      operationId: getLoggerConfig
      summary: Get LoggerConfig by ID
      description: Get LoggerConfig by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of LoggerConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoggerConfig"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - logger

      operationId: updateLoggerConfig
      summary: Update LoggerConfig
      description: Update LoggerConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      requestBody:
        description: LoggerConfig object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoggerConfig"
      responses:
        "200":
          description: a list of LoggerConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoggerConfig"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - logger

      operationId: deleteLoggerConfig
      summary: Delete LoggerConfig
      description: Delete LoggerConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of LoggerConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoggerConfig"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/jobs/logs/{id}/{groupId}":
    get:
      tags:
        - logging

      operationId: listLogFileContents
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogFileContents"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job id
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Offset in the current log file to fetch the log events from.
        - name: endOffset
          in: query
          required: false
          schema:
            type: integer
          description: in the current log file to fetch the log events upto.
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          description: Group ID (optional)
  "/system/logs/{id}":
    get:
      tags:
        - logging

      operationId: getLogFileContent
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogFileContents"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Log ID
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
        - name: endOffset
          in: query
          required: false
          schema:
            type: integer
          description: in the current log file to fetch the log events upto.
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
  /system/logs:
    get:
      tags:
        - logging

      operationId: listLogFiles
      summary: Get a list of log files
      description: Get a list of log files
      deprecated: false
      responses:
        "200":
          description: a list of LogFileInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogFilesInfo"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/logs/search:
    get:
      tags:
        - logging

      operationId: listLogFilesContents
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogFileContents"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
          description: type of logs request single multi group
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: id of the group to query
        - name: files
          in: query
          required: false
          schema:
            type: string
          description: query string[] optional file or files to query
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
  /master/bundles:
    get:
      summary: Get list of existing diag bundles
      tags:
        - distributed

      operationId: listDiagBundles
      responses:
        "200":
          description: Get list of existing diag bundles
          content:
            application/tar+gzip:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid path
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: File is missing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /master/summary:
    get:
      tags:
        - distributed

      operationId: getDistributedDeployment
      summary: Get summary of Distributed deployment
      description: Get summary of Distributed deployment
      deprecated: false
      responses:
        "200":
          description: a list of DistributedSummary objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DistributedSummaries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: mode
          in: query
          required: false
          schema:
            type: string
          description: Filter for worker/group type, either "worker" for Stream or
            "managed-edge" for Edge
  /master/summary/workers:
    get:
      tags:
        - workers

      operationId: getWorkerEdgeNodesCount
      summary: get worker and edge nodes count
      description: get worker and edge nodes count
      deprecated: false
      responses:
        "200":
          description: a list of number objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerEdgeNodes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: filterExp
          in: query
          required: false
          schema:
            type: string
          description: Filter expression evaluated against nodes
  /master/workers:
    get:
      tags:
        - workers

      operationId: listWorkerEdgeNodes
      summary: get worker and edge nodes
      description: get worker and edge nodes
      deprecated: false
      responses:
        "200":
          description: a list of MasterWorkerEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterWorkerEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: filterExp
          in: query
          required: false
          schema:
            type: string
          description: Filter expression evaluated against nodes
        - name: sortExp
          in: query
          required: false
          schema:
            type: string
          description: Sorting expression evaluated against nodes
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of nodes to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Pagination offset
  /master/workers/restart:
    patch:
      tags:
        - workers

      operationId: restartsWorkerEdgeNodes
      summary: restarts worker nodes
      description: restarts worker nodes
      deprecated: false
      responses:
        "200":
          description: a list of RestartResponse objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestartResponses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /packs:
    post:
      tags:
        - packs

      operationId: installPack
      summary: Install Pack
      description: Install Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CrudEntityBase object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrudEntityBase"
    get:
      tags:
        - packs

      operationId: listPacks
      summary: Get info on packs
      description: Get info on packs
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - packs

      operationId: uploadPack
      summary: Upload Pack
      description: Upload Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: the file to upload
  "/packs/{id}":
    delete:
      tags:
        - packs

      operationId: uninstallPack
      summary: Uninstall Pack from the system
      description: Uninstall Pack from the system
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
    patch:
      tags:
        - packs

      operationId: upgradePack
      summary: Upgrade Pack
      description: Upgrade Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
        - name: source
          in: query
          required: false
          schema:
            type: string
          description: body string required Pack source
        - name: minor
          in: query
          required: false
          schema:
            type: string
          description: body boolean optional Only upgrade to minor/patch versions
        - name: spec
          in: query
          required: false
          schema:
            type: string
          description: body string optional Specify a branch, tag or a semver spec
  /packs/__clone__:
    post:
      tags:
        - packs

      operationId: clonePack
      summary: Clone Pack
      description: Clone Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PackClone object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackClone"
  "/packs/{id}/export":
    get:
      tags:
        - packs

      operationId: exportPack
      summary: Export Pack
      description: Export Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
        - name: mode
          in: query
          required: true
          schema:
            type: string
          description: Export mode, one of "merge_safe", "merge", "default_only"
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: Filename of the exported Pack
  /preview:
    post:
      tags:
        - preview
        - samples

      operationId: postSampleEvents
      x-speakeasy-name-override: sendEvents
      summary: Sends sample events through a pipeline and returns the results
      description: Sends sample events through a pipeline and returns the results
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiveData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PreviewDataParams object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewDataParams"
  /system/processes:
    get:
      tags:
        - processes

      operationId: listProcesses
      summary: Get a list of processes under management
      description: Get a list of processes under management
      deprecated: false
      responses:
        "200":
          description: a list of ProcessEntry objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessEntries"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/docs:
    get:
      tags:
        - search

      operationId: getSearchDoc
      summary: Get Search documentation
      description: Get Search documentation
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/preview:
    post:
      tags:
        - search

      operationId: applyQuerySnippet
      summary: Applies a query snippet on a set of input events for preview
      description: Applies a query snippet on a set of input events for preview
      deprecated: false
      responses:
        "200":
          description: a list of PreviewResponseBody objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreviewResponses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PreviewRequestBody object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewRequestBody"
  /system/diag/download:
    get:
      summary: Returns a diag bundle as a tar.gz archive
      tags:
        - diag

      operationId: getDiagBundle
      responses:
        "200":
          description: A tar.gz file consisting all configuration files and recent logs
          content:
            application/tar+gzip:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/info:
    get:
      tags:
        - diag

      operationId: getSystemInfo
      x-speakeasy-name-override: getSystemInfo
      summary: Get basic system information
      description: Get basic system information
      deprecated: false
      responses:
        "200":
          description: a list of SystemInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemInfoObjects"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/diag:
    get:
      tags:
        - diag

      operationId: listExistingDiagBundles
      summary: Get list of existing diag bundles
      description: Get list of existing diag bundles
      deprecated: false
      responses:
        "200":
          description: a list of Diag objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExistingDiag"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - diag

      operationId: deleteDiagBundle
      summary: Remove diag bundle
      description: Remove diag bundle
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveDiagResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
          description: Diag bundle path
  /system/diag/send:
    post:
      tags:
        - diag

      operationId: sendDiagBundle
      summary: Send a diag bundle (tar.gz archive) to Cribl
      description: Send a diag bundle (tar.gz archive) to Cribl
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveDiagResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SendDiagBundle object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendDiagBundle"
  /system/metrics/enum:
    post:
      tags:
        - metrics

      operationId: postMetrics
      summary: Enumerate all internal system metrics
      description: Enumerate all internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of MetricNameInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsInfo"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GetNamesOpts object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNamesOpts"
  /system/metrics:
    get:
      tags:
        - metrics

      operationId: queryMetrics
      summary: Query raw internal system metrics
      description: Query raw internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of MetricNameInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsInfo"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: numBuckets
          in: query
          required: false
          schema:
            type: integer
          description: buckets in the past to include in the query results
        - name: earliest
          in: query
          required: false
          schema:
            type: integer
          description: earliest time to query against
        - name: latest
          in: query
          required: false
          schema:
            type: integer
          description: latest time to query against
        - name: metricNameFilter
          in: query
          required: false
          schema:
            type: string
          description: can be a regex or an array of metric names
        - name: filterExpr
          in: query
          required: false
          schema:
            type: string
          description: a js expression to apply against the metrics returned (can filter
            dimensions)
  /system/metrics/query:
    post:
      tags:
        - metrics

      operationId: postInternalSystemMetrics
      x-speakeasy-name-override: aggregate
      summary: Aggregate raw internal system metrics
      description: Aggregate raw internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: MetricsAggOpts object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricsAggOpts"
  /system/settings/reload:
    post:

      operationId: ReloadCriblSettings
      summary: Reload Cribl settings from the filesystem
      tags:
        - system
      responses:
        "200":
          description: Success
        "500":
          description: Internal error
  /system/settings/restart:
    post:

      operationId: restartCriblSettings
      summary: Restart Cribl server
      tags:
        - system
      responses:
        "200":
          description: Success
        "500":
          description: Internal error
  /system/settings/auth:
    get:
      tags:
        - system

      operationId: listAuthenticationSettings
      summary: Get authentication settings
      description: Get authentication settings
      deprecated: false
      responses:
        "200":
          description: a list of AuthConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - system

      operationId: updateAuthenticationSettings
      x-speakeasy-name-override: updateAuthSettings
      summary: Update authentication settings
      description: Update authentication settings
      deprecated: false
      responses:
        "200":
          description: a list of AuthConfig objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthConfigs"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/conf:
    get:
      tags:
        - system

      operationId: listSettings
      summary: Get Cribl system settings
      description: Get Cribl system settings
      deprecated: false
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemSettings"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - system

      operationId: updateCriblSystemSettings
      x-speakeasy-name-override: updateCriblSettings
      summary: Update Cribl system settings
      description: Update Cribl system settings
      deprecated: false
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemSettingses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/git-settings:
    get:
      tags:
        - git

      operationId: listGitSettings
      summary: Get git settings
      description: Get git settings
      deprecated: false
      responses:
        "200":
          description: a list of GitSettings objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitSettingsResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - git

      operationId: updateGitSettings
      summary: Update git settings
      description: Update git settings
      deprecated: false
      responses:
        "200":
          description: a list of GitSettings objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitSettings"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/search-limits:
    get:
      tags:
        - system

      operationId: listSearchLimits
      summary: Get search limits
      description: Get search limits
      deprecated: false
      responses:
        "200":
          description: a list of SearchSettings objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSettingses"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings:
    get:
      tags:
        - system
      operationId: getCriblsSettings
      summary: "Get Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/redis-cache-limits,
        /system/services-limits, /system/settings/git-settings, and
        /system/settings/conf respectively"
      description: "Get Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/redis-cache-limits,
        /system/services-limits, /system/settings/git-settings, and
        /system/settings/conf respectively"
      deprecated: true
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitSettings"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - system

      operationId: updateCriblsSettings
      summary: "Update Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/settings/git-settings,
        /system/settings/auth and /system/settings/conf respectively"
      description: "Update Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/settings/git-settings,
        /system/settings/auth and /system/settings/conf respectively"
      deprecated: true
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitSettings"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/upgrade:
    get:
      tags:
        - system

      operationId: listCriblVersion
      summary: Get a list of Cribl versions available for upgrade
      description: Get a list of Cribl versions available for upgrade
      deprecated: false
      responses:
        "200":
          description: a list of UpgradeResult objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpgradeResults"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/settings/upgrade/{version}":
    post:
      tags:
        - system

      operationId: postGiveCriblVersion
      x-speakeasy-name-override: upgradeCribl
      summary: Upgrade Cribl to a given version
      description: Upgrade Cribl to a given version
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cribl"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Version number
  /system/settings/upgrade-from-package:
    post:
      tags:
        - system

      operationId: postMasterNodePackage
      x-speakeasy-name-override: upgradeMaster
      summary: Upgrade master node with the provided package
      description: Upgrade master node with the provided package
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cribl"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: upgradeMaster object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpgradeMasterRequest"
  /search/trust-policies:
    get:
      tags:
        - trust-policies

      operationId: listTrustPolicies
      summary: Get a list of TrustPolicy objects
      description: Get a list of TrustPolicy objects
      responses:
        "200":
          description: a list of TrustPolicy objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustPolicies"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/trust-policies/{id}": {}
  "/ui/{key}":
    get:
      tags:
        - uiState

      operationId: getUIState
      summary: Get UI state by key
      description: Get UI state by key
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UIStates"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: UI state key
    patch:
      tags:
        - uiState

      operationId: updateUIState
      summary: Update UI state by key
      description: Update UI state by key
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UIStates"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UI State Patch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UiStatePatch"
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: UI state key
  /version/branch:
    get:
      tags:
        - versioning
        - git

      operationId: listBranches
      summary: get the list of branches
      description: get the list of branches
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branches"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/commit:
    post:
      tags:
        - versioning
        - git

      operationId: createCommit
      summary: create a new commit containing the current configs the given log
        message describing the changes.
      description: create a new commit containing the current configs the given log
        message describing the changes.
      deprecated: false
      responses:
        "200":
          description: a list of GitCommitSummary objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitCommit"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GitCommitParams object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitCommitParams"
  /version/count:
    get:
      tags:
        - versioning
        - git

      operationId: getCountFile
      x-speakeasy-name-override: CountFiles
      summary: get the count of files of changed
      description: get the count of files of changed
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountFile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
  /version/diff:
    get:
      tags:
        - versioning
        - git

      operationId: getTextualDiff
      x-speakeasy-name-override: getTextualDiff
      summary: get the textual diff for given commit
      description: get the textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextualDiff"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: commit
          in: query
          required: false
          schema:
            type: string
          description: Commit hash (default is HEAD)
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
  /version/files:
    get:
      tags:
        - versioning
        - git

      operationId: listChangedFiles
      summary: get the files changed
      description: get the files changed
      deprecated: false
      responses:
        "200":
          description: a list of GitFilesResponse objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangedFiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: Commit ID
  /version/info:
    get:
      tags:
        - versioning
        - git

      operationId: getVersioning
      summary: Get info about versioning availability
      description: Get info about versioning availability
      deprecated: false
      responses:
        "200":
          description: a list of GitInfo objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitInfos"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/push:
    post:
      tags:
        - versioning
        - git

      operationId: pushCurrentConfig
      summary: push the current configs to the remote repository.
      description: push the current configs to the remote repository.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PushConfig"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/show:
    get:
      tags:
        - versioning
        - git

      operationId: getLogandTextualDiff
      x-speakeasy-name-override: getLogandTextualDiff
      summary: get the log message and textual diff for given commit
      description: get the log message and textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextualDiff"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: commit
          in: query
          required: false
          schema:
            type: string
          description: Commit hash (default is HEAD)
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
  /version/status:
    get:
      tags:
        - versioning
        - git

      operationId: getWorkingTree
      x-speakeasy-name-override: getWorkingTree
      summary: get the the working tree status
      description: get the the working tree status
      deprecated: false
      responses:
        "200":
          description: a list of GitStatusResult objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitStatusResults"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
  /version/sync:
    post:
      tags:
        - versioning
        - git

      operationId: syncRemoteRepo
      summary: syncs with remote repo via POST requests
      description: syncs with remote repo via POST requests
      deprecated: false
      responses:
        "200":
          description: a list of GitStatusResult objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitStatusResults"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/edge/containers/{id}":
    get:
      tags:
        - edgeContainers

      operationId: getContainer
      summary: Get details for a single container on the edge host. Add stream=true to
        get a stream instead.
      description: Get details for a single container on the edge host. Add
        stream=true to get a stream instead.
      deprecated: false
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Container objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Containers"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/containers:
    get:
      tags:
        - edgeContainers

      operationId: listContainerDetail
      summary: Get a detailed list of containers running on the edge host.
      description: Get a detailed list of containers running on the edge host.
      deprecated: false
      responses:
        "200":
          description: a list of Container objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Containers"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/logs:
    get:
      tags:
        - edge

      operationId: listLogFileList
      x-speakeasy-name-override: listLogFiles
      summary: list log files
      description: list log files
      deprecated: false
      responses:
        "200":
          description: a list of EdgeFile objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeFiles"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: mode
          in: query
          required: false
          schema:
            type: string
          description: Discovery Mode (default is "auto")
        - name: allow
          in: query
          required: false
          schema:
            type: string
          description: query array[string] optional List of allowed-filename wildcard
            patterns
        - name: path
          in: query
          required: false
          schema:
            type: string
          description: Search directory for "manual" mode
        - name: depth
          in: query
          required: false
          schema:
            type: integer
          description: Search depth for "manual" mode
  "/edge/processes/{pid}":
    get:
      tags:
        - edgeProcesses
        - edge

      operationId: getProcessRunningDetail
      x-speakeasy-name-override: getRunDetails
      summary: Get details of a process running on the edge host
      description: Get details of a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of Process objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Processes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
  /edge/processes:
    get:
      tags:
        - edgeProcesses
        - edge

      operationId: listProcessRunningDetail
      summary: Get a detailed list of processes running on the edge host
      description: Get a detailed list of processes running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of Process objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Processes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /collectors:
    get:
      tags:
        - collectors

      operationId: listCollectorObject

      summary: Get a list of Collector objects
      description: Get a list of Collector objects
      responses:
        "200":
          description: a list of Collector objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collectors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/collectors/{id}":
    get:
      tags:
        - collectors

      operationId: getCollector
      summary: Get Collector by ID
      description: Get Collector by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Collector objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collectors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /executors:
    get:
      tags:
        - executors

      operationId: listExecutorObject
      summary: Get a list of Executor objects
      description: Get a list of Executor objects
      responses:
        "200":
          description: a list of Executor objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Executors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/executors/{id}":
    get:
      tags:
        - executors

      operationId: getExecutorID
      summary: Get Executor by ID
      description: Get Executor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Executor objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Executors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /functions:
    get:
      tags:
        - functions

      operationId: listObjectFunction
      summary: Get a list of Function objects
      description: Get a list of Function objects
      responses:
        "200":
          description: a list of Function objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Functions"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/functions/{id}":
    get:
      tags:
        - functions

      operationId: getFunctionID
      summary: Get Function by ID
      description: Get Function by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID
      responses:
        "200":
          description: a list of Function objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Functions"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    GitInfos:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitInfo"
    CountFile:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    MetricsResponse:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    UIStates:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    TrustPolicies:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/TrustPolicy"
    Cribl:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: string
    CriblPackage:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    CancelRunningGroup:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    GlobalVars:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/GlobalVar"
    DatabaseConnectionTestResults:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/DatabaseConnectionTestResult"
    DatabaseConnectionConfigs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/DatabaseConnectionConfig"
    Processes:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/Process"
    EdgeFiles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/EdgeFile"
    EdgeMetadatas:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/EdgeMetadata"
    FilesystemEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/FilesystemEntry"
    UpgradeResults:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/UpgradeResult"
    SearchSettingses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/SearchSettings"
    SystemSettingses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/SystemSettings"
    AuthConfigs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/AuthConfig"
    ChangelogStateses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/ChangelogStates"
    ExprLibEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/ExprLibEntry"
    RegexLibEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/RegexLibEntry"
    EventBreakerRulesets:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
      items:
        type: array
        items:
          $ref: "#/components/schemas/EventBreakerRuleset"
    Containers:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Container"
    GitStatusResults:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitStatusResult"
    PushConfig:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    ChangedFiles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitFilesResponse"
    TextualDiff:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    GitCommit:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitCommitSummary"
    Branches:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    GitSettingsResponse:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitSettings"
    KMSHealth:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/IKMSHealth"
    KMSConfigs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/IKMSProviderConfig"
    TaskErrors:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    JobResult:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    JobResume:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    JobPause:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    JobDelete:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    JobInfos:
      type: object
      properties:
        offset:
          type: integer
          description: pagination offset
        limit:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          description: the pre-limited items in the list of results
          items:
            $ref: "#/components/schemas/JobInfo"
    JobRun:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: string
    JobCancel:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    SampleFiles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/SampleFile"
    EdgeHostFiles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/EdgeFileInspectResponse"
    Events:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    ConfiguredCollectors:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    ChangelogStates:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/ChangelogState"
    ClientRoleEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: string
    AuthPolicyEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
    RestSecrets:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/RestSecret"
    SchemaLibEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/SchemaLibEntry"
    ProfilerItems:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProfilerItem"
    ParserLibEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/ParserLibEntry"
    SampleContents:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/SampleContent"
    DataSamples:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/DataSample"
    OutputStatuses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/OutputStatus"
    OutputTestResponses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/OutputTestResponse"
    Outputs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Output"
    InputStatuses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/InputStatus"
    Inputs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Input"
    MetricsInfo:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/MetricNameInfo"
    RemoveDiagResponse:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    ExistingDiag:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Diag"
    SystemInfoObjects:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/SystemInfo"
    PreviewResponses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/PreviewResponseBody"
    ProcessEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProcessEntry"
    PackInfos:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/PackInfo"
    RestartResponses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/RestartResponse"
    MasterWorkerEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/MasterWorkerEntry"
    WorkerEdgeNodes:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: integer
    DistributedSummaries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/DistributedSummary"
    LogFilesInfo:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/LogFileInfo"
    LogFileContents:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    LoggerConfigs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/LoggerConfig"
    DailyMetrics:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/DailyUsageMetrics"
    Licenses:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/License"
    LiveData:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    Users:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/User"
    UserProfiles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/UserProfile"
    Pipelines:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Pipeline"
    Executors:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Executor"
    Collectors:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Collector"
    Functions:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Function"
    CrudEntityBases:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/CrudEntityBase"
    CluiItems:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/CluiItem"
    LogoutRequest:
      type: object
      properties:
        SAMLResponse:
          description: Logout request object
          type: string
        RelayState:
          type: string
    LookupFiles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/LookupFile"
    GrokFiles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/GrokFile"
    AppScopeLibEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/AppscopeLibEntry"
    SearchLogs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: string
    SearchId:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: object
            additionalProperties: true
    SearchJobs:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/SearchJob"
    ScriptLibEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/ScriptLibEntry"
    SavedQueries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/SavedQuery"
    Conditions:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Condition"
    SavedJobs:
          type: object
          properties:
            count:
              type: integer
              description: number of items present in the items array
            items:
              type: array
              items:
                $ref: "#/components/schemas/SavedJob"
    Roles:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    PolicyRules:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/PolicyRule"
    NotificationTargets:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/NotificationTarget"
    BulletinMessages:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/BulletinMessage"
    KeyMetadataEntities:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/KeyMetadataEntity"
    GroupBundle:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            type: string
    ConfigGroups:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/ConfigGroup"
    MappingRulesets:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/MappingRuleset"
    FeaturesEntries:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/FeaturesEntry"
    Datasets:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Dataset"
    DatasetProviderTypes:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/DatasetProviderType"
    Certificates:
      type: object
      properties:
        count:
          type: integer
          description: number of items present in the items array
        items:
          type: array
          items:
            $ref: "#/components/schemas/Certificate"
    Success:
      type: object
      properties:
        message:
          type: string
          description: Success message
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
    Certificate:
      type: object
      required:
        - id
        - cert
        - privKey
      properties:
        id:
          type: string
          title: Name
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Name of the certificate.
        description:
          type: string
          title: Description
          description: Brief description of this certificate. Optional.
        cert:
          type: string
          title: Certificate
          description: Drag/drop or upload host certificate, in PEM/Base64 format. Or
            paste its contents here.
        privKey:
          type: string
          title: Private key
          description: Certificate private key.
        passphrase:
          type: string
          title: Passphrase
          description: Passphrase. Optional.
        ca:
          type: string
          title: CA certificate
          description: Optionally, drag/drop or upload all CA certificate(s) in PEM/Base64
            format. Or paste certs' contents here. Certs can be used for client
            and/or server auth.
        inUse:
          type: array
          title: Referenced
          description: List of configurations referencing this certificate.
          items:
            type: string
    ProviderType:
      type: string
      enum:
        - mm-heap
        - quicksort
        - merge
        - invalid
    DatasetOrigin:
      type: object
      properties: {}
    OriginConfig:
      type: object
      properties:
        filterExpression:
          type: string
        origin:
          $ref: "#/components/schemas/DatasetOrigin"
      required:
        - origin
    DatasetProviderType:
      type: object
      properties:
        description:
          type: string
        id:
          $ref: "#/components/schemas/ProviderType"
        locality:
          $ref: "#/components/schemas/OriginConfig"
      required:
        - id
    Dataset: {}
    FeaturesEntry:
      type: object
      properties:
        disabled:
          type: boolean
        id:
          type: string
      required:
        - disabled
        - id
    MappingRuleset:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          title: ID
          description: Ruleset ID
        conf:
          type: object
          additionalProperties: false
          properties:
            functions:
              title: Functions
              description: List of functions to pass data through
              type: array
              items:
                type: object
                additionalProperties: true
        active:
          type: boolean
    Commit:
      type: object
      properties:
        author_email:
          type: string
        author_name:
          type: string
        date:
          type: string
        hash:
          type: string
        message:
          type: string
        short:
          type: string
      required:
        - date
        - hash
        - message
        - short
    ConfigGroup:
      type: object
      properties:
        configVersion:
          type: string
        description:
          type: string
        estimatedIngestRate:
          type: integer
        git:
          type: object
          properties:
            commit:
              type: string
            localChanges:
              type: integer
            log:
              type: array
              items:
                $ref: "#/components/schemas/Commit"
        id:
          type: string
        inherits:
          type: string
        isFleet:
          type: boolean
        isSearch:
          type: boolean
        name:
          type: string
        onPrem:
          type: boolean
        provisioned:
          type: boolean
        sourceGroupId:
          type: string
        tags:
          type: string
        workerCount:
          type: integer
        workerRemoteAccess:
          type: boolean
      required:
        - configVersion
        - id
    DeployRequest:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    KeyMetadataEntity:
      type: object
      required:
        - keyId
        - algorithm
        - kms
        - keyclass
      properties:
        keyId:
          type: string
          title: Key ID
        description:
          type: string
          title: Description
        algorithm:
          type: string
          title: Encryption Algorithm
          default: aes-256-cbc
          enum:
            - aes-256-cbc
            - aes-256-gcm
        kms:
          type: string
          title: KMS for this key
          default: local
          enum:
            - local
        keyclass:
          type: integer
          title: Key Class
          default: 0
          minimum: 0
        created:
          type: integer
          title: Creation time
        expires:
          type: integer
          title: Expiration time
        plainKey:
          type: string
          title: Plain text key
        cipherKey:
          type: string
          title: Encrypted key
        useIV:
          type: boolean
          title: Use initialization vector
          description: Seed encryption with a
            [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) to make
            the key more random and unique. Must be toggled on with the
            aes-256-gcm algorithm.
          default: false
    BulletinMessage:
      type: object
      additionalProperties: false
      required:
        - id
        - text
      properties:
        id:
          type: string
          title: Message ID
        severity:
          type: string
          title: Severity
          enum:
            - info
            - warn
            - error
            - fatal
        title:
          type: string
          title: Title
        text:
          type: string
          title: Text
        time:
          type: integer
          title: Occurrence Time
        group:
          type: string
          title: Group
        metadata:
          type: array
          items:
            type: object
    NotificationTargetBase:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          title: Output Type
          enum:
            - default
            - webhook
            - bulletin_message
            - router
            - notifications_log
            - pager_duty
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_host
          items:
            type: string
    NotificationTargetDefault:
      type: object
      required:
        - defaultId
      properties:
        type:
          type: string
          enum:
            - default
        defaultId:
          type: string
          title: Default Output ID
          description: ID of the default output. This will be used whenever a
            nonexistent/deleted output is referenced.
    NotificationTargetWebhook:
      type: object
      required:
        - url
      properties:
        type:
          type: string
          enum:
            - webhook
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
        method:
          type: string
          title: Method
          description: The method to use when sending events. Defaults to POST.
          enum:
            - POST
            - PUT
            - PATCH
          default: POST
        format:
          type: string
          title: Format
          description: Specifies how to format events before sending out. Defaults to
            NDJSON.
          enum:
            - custom
            - json_array
          default: json_array
        keepAlive:
          type: boolean
          title: Keep alive
          description: Toggle to No if you want @{product} to close the connection as soon
            as the outgoing request is sent. Defaults to Yes.
          default: true
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 512000
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically
            on a per-event basis in the __headers field, as explained
            [here](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        authType:
          type: string
          title: Authentication type
          description: The authentication method to use for the HTTP request. Defaults to
            None.
          enum:
            - none
            - basic
            - token
          default: none
    NotificationTargetRouter:
      type: object
      required:
        - rules
      properties:
        type:
          type: string
          enum:
            - router
        rules:
          type: array
          title: Rules
          description: Event routing rules
          minItems: 1
          items:
            type: object
            required:
              - filter
              - output
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression to select events to send to output
              output:
                type: string
                title: Output
                description: Output to send matching events to
              description:
                type: string
                title: Description
                description: Description of this rule's purpose
              final:
                type: boolean
                title: Final
                description: Flag to control whether to stop the event from being checked
                  against other rules
                default: true
    NotificationTargetBulletinMessage:
      type: object
      properties:
        type:
          type: string
          enum:
            - bulletin_message
        severity:
          type: string
          title: Severity
          description: Default value for message severity, will be overwritten by value of
            __severity if set. Defaults to warn.
          default: warn
          enum:
            - error
            - warn
            - info
            - fatal
        text:
          type: string
          title: Text
          description: Text of the message
          default: Notification has been triggered
        title:
          type: string
          title: Title
          description: Title of the message
          default: Notification
    NotificationTargetNotificationsLog:
      type: object
      properties:
        type:
          type: string
          enum:
            - notifications_log
        logsDir:
          type: string
          title: Logs directory
          description: Directory in which to store the notification log
    NotificationTargetPagerDuty:
      type: object
      required:
        - routingKey
      properties:
        type:
          type: string
          enum:
            - pager_duty
        routingKey:
          type: string
          title: Routing key
          description: This is the 32 character Integration Key for an integration on a
            service or on a global ruleset.
        group:
          type: string
          title: Group
          description: Optional, default group value
        class:
          type: string
          title: Class
          description: Optional, default class value
        component:
          type: string
          title: Component
          description: Optional, default component value
          default: logstream
        severity:
          type: string
          title: Severity
          description: Default value for message severity, will be overwritten by value of
            __severity if set. Defaults to info.
          default: info
          enum:
            - error
            - warning
            - info
            - critical
    NotificationTarget:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          title: Output Type
          enum:
            - default
            - webhook
            - bulletin_message
            - router
            - notifications_log
            - pager_duty
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_host
          items:
            type: string
      oneOf:
        - $ref: "#/components/schemas/NotificationTargetBase"
        - $ref: "#/components/schemas/NotificationTargetDefault"
        - $ref: "#/components/schemas/NotificationTargetWebhook"
        - $ref: "#/components/schemas/NotificationTargetBulletinMessage"
        - $ref: "#/components/schemas/NotificationTargetRouter"
        - $ref: "#/components/schemas/NotificationTargetNotificationsLog"
        - $ref: "#/components/schemas/NotificationTargetPagerDuty"
    PolicyRule:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        description:
          type: string
        id:
          type: string
        template:
          type: array
          items:
            type: string
      required:
        - id
        - template
    Role:
      type: object
      properties:
        id:
          type: string
        policy:
          type: array
          items:
            type: string
      required:
        - id
        - policy
    SavedJobCollection:
      required:
        - collector
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Unique ID for this Job.
        type:
          type: string
          title: Job type
          description: Job type.
          enum:
            - collection
            - executor
            - scheduledSearch
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        removeFields:
          type: array
          title: Remove Discover fields
          description: "List of fields to remove from Discover results. Wildcards (e.g.:
            aws*) are allowed. This is useful when discovery returns sensitive
            fields that should not be exposed in the Jobs user interface."
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results.
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resumes the ad hoc job if a failure condition causes Stream to
            restart during job execution.
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job.
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Determines whether or not this schedule is enabled.
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job.
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: integer
              title: Max concurrent runs
              description: The maximum number of instances that may be running of this
                scheduled job at any given time.
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits.
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              required:
                - modes
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors.
                  default: true
                maxTaskReschedule:
                  type: integer
                  title: Max task reschedule
                  description: Max number of times a task can be rescheduled.
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log Level
                  description: Level at which to set task logging.
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                    Units are seconds, if not specified. Enter 0 for unlimited
                    time.
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  description: Time range for scheduled job.
                  default: relative
                earliest:
                  type: integer
                  title: Earliest
                  description: Earliest time, for the given Range Timezone.
                latest:
                  type: integer
                  title: Latest
                  description: Latest time, for the given Range Timezone.
                timestampTimezone:
                  type: string
                  title: Range Timezone
                  description: Timezone to use for Earliest and Latest times (defaults to UTC).
                  default: UTC
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: Limits the bundle size for small tasks. E.g., bundle five 200KB
                    files into one 1M task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: Limits the bundle size for files above the Lower task bundle size.
                    E.g., bundle five 2MB files into one 10MB task bundle.
                    Files greater than this size will be assigned to
                    individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled tasks are created and run by the same worker node.
          default: false
        collector:
          type: object
          required:
            - type
            - conf
          properties:
            type:
              type: string
              title: Collector type
              description: The type of collector to run.
            conf:
              type: object
              title: Collector-specific settings.
              properties: {}
            destructive:
              type: boolean
              title: Destructive
              description: If set to Yes, the collector will delete any files that it collects
                (where applicable).
              default: false
        input:
          type: object
          properties:
            type:
              type: string
              enum:
                - collection
              default: collection
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event breaking rulesets that will be applied, in order,
                to the input data stream.
              items:
                type: string
            staleChannelFlushMs:
              type: integer
              title: Event Breaker buffer timeout (ms)
              description: The amount of time (in milliseconds) the Event Breaker will wait
                for new data to be sent to a specific channel, before flushing
                the data stream out, as-is, to the Pipelines.
              default: 10000
              minimum: 10
              maximum: 43200000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: If set to Yes, events will be sent to normal routing and event
                processing. Set to No if you want to select a specific
                Pipeline/Destination combination.
              default: true
            preprocess:
              type: object
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  description: Enable Custom Command
                  default: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output
                    (stdout)
                args:
                  type: array
                  title: Arguments
                  description: Arguments
                  items:
                    type: string
            throttleRatePerSec:
              type: string
              title: Throttling
              description: Rate (in bytes per second) to throttle while writing to an output.
                Also takes values with multiple-byte units, such as KB, MB, GB,
                etc. (E.g., 42 MB.) Default value of 0 specifies no throttling.
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: Field name
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes
                      or backticks. (Can evaluate to a constant.)
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results.
            output:
              type: string
              title: Destination
              description: Destination to send results to.
      type: object
    SavedJobExecutor:
      required:
        - executor
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Unique ID for this Job.
        type:
          type: string
          title: Job type
          description: Job type.
          enum:
            - collection
            - executor
            - scheduledSearch
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        removeFields:
          type: array
          title: Remove Discover fields
          description: "List of fields to remove from Discover results. Wildcards (e.g.:
            aws*) are allowed. This is useful when discovery returns sensitive
            fields that should not be exposed in the Jobs user interface."
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results.
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resumes the ad hoc job if a failure condition causes Stream to
            restart during job execution.
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job.
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Determines whether or not this schedule is enabled.
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job.
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: integer
              title: Max concurrent runs
              description: The maximum number of instances that may be running of this
                scheduled job at any given time.
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits.
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              required:
                - modes
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors.
                  default: true
                maxTaskReschedule:
                  type: integer
                  title: Max task reschedule
                  description: Max number of times a task can be rescheduled.
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log Level
                  description: Level at which to set task logging.
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                    Units are seconds, if not specified. Enter 0 for unlimited
                    time.
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  description: Time range for scheduled job.
                  default: relative
                earliest:
                  type: integer
                  title: Earliest
                  description: Earliest time, for the given Range Timezone.
                latest:
                  type: integer
                  title: Latest
                  description: Latest time, for the given Range Timezone.
                timestampTimezone:
                  type: string
                  title: Range Timezone
                  description: Timezone to use for Earliest and Latest times (defaults to UTC).
                  default: UTC
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: Limits the bundle size for small tasks. E.g., bundle five 200KB
                    files into one 1M task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: Limits the bundle size for files above the Lower task bundle size.
                    E.g., bundle five 2MB files into one 10MB task bundle.
                    Files greater than this size will be assigned to
                    individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        executor:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Executor type
              description: The type of executor to run.
            storeTaskResults:
              type: boolean
              title: Store task results
              description: Determines whether or not to write task results to disk.
              default: true
            conf:
              type: object
              title: Executor-specific settings.
              properties: {}
      type: object
    SavedJobScheduledSearch:
      required:
        - savedQueryId
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Unique ID for this Job.
        type:
          type: string
          title: Job type
          description: Job type.
          enum:
            - collection
            - executor
            - scheduledSearch
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        removeFields:
          type: array
          title: Remove Discover fields
          description: "List of fields to remove from Discover results. Wildcards (e.g.:
            aws*) are allowed. This is useful when discovery returns sensitive
            fields that should not be exposed in the Jobs user interface."
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results.
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resumes the ad hoc job if a failure condition causes Stream to
            restart during job execution.
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job.
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Determines whether or not this schedule is enabled.
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job.
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: integer
              title: Max concurrent runs
              description: The maximum number of instances that may be running of this
                scheduled job at any given time.
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits.
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              required:
                - modes
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors.
                  default: true
                maxTaskReschedule:
                  type: integer
                  title: Max task reschedule
                  description: Max number of times a task can be rescheduled.
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log Level
                  description: Level at which to set task logging.
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                    Units are seconds, if not specified. Enter 0 for unlimited
                    time.
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  description: Time range for scheduled job.
                  default: relative
                earliest:
                  type: integer
                  title: Earliest
                  description: Earliest time, for the given Range Timezone.
                latest:
                  type: integer
                  title: Latest
                  description: Latest time, for the given Range Timezone.
                timestampTimezone:
                  type: string
                  title: Range Timezone
                  description: Timezone to use for Earliest and Latest times (defaults to UTC).
                  default: UTC
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: Limits the bundle size for small tasks. E.g., bundle five 200KB
                    files into one 1M task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: Limits the bundle size for files above the Lower task bundle size.
                    E.g., bundle five 2MB files into one 10MB task bundle.
                    Files greater than this size will be assigned to
                    individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        savedQueryId:
          type: string
          title: ID of the SavedQuery
          description: Identifies which search query to run
      type: object
    SavedJob:
      oneOf:
        - $ref: "#/components/schemas/SavedJobCollection"
        - $ref: "#/components/schemas/SavedJobExecutor"
        - $ref: "#/components/schemas/SavedJobScheduledSearch"
    SavedQuerySchedule:
      type: object
      properties:
        cronSchedule:
          type: string
        enabled:
          type: boolean
        keepLastN:
          type: integer
        tz:
          type: string
      required:
        - cronSchedule
        - enabled
        - keepLastN
        - tz
    SavedQuery:
      type: object
      properties:
        description:
          type: string
        earliest:
          type: string
        id:
          type: string
        latest:
          type: string
        name:
          type: string
        query:
          type: string
        sampleRate:
          type: integer
        schedule:
          $ref: "#/components/schemas/SavedQuerySchedule"
        user:
          type: string
      required:
        - id
        - name
        - query
    ScriptLibEntry:
      type: object
      additionalProperties: true
      required:
        - id
        - command
      properties:
        id:
          type: string
          title: ID
        command:
          type: string
          title: Command
          description: Command to execute for this script
        description:
          type: string
          title: Description
          description: Brief description of this script. Optional.
        args:
          type: array
          items:
            type: string
          title: Arguments
          description: Arguments to pass when executing this script
        env:
          type: object
          title: Env Variables
          properties: {}
          additionalProperties:
            type: string
          description: Extra environment variables to set when executing script
    Legend:
      type: object
      properties: {}
    ChartType:
      type: object
      properties: {}
    ChartSeries:
      type: object
      properties:
        color:
          type: string
        data:
          type: array
          items:
            type: object
            additionalProperties: true
        dataExpression:
          type: string
        dataFilter:
          type: object
          additionalProperties: true
        name:
          type: string
        type:
          $ref: "#/components/schemas/ChartType"
      required:
        - data
        - dataExpression
        - name
    Settings:
      type: object
      properties:
        color:
          type: string
        colorPalette:
          type: integer
        type:
          type: string
      required:
        - colorPalette
        - type
    SingleValue:
      type: object
      properties:
        color:
          type: string
        decimals:
          type: integer
        label:
          type: string
        prefix:
          type: string
        suffix:
          type: string
        type:
          type: string
    AxisLabel:
      type: object
      properties:
        formatter:
          type: object
        formatterData:
          type: array
          items:
            type: integer
    Axis:
      type: object
      properties:
        axisLabel:
          $ref: "#/components/schemas/AxisLabel"
        type:
          type: string
    ChartConfig:
      type: object
      properties:
        axis:
          type: object
          properties:
            xAxis:
              type: string
            yAxis:
              type: array
              items:
                type: string
        legend:
          $ref: "#/components/schemas/Legend"
        series:
          type: array
          items:
            $ref: "#/components/schemas/ChartSeries"
        settings:
          $ref: "#/components/schemas/Settings"
        singleValue:
          $ref: "#/components/schemas/SingleValue"
        xAxis:
          $ref: "#/components/schemas/Axis"
      required:
        - singleValue
    CPUTimeMetric:
      type: object
      properties:
        totalCPUSeconds:
          type: integer
        totalExecCPUSeconds:
          type: integer
      required:
        - totalCPUSeconds
        - totalExecCPUSeconds
    EventBreakerRuleset:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          title: ID
          pattern: ^[a-zA-Z0-9\-_ ]+$
        lib:
          type: string
          title: Library
          enum:
            - custom
          default: custom
        description:
          type: string
          title: Description
          description: Brief description of this ruleset. Optional.
        tags:
          type: string
          title: Tags
          description: One or more tags related to this ruleset. Optional.
        minRawLength:
          type: integer
          title: Min Raw Length
          description: Threshold number of characters in _raw to determine which rule to
            use.
          default: 256
          minimum: 50
          maximum: 100000
        rules:
          type: array
          title: Rules
          description: List of rules. Evaluated in order, top down.
          items:
            type: object
            required:
              - name
              - type
              - condition
              - timestampAnchorRegex
              - timestamp
            properties:
              name:
                type: string
                title: Rule Name
              condition:
                type: string
                title: Filter Condition
                description: Filter expression (JS) that matches data to apply rule to. To test
                  your sample, use the maximize icon on the right.
                default: "true"
              type:
                type: string
                title: Event Breaker Type
                enum:
                  - regex
                  - json
                  - json_array
                  - header
                  - timestamp
                  - csv
                description: Event Breaker Type
                default: regex
              timestampAnchorRegex:
                type: string
                title: Timestamp Anchor
                description: Regex to match before attempting timestamp extraction. Use $ (end
                  of string anchor) to not perform extraction.
                default: /^/
              timestamp:
                type: object
                required:
                  - type
                title: Timestamp Format
                description: Auto, manual format (strptime) or current time.
                properties:
                  type:
                    type: string
                    title: Timestamp Type
                    default: auto
                    enum:
                      - auto
                      - format
                      - current
                  length:
                    type: integer
                    title: Length
                    minimum: 2
                    default: 150
                  format:
                    type: string
                    title: Format
              timestampTimezone:
                type: string
                title: Default timezone
                description: Timezone to assign to timestamps without timezone info.
                default: local
              timestampEarliest:
                title: Earliest timestamp allowed
                description: The earliest timestamp value allowed relative to now. E.g.,
                  -42years. Parsed values prior to this date will be set to
                  current time.
                type: string
                default: -420weeks
              timestampLatest:
                title: Future timestamp allowed
                description: The latest timestamp value allowed relative to now. E.g., +42days.
                  Parsed values after this date will be set to current time.
                type: string
                default: +1week
              maxEventBytes:
                type: integer
                title: Max Event Bytes
                description: The maximum number of bytes that an event can be before being
                  flushed to the pipelines
                default: 51200
                minimum: 1
                maximum: 134217728
              fields:
                title: Fields
                description: Key value pairs to be added to each event.
                type: array
                items:
                  type: object
                  required:
                    - value
                  properties:
                    name:
                      type: string
                      title: Name
                      description: Field Name.
                    value:
                      type: string
                      title: Value Expression
                      description: JavaScript expression to compute fields value (can be constant).
              disabled:
                title: Disabled
                type: boolean
                default: false
                description: Allows breaker rule to be enabled or disabled, default is enabled.
              parserEnabled:
                title: Parser
                type: boolean
                default: false
                description: Parser.
              definitions:
                type: object
                properties:
                  dstField:
                    title: Destination field
                    description: Name of the field to add fields to. Extract mode only.
                    type: string
                  fields:
                    title: List of fields
                    description: Fields expected to be extracted, in order. If not specified, Parser
                      will auto-generate.
                    type: array
                    items:
                      type: string
                  keep:
                    title: Fields to keep
                    description: List of fields to keep. Supports wildcards (*). Takes precedence
                      over 'Fields to Remove'.
                    type: array
                    items:
                      type: string
                  remove:
                    title: Fields to remove
                    description: List of fields to remove. Supports wildcards (*). Cannot remove
                      fields that match 'Fields to Keep'.
                    type: array
                    items:
                      type: string
                  fieldFilterExpr:
                    title: Fields filter expression
                    description: Expression evaluated against {index, name, value} context. Return
                      truthy to keep a field, or falsy to remove it.
                    type: string
                    x-fieldFilterExpr: true
    DatatypeOverrides:
      type: object
      properties:
        breakerRulesets:
          type: array
          items:
            $ref: "#/components/schemas/EventBreakerRuleset"
        disableBreakers:
          type: boolean
      required:
        - disableBreakers
    SearchJobErrorStateConfig:
      type: object
      properties:
        coordinated:
          type: boolean
        errorMessages:
          type: array
          items:
            type: string
      required:
        - coordinated
        - errorMessages
    SearchTerm:
      type: object
      properties:
        isCaseSensitive:
          type: boolean
        term:
          type: string
      required:
        - isCaseSensitive
        - term
    SortByField:
      type: object
      properties:
        direction:
          type: string
          enum:
            - ascending
            - descending
        fieldName:
          type: string
        nullPosition:
          type: string
          enum:
            - nullsFirst
            - nullsLast
      required:
        - direction
        - fieldName
        - nullPosition
    SearchConfig:
      type: object
      properties:
        datasets:
          type: array
          items:
            type: string
        hasSendOperator:
          type: boolean
        orderedFieldNames:
          type: array
          items:
            type: string
        searchTerms:
          type: array
          items:
            $ref: "#/components/schemas/SearchTerm"
        sortFields:
          type: array
          items:
            $ref: "#/components/schemas/SortByField"
        suppressEventMarking:
          type: boolean
        useFormattedVisualization:
          type: boolean
      required:
        - datasets
        - hasSendOperator
        - orderedFieldNames
        - searchTerms
        - suppressEventMarking
        - useFormattedVisualization
    SearchParameterValue: {}
    SearchParameterType:
      type: string
      enum:
        - string
        - number
        - boolean
    SearchParameter:
      type: object
      properties:
        defaultValue:
          $ref: "#/components/schemas/SearchParameterValue"
        name:
          type: string
        type:
          $ref: "#/components/schemas/SearchParameterType"
      required:
        - name
        - type
    SearchParameters: {}
    SearchJobStatus:
      type: string
      enum:
        - new
        - running
        - completed
        - failed
        - canceled
        - queued
    ColumnSetting: {}
    ColumnFilterSettings:
      type: object
      properties:
        contains:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - contains
    ColumnFormatSettings:
      type: object
      properties:
        palette:
          $ref: "#/components/schemas/ColumnSetting"
        precision:
          $ref: "#/components/schemas/ColumnSetting"
        prefix:
          $ref: "#/components/schemas/ColumnSetting"
        suffix:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - palette
        - precision
        - prefix
        - suffix
    ColumnOrderSettings:
      type: object
      properties:
        order:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - order
    ColumnSortSettings:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - sort
    TableViewSettings:
      type: object
      properties:
        columnFilterSettings:
          $ref: "#/components/schemas/ColumnFilterSettings"
        columnFormatSettings:
          $ref: "#/components/schemas/ColumnFormatSettings"
        columnOrderSettings:
          $ref: "#/components/schemas/ColumnOrderSettings"
        columnSortSettings:
          $ref: "#/components/schemas/ColumnSortSettings"
        rowNumberColumnWidth:
          type: integer
        showColumnTotals:
          type: boolean
        showColumnTotalsPinned:
          type: boolean
        showRowNumbers:
          type: boolean
        showRowTotals:
          type: boolean
        showRowTotalsPinned:
          type: boolean
        viewMode:
          type: string
          enum:
            - event
            - table
      required:
        - showColumnTotals
        - showColumnTotalsPinned
        - showRowNumbers
        - showRowTotals
        - showRowTotalsPinned
        - viewMode
    SearchJobType:
      type: string
      enum:
        - standard
        - datatypePreview
        - scheduled
    SearchJob:
      type: object
      properties:
        chartConfig:
          $ref: "#/components/schemas/ChartConfig"
        compatibilityChecks:
          type: object
          properties:
            datatypes:
              type: boolean
          
        correlationId:
          type: string
        cpuMetrics:
          $ref: "#/components/schemas/CPUTimeMetric"
        datatypeOverrides:
          $ref: "#/components/schemas/DatatypeOverrides"
        earliestEpoch:
          type: integer
        errorStateConfig:
          $ref: "#/components/schemas/SearchJobErrorStateConfig"
        group:
          type: string
        id:
          type: string
        latestEpoch:
          type: integer
        numEventsAfter:
          type: integer
        numEventsBefore:
          type: integer
        query:
          type: string
        sampleRate:
          type: integer
        searchConfig:
          $ref: "#/components/schemas/SearchConfig"
        searchParameterDeclarations:
          type: array
          items:
            $ref: "#/components/schemas/SearchParameter"
        searchParameterValues:
          $ref: "#/components/schemas/SearchParameters"
        status:
          $ref: "#/components/schemas/SearchJobStatus"
        tableConfig:
          $ref: "#/components/schemas/TableViewSettings"
        targetEventTime:
          type: integer
        timeCompleted:
          type: integer
        timeCreated:
          type: integer
        timeStarted:
          type: integer
        type:
          $ref: "#/components/schemas/SearchJobType"
        user:
          type: string
      required:
        - group
        - id
        - query
        - searchConfig
        - status
        - timeCreated
        - user
    Bucket:
      type: object
      properties:
        earliest:
          type: integer
        eventCount:
          type: integer
      required:
        - duration
        - earliest
        - eventCount
    SearchTimeline:
      type: object
      properties:
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        totalEventCount:
          type: integer
      required:
        - buckets
        - totalEventCount
    TopValue:
      type: object
      properties:
        count:
          type: integer
        value:
          type: string
      required:
        - count
        - value
    FieldType:
      type: string
      enum:
        - array
        - boolean
        - number
        - object
        - string
        - timestamp
    Field:
      type: object
      properties:
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        count:
          type: integer
        countDistinct:
          type: integer
        countNull:
          type: integer
        mean:
          type: integer
        name:
          type: string
        size:
          type: integer
        stdev:
          type: integer
        topValues:
          type: array
          items:
            $ref: "#/components/schemas/TopValue"
        type:
          $ref: "#/components/schemas/FieldType"
      required:
        - buckets
        - count
        - countDistinct
        - countNull
        - size
        - topValues
        - type
    FieldSummaries:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"
        partial:
          type: boolean
        totalEventCount:
          type: integer
      required:
        - fields
        - totalEventCount
    User:
      type: object
      x-speakeasy-entity-operation: User
      properties:
        currentPassword:
          type: string
        disabled:
          type: boolean
        email:
          type: string
        first:
          type: string
        id:
          type: string
        last:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
        username:
          type: string
      required:
        - disabled
        - email
        - first
        - id
        - last
        - username
    UserProfile:
      type: object
      properties:
        disabled:
          type: boolean
        email:
          type: string
        first:
          type: string
        id:
          type: string
        last:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
        username:
          type: string
      required:
        - disabled
        - email
        - first
        - id
        - last
        - username
    AppscopeTransport:
      type: object
      properties:
        buffer:
          type: string
          enum:
            - line
            - full
        host:
          type: string
        path:
          type: string
        port:
          type: integer
        tls:
          type: object
          properties:
            cacertpath:
              type: string
            enable:
              type: boolean
            validateserver:
              type: boolean
        type:
          type: string
    AppscopeConfig:
      type: object
      properties:
        cribl:
          type: object
          properties:
            authtoken:
              type: string
            enable:
              type: boolean
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            useScopeSourceTransport:
              type: boolean
        event:
          type: object
          properties:
            enable:
              type: boolean
            format:
              type: object
              properties:
                enhancefs:
                  type: boolean
                maxeventpersec:
                  type: integer
              required:
                - enhancefs
                - maxeventpersec
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            type:
              type: string
              enum:
                - ndjson
            watch:
              type: array
              items:
                type: object
                properties:
                  allowbinary:
                    type: boolean
                  enabled:
                    type: boolean
                  field:
                    type: string
                  headers:
                    type: string
                  name:
                    type: string
                  type:
                    type: string
                  value:
                    type: string
                required:
                  - type
          required:
            - enable
            - format
            - transport
            - type
            - watch
        libscope:
          type: object
          properties:
            commanddir:
              type: string
            configevent:
              type: boolean
            log:
              type: object
              properties:
                level:
                  type: string
                  enum:
                    - debug
                    - info
                    - warning
                    - error
                    - none
                transport:
                  $ref: "#/components/schemas/AppscopeTransport"
            summaryperiod:
              type: integer
        metric:
          type: object
          properties:
            enable:
              type: boolean
            format:
              type: object
              properties:
                statsdmaxlen:
                  type: integer
                statsdprefix:
                  type: string
                type:
                  type: string
                verbosity:
                  type: integer
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            watch:
              type: array
              items:
                type: string
          required:
            - enable
            - format
            - transport
            - watch
        payload:
          type: object
          properties:
            dir:
              type: string
            enable:
              type: boolean
          required:
            - dir
            - enable
        protocol:
          type: array
          items:
            type: object
            properties:
              binary:
                type: boolean
              detect:
                type: boolean
              len:
                type: integer
              name:
                type: string
              payload:
                type: boolean
              regex:
                type: string
            required:
              - binary
              - detect
              - len
              - name
              - payload
              - regex
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            required:
              - key
              - value
    AppscopeCustom:
      type: object
      properties:
        ancestor:
          type: string
        arg:
          type: string
        config:
          $ref: "#/components/schemas/AppscopeConfig"
        env:
          type: string
        hostname:
          type: string
        procname:
          type: string
        username:
          type: string
      required:
        - config
    AppscopeConfigWithCustom:
      type: object
      properties:
        cribl:
          type: object
          properties:
            authtoken:
              type: string
            enable:
              type: boolean
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            useScopeSourceTransport:
              type: boolean
        custom:
          type: array
          items:
            $ref: "#/components/schemas/AppscopeCustom"
        event:
          type: object
          properties:
            enable:
              type: boolean
            format:
              type: object
              properties:
                enhancefs:
                  type: boolean
                maxeventpersec:
                  type: integer
              required:
                - enhancefs
                - maxeventpersec
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            type:
              type: string
              enum:
                - ndjson
            watch:
              type: array
              items:
                type: object
                properties:
                  allowbinary:
                    type: boolean
                  enabled:
                    type: boolean
                  field:
                    type: string
                  headers:
                    type: string
                  name:
                    type: string
                  type:
                    type: string
                  value:
                    type: string
                required:
                  - type
          required:
            - enable
            - format
            - transport
            - type
            - watch
        libscope:
          type: object
          properties:
            commanddir:
              type: string
            configevent:
              type: boolean
            log:
              type: object
              properties:
                level:
                  type: string
                  enum:
                    - debug
                    - info
                    - warning
                    - error
                    - none
                transport:
                  $ref: "#/components/schemas/AppscopeTransport"
            summaryperiod:
              type: integer
        metric:
          type: object
          properties:
            enable:
              type: boolean
            format:
              type: object
              properties:
                statsdmaxlen:
                  type: integer
                statsdprefix:
                  type: string
                type:
                  type: string
                verbosity:
                  type: integer
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            watch:
              type: array
              items:
                type: string
          required:
            - enable
            - format
            - transport
            - watch
        payload:
          type: object
          properties:
            dir:
              type: string
            enable:
              type: boolean
          required:
            - dir
            - enable
        protocol:
          type: array
          items:
            type: object
            properties:
              binary:
                type: boolean
              detect:
                type: boolean
              len:
                type: integer
              name:
                type: string
              payload:
                type: boolean
              regex:
                type: string
            required:
              - binary
              - detect
              - len
              - name
              - payload
              - regex
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            required:
              - key
              - value
    CriblLib:
      type: string
      enum:
        - cribl
        - cribl-custom
        - custom
    AppscopeLibEntry:
      type: object
      properties:
        config:
          $ref: "#/components/schemas/AppscopeConfigWithCustom"
        description:
          type: string
        id:
          type: string
        lib:
          $ref: "#/components/schemas/CriblLib"
        tags:
          type: string
      required:
        - config
        - description
        - id
        - lib
    GrokFile:
      type: object
      properties:
        content:
          type: string
        id:
          type: string
        size:
          type: integer
        tags:
          type: string
      required:
        - content
        - id
        - size
    LookupFile:
      type: object
      required:
        - id
      properties:
        id:
          title: Filename
          description: Filename with the lookup table. Required.
          type: string
          pattern: ^\s*\w[\w -]+(?:\.csv|\.gz|\.csv\.gz|\.mmdb)?\s*$
        description:
          type: string
          title: Description
          description: Brief description of this lookup. Optional.
        tags:
          type: string
          title: Tags
          description: One or more tags related to this lookup. Optional.
        size:
          type: integer
          description: File size. Optional.
      anyOf:
        - properties:
            fileInfo:
              type: object
              required:
                - filename
              description: Uploaded file information
              properties:
                filename:
                  type: string
                  pattern: ^\w[\w .-]+$
        - properties:
            content:
              type: string
              description: File content.
    LookupFileInfoResponse:
      type: object
      properties:
        filename:
          type: string
        rows:
          type: integer
        size:
          type: integer
      required:
        - filename
        - rows
        - size
    ParserLibEntry:
      type: object
      additionalProperties: true
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: ID
        lib:
          type: string
          title: Library
        description:
          type: string
          title: Description
          description: Brief description of this parser. Optional.
        tags:
          type: string
          title: Tags
          description: One or more tags related to this parser. Optional.
        type:
          title: Type
          description: Parser/Formatter type to use.
          type: string
          enum:
            - csv
            - elff
            - clf
            - kvp
            - json
            - delim
            - regex
            - grok
          default: csv
    RegexLibEntry:
      type: object
      additionalProperties: false
      required:
        - id
        - regex
      properties:
        id:
          type: string
          title: ID
        lib:
          type: string
          title: Library
        description:
          type: string
          title: Description
          description: Brief description of this regex. Optional.
        regex:
          type: string
          title: Regex pattern
          description: Regex pattern. Required.
        sampleData:
          type: string
          description: Sample data for this regex. Optional.
          title: Sample data
          maxLength: 4096
        tags:
          type: string
          title: Tags
          description: One or more tags related to this regex. Optional.
    DataSample:
      type: object
      additionalProperties: true
      required:
        - id
        - sampleName
      properties:
        id:
          type: string
          title: ID
        sampleName:
          type: string
          title: File Name
          description: Filename to save the sample as. Required.
        pipelineId:
          type: string
          title: Associate with Pipeline
          description: Select a pipeline to associate with sample with. Select GLOBAL if
            not sure. Deprecated.
        description:
          type: string
          title: Description
          description: Brief description of this sample file. Optional.
        ttl:
          type: integer
          title: Expiration (hours)
          description: Time to live for the sample, the TTL is reset after each use of the
            sample. Leave empty to never expire.
        tags:
          type: string
          title: Tags
          description: One or more tags related to this sample file. Optional.
    SampleContent:
      type: array
      items:
        type: object
        additionalProperties: true
    DatabaseConnectionType:
      type: object
      properties: {}
    DatabaseConnectionConfig:
      type: object
      properties:
        authType:
          type: string
        configObj:
          type: string
        connectionString:
          type: string
        connectionTimeout:
          type: integer
        databaseType:
          $ref: "#/components/schemas/DatabaseConnectionType"
        description:
          type: string
        id:
          type: string
        requestTimeout:
          type: integer
        tags:
          type: string
      required:
        - authType
        - description
        - id
    DatabaseConnectionTestResult:
      type: object
      properties:
        errorMsg:
          type: string
        success:
          type: boolean
      required:
        - success
    DatabaseConnectionTest:
      type: object
      properties:
        authType:
          type: string
        configObj:
          type: string
        connectionString:
          type: string
        connectionTimeout:
          type: integer
        databaseType:
          type: string
        textSecret:
          type: string
      required:
        - authType
        - databaseType
    GlobalVar:
      type: object
      required:
        - id
        - type
        - value
      properties:
        id:
          type: string
          title: Name
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Global variable name.
        lib:
          type: string
          title: Library
        description:
          type: string
          title: Description
          description: Brief description of this variable. Optional.
        type:
          type: string
          title: Type
          enum:
            - string
            - number
            - boolean
            - array
            - object
            - expression
            - any
          default: any
          description: Type of variable.
        value:
          type: string
          title: Value
          description: Value of variable
        tags:
          type: string
          title: Tags
          description: One or more tags related to this variable. Optional.
    InputCollection:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - collection
          default: collection
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process results.
        sendToRoutes:
          type: boolean
          default: true
          title: Send to Routes
          description: If set to Yes, events will be sent to normal routing and event
            processing. Set to No if you want to select a specific
            Pipeline/Destination combination.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Custom Command
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments
              items:
                type: string
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        output:
          type: string
          title: Destination
          description: Destination to send results to.
      type: object
    InputKafka:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kafka
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
            - true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        brokers:
          type: array
          title: Brokers
          description: Enter each Kafka broker you want to use. Specify hostname and port,
            e.g., mykafkabroker:9092, or just hostname, in which case @{product}
            will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl
            suggests subscribing each Kafka Source to only a single topic."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: Specifies the consumer group to which this instance belongs.
            Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave toggled to 'Yes' if you want the Source, upon first
            subscribing to a topic, to read starting with the earliest available
            message
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Schema Registry
              default: true
              
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for access to the Confluent Schema Registry, i.e:
                http://localhost:8081"
              default: http://localhost:8081
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: Reject certs that are not authorized by a CA in the CA certificate
                    path, or by another trusted CA (e.g., the system's CA).
                    Defaults to No.
                  default: false
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate name
                  description: The name of the predefined certificate.
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key.
                minVersion:
                  type: string
                  title: Minimum TLS version
                  description: Minimum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  description: Maximum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Authentication
              default: true
              
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              description: SASL authentication mechanism to use.
            x-flagprefix:
              type: string
              default: native
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        sessionTimeout:
          type: integer
          title: Session timeout (ms)
          description: >-2
            
                  Timeout used to detect client failures when using Kafka's group management facilities.
                  If the client sends the broker no heartbeats before this timeout expires, 
                  the broker will remove this client from the group, and will initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See details [here](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms).
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: integer
          title: Rebalance timeout (ms)
          description: >-2
            
                  Maximum allowed time for each worker to join the group after a rebalance has begun.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See details [here](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms).
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: integer
          title: Heartbeat interval (ms)
          description: >-2
            
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group management facilities.
                  Value must be lower than sessionTimeout, and typically should not exceed 1/3 of the sessionTimeout value.
                  See details [here](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms).
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: integer
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: integer
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: integer
          title: Max bytes per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: integer
          title: Max bytes
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputMsk:
      required:
        - brokers
        - topics
        - region
        - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - msk
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
            - true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        brokers:
          type: array
          title: Brokers
          description: Enter each Kafka broker you want to use. Specify hostname and port,
            e.g., mykafkabroker:9092, or just hostname, in which case @{product}
            will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl
            suggests subscribing each Kafka Source to only a single topic."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: Specifies the consumer group to which this instance belongs.
            Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave toggled to 'Yes' if you want the Source, upon first
            subscribing to a topic, to read starting with the earliest available
            message
        sessionTimeout:
          type: integer
          title: Session timeout (ms)
          description: >-2
            
                  Timeout used to detect client failures when using Kafka's group management facilities.
                  If the client sends the broker no heartbeats before this timeout expires, 
                  the broker will remove this client from the group, and will initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See details [here](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms).
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: integer
          title: Rebalance timeout (ms)
          description: >-2
            
                  Maximum allowed time for each worker to join the group after a rebalance has begun.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See details [here](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms).
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: integer
          title: Heartbeat interval (ms)
          description: >-2
            
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group management facilities.
                  Value must be lower than sessionTimeout, and typically should not exceed 1/3 of the sessionTimeout value.
                  See details [here](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms).
          default: 3000
          minimum: 1000
          maximum: 3600000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Schema Registry
              default: true
              
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for access to the Confluent Schema Registry, i.e:
                http://localhost:8081"
              default: http://localhost:8081
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: Reject certs that are not authorized by a CA in the CA certificate
                    path, or by another trusted CA (e.g., the system's CA).
                    Defaults to No.
                  default: false
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate name
                  description: The name of the predefined certificate.
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key.
                minVersion:
                  type: string
                  title: Minimum TLS version
                  description: Minimum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  description: Maximum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to AWS'
            Region-specific endpoint. Otherwise, it must point to MSK
            cluster-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        autoCommitInterval:
          type: integer
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: integer
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: integer
          title: Max bytes per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: integer
          title: Max bytes
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
        x-metasecret:
          type: string
          title: authentication
          enum:
            - awsApiKey
            - awsSecretKey
          example: awsAuthenticationMethod
      type: object
    InputHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - http
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
            - true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthed access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        criblAPI:
          type: string
          title: Cribl HTTP Event API
          description: Absolute path on which to listen for the Cribl HTTP API requests.
            At the moment, only _bulk (default /cribl/_bulk) is available. Use
            empty string to disable.
          default: /cribl
          pattern: ^/|^$
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint (Bulk API)
          description: Absolute path on which to listen for the Elasticsearch API
            requests. At the moment only _bulk (default /elastic/_bulk) is
            available. Use empty string to disable
          default: /elastic
          pattern: ^/|^$
        splunkHecAPI:
          type: string
          title: Splunk HEC Endpoint
          description: Absolute path on which listen for the Splunk HTTP Event Collector
            API requests. Use empty string to disable.
          default: /services/collector
          pattern: ^/|^$
        splunkHecAcks:
          type: boolean
          title: Splunk HEC Acks
          description: Whether to enable Splunk HEC acknowledgements
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputSplunk:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP Allowlist Regex
          description: Regex matching IP addresses that are allowed to establish a
            connection.
          default: /.*/
        maxActiveCxn:
          type: integer
          title: Max Active Connections
          description: Maximum number of active connections allowed per Worker Process,
            use 0 for unlimited
          default: 1000
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        authTokens:
          type: array
          title: Auth tokens
          description: Shared secrets to be provided by any Splunk forwarder. If empty,
            unauthed access is permitted.
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: Shared secrets to be provided by any Splunk forwarder. If empty,
                  unauthed access is permitted.
              description:
                type: string
                title: Description
                description: Optional token description
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake.
          enum:
            - v3
            - v4
          default: v3
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone
          default: true
          description: Enables Event Breakers to determine events' time zone from
            UF-provided metadata, when TZ can't be inferred from the raw event.
            Toggle to 'No' to disable this fallback.
      type: object
    InputSplunkSearch:
      required:
        - searchHead
        - search
        - cronSchedule
        - endpoint
        - outputMode
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        searchHead:
          title: Search head
          type: string
          default: https://localhost:8089
          description: Search head base URL, can be expression, default is
            https://localhost:8089.
        search:
          type: string
          title: Search
          description: "Enter Splunk search here. For example: 'index=myAppLogs
            level=error channel=myApp' OR '| mstats avg(myStat) as myStat WHERE
            index=myStatsIndex.'"
        earliest:
          title: Earliest
          type: string
          description: "The earliest time boundary for the search. Can be an exact or
            relative time. For example: '2022-01-14T12:00:00Z' or '-16m@m'"
          default: -16m@m
        latest:
          title: Latest
          type: string
          description: "The latest time boundary for the search. Can be an exact or
            relative time. For example: '2022-01-14T12:00:00Z' or '-1m@m'"
          default: -1m@m
        cronSchedule:
          type: string
          title: Cron schedule
          description: A cron schedule on which to run this job.
          default: "*/15 * * * *"
        endpoint:
          type: string
          title: Search endpoint
          default: /services/search/jobs/export
          description: REST API used to create a search.
        outputMode:
          type: string
          title: Output mode
          description: Format of the returned output
          enum:
            - csv
            - json
          default: json
        endpointParams:
          title: Endpoint parameters
          type: array
          description: Optional request parameters to send to the endpoint.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                title: Name
                type: string
                description: Parameter name
              value:
                title: Value
                type: string
                description: JavaScript expression to compute the parameter's value, normally
                  enclosed in backticks (e.g., `${earliest}`). If a constant,
                  use single quotes (e.g., 'earliest'). Values without
                  delimiters (e.g., earliest) are evaluated as strings.
        endpointHeaders:
          title: Endpoint headers
          description: Optional request headers to send to the endpoint.
          type: array
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Header Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute the header's value, normally
                  enclosed in backticks (e.g., `${earliest}`). If a constant,
                  use single quotes (e.g., 'earliest'). Values without
                  delimiters (e.g., earliest) are evaluated as strings.
        logLevel:
          type: string
          title: Log level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime log Level (verbosity).
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 0
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        keepAliveTime:
          type: integer
          title: Keep Alive Time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job Timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: integer
          title: Worker Timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          default:
            - Splunk Search Ruleset
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        authType:
          type: string
          title: Authentication type
          description: Splunk Search authentication type
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
          default: basic
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    InputSplunkHec:
      required:
        - host
        - port
        - splunkHecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk_hec
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthed access is permitted"
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization:
                  <token>)."
              description:
                type: string
                title: Description
                description: Optional token description
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at
                  the token level. Supports wildcards. To skip validation, leave
                  blank.
                minItems: 0
                items:
                  type: string
                  minLength: 1
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token.
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Name
                      description: Field name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes
                        or backticks. (Can evaluate to a constant.)
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which to listen for the Splunk HTTP Event
            Collector API requests. This input supports the /event, /raw and
            /s2s endpoints.
          default: /services/collector
          pattern: ^/
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. May be overridden by fields added at
            the token or request level.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip
            validation. Supports wildcards. The values here can expand index
            validation at the token level.
          minItems: 0
          items:
            type: string
            minLength: 1
        splunkHecAcks:
          type: boolean
          title: Splunk HEC Acks
          description: Whether to enable Splunk HEC acknowledgements
          default: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone (S2S only)
          default: true
          description: Enables Event Breakers to determine events' time zone from
            UF-provided metadata, when TZ can't be inferred from the raw event.
            Toggle to 'No' to disable this fallback.
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS
            (cross-origin resource sharing) Access-Control-Allow-* headers.
            Supports wildcards.
          minItems: 0
          items:
            type: string
            minLength: 1
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed
            origins as "Access-Control-Allow-Headers" in a CORS preflight
            response. Use "*" to allow all headers.
          minItems: 0
          items:
            type: string
            minLength: 1
      type: object
    InputAzureBlob:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - azure_blob
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        queueName:
          type: string
          title: Queue
          description: "The storage account queue name blob notifications will be read
            from. Value must be a JavaScript expression (which can evaluate to a
            constant value), enclosed in quotes or backticks. Can be evaluated
            only at init time. E.g., referencing a Global Variable:
            `myQueue-${C.vars.myVar}`"
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        visibilityTimeout:
          type: integer
          title: Visibility timeout (secs)
          description: The duration (in seconds) that the received messages are hidden
            from subsequent retrieve requests after being retrieved by a
            ReceiveMessage request.
          default: 600
          minimum: 0
          maximum: 604800
        numReceivers:
          type: integer
          title: Num receivers
          description: The Number of receiver processes to run, the higher the number the
            better throughput at the expense of CPU overhead
          default: 1
          minimum: 1
          maximum: 100
        maxMessages:
          type: integer
          title: Max messages
          description: "The maximum number of messages to return in a poll request. Azure
            storage queues never returns more messages than this value (however,
            fewer messages might be returned). Valid values: 1 to 32."
          default: 1
          minimum: 1
          maximum: 32
        servicePeriodSecs:
          type: integer
          title: Service period (secs)
          description: The duration (in seconds) which pollers should be validated and
            restarted if exited
          default: 5
          minimum: 1
          maximum: 10
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Toggle to Yes to skip files that trigger a processing error.
            Defaults to No, which enables retries after processing errors.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        parquetChunkSizeMB:
          type: integer
          title: Max Parquet chunk size (MB)
          description: Maximum file size for each Parquet chunk.
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: integer
          title: Parquet chunk download timeout (seconds)
          description: The maximum time to wait for a Parquet file's chunk to be
            downloaded. Processing will end if a required chunk could not be
            downloaded within the time imposed by this setting.
          default: 600
          maximum: 3600
          minimum: 1
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter connection string directly, or select a stored secret
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank,
            Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: connectionString
      type: object
    InputElastic:
      required:
        - host
        - port
        - elasticAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - elastic
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint
          description: Absolute path on which to listen for Elasticsearch API requests.
            Defaults to /. _bulk will be appended automatically, e.g., /myPath
            becomes /myPath/_bulk. Requests can then be made to either
            /myPath/_bulk or /myPath/<myIndexName>/_bulk. Other entries are
            faked as success.
          default: /
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          description: Elastic authentication type
          enum:
            - authTokens
            - basic
            - credentialsSecret
          default: none
        apiVersion:
          type: string
          title: API Version
          description: The API version to use for communicating with the server.
          enum:
            - custom
            - 8.3.2
          default: 8.3.2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
          default:
            - name: X-elastic-product
              value: Elasticsearch
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        proxyMode:
          type: object
          title: ""
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable Proxy Mode
              default: false
              description: Enable proxying of non-bulk API requests to an external Elastic
                server. Enable this only if you understand the implications; see
                docs for more details.
              
            url:
              type: string
              title: Proxy URL
              description: URL of the Elastic server to proxy non-bulk requests to, e.g.,
                http://elastic:9200
            removeHeaders:
              type: array
              title: Remove headers
              description: List of headers to remove from the request to proxy
              minItems: 0
              items:
                type: string
                minLength: 1
            timeoutSec:
              type: integer
              default: 60
              minimum: 1
              maximum: 9007199254740991
              title: Proxy request timeout
              description: Amount of time, in seconds, to wait for a proxy request to complete
                before aborting it.
            authType:
              title: Authentication method
              type: string
              enum:
                - none
                - manual
                - secret
              default: none
              description: Enter credentials directly, or select a stored secret
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        authTokens:
          type: array
          title: Token
          description: Bearer tokens to include in the authorization header
          items:
            type: string
        customAPIVersion:
          type: string
          title: Custom API Version
          description: Custom version information to respond to requests
          default: |-
            {
                "name": "AzU84iL",
                "cluster_name": "cribl",
                "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
                "version": {
                    "number": "8.3.2",
                    "build_type": "tar",
                    "build_hash": "bca0c8d",
                    "build_date": "2019-10-16T06:19:49.319352Z",
                    "build_snapshot": false,
                    "lucene_version": "9.7.2",
                    "minimum_wire_compatibility_version": "7.17.0",
                    "minimum_index_compatibility_version": "7.0.0"
                },
                "tagline": "You Know, for Search"
            }
      type: object
    InputConfluentCloud:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - confluent_cloud
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        brokers:
          type: array
          title: Brokers
          description: List of Confluent Cloud brokers to use, eg.
            yourAccount.confluent.cloud:9092
          minItems: 1
          items:
            type: string
            minLength: 1
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl
            suggests subscribing each Kafka Source to only a single topic."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: Specifies the consumer group to which this instance belongs.
            Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave toggled to 'Yes' if you want the Source, upon first
            subscribing to a topic, to read starting with the earliest available
            message
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Schema Registry
              default: true
              
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for access to the Confluent Schema Registry, i.e:
                http://localhost:8081"
              default: http://localhost:8081
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: Reject certs that are not authorized by a CA in the CA certificate
                    path, or by another trusted CA (e.g., the system's CA).
                    Defaults to No.
                  default: false
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate name
                  description: The name of the predefined certificate.
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key.
                minVersion:
                  type: string
                  title: Minimum TLS version
                  description: Minimum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  description: Maximum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Authentication
              default: true
              
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              description: SASL authentication mechanism to use.
            x-flagprefix:
              type: string
              default: native
        sessionTimeout:
          type: integer
          title: Session timeout (ms)
          description: >-2
            
                  Timeout used to detect client failures when using Kafka's group management facilities.
                  If the client sends the broker no heartbeats before this timeout expires, 
                  the broker will remove this client from the group, and will initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See details [here](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms).
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: integer
          title: Rebalance timeout (ms)
          description: >-2
            
                  Maximum allowed time for each worker to join the group after a rebalance has begun.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See details [here](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms).
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: integer
          title: Heartbeat interval (ms)
          description: >-2
            
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group management facilities.
                  Value must be lower than sessionTimeout, and typically should not exceed 1/3 of the sessionTimeout value.
                  See details [here](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms).
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: integer
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: integer
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: integer
          title: Max bytes per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: integer
          title: Max bytes
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputGrafana:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - grafana
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep alive timeout (seconds)
          description: Maximum time to wait for additional data, after the last response
            was sent, before closing a socket connection. This can be very
            useful when Grafana Agent remote write's request frequency is high
            so, reusing connections, would help mitigating the cost of creating
            a new connection per request. Note that Grafana Agent's embedded
            Prometheus would attempt to keep connections open for up to 5
            minutes.
          default: 5
          minimum: 1
          maximum: 600
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Grafana Agent's Remote Write
            requests. Defaults to /api/prom/push, which will expand as:
            http://<your‑upstream‑URL>:<your‑port>/api/prom/push."
          default: /api/prom/push
          pattern: ^/
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults
            to /loki/api/v1/push, which will (in this example) expand as:
            'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'."
          default: /loki/api/v1/push
          pattern: ^/
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Remote Write authentication type
              enum:
                - oauth
                - basic
                - credentialsSecret
                - token
                - textSecret
              default: none
            username:
              type: string
              title: Username
              description: Username for Basic authentication
            password:
              type: string
              title: Password
              description: Password for Basic authentication
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select (or create) a secret that references your credentials
              x-metasecret:
                type: credentials
                target:
                  - username
                  - password
            textSecret:
              type: string
              title: Token (text secret)
              description: Select (or create) a stored text secret
              x-metasecret:
                type: text
                target: token
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be
                top-level (e.g., 'token'); or nested, using a period (e.g.,
                'data.token').
            spacer:
              type: string
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to
                pass in requests. The value `${token}` is used to reference the
                token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: integer
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request.
                @{product} will combine the secret with these parameters, and
                will send the URL-encoded result in a POST request to the
                endpoint specified in the 'Login URL'. We'll automatically add
                the content-type header 'application/x-www-form-urlencoded' when
                sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product}
                will automatically add the content-type header
                'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Loki logs authentication type
              enum:
                - oauth
                - basic
                - credentialsSecret
                - token
                - textSecret
              default: none
            username:
              type: string
              title: Username
              description: Username for Basic authentication
            password:
              type: string
              title: Password
              description: Password for Basic authentication
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select (or create) a secret that references your credentials
              x-metasecret:
                type: credentials
                target:
                  - username
                  - password
            textSecret:
              type: string
              title: Token (text secret)
              description: Select (or create) a stored text secret
              x-metasecret:
                type: text
                target: token
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be
                top-level (e.g., 'token'); or nested, using a period (e.g.,
                'data.token').
            spacer:
              type: string
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to
                pass in requests. The value `${token}` is used to reference the
                token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: integer
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request.
                @{product} will combine the secret with these parameters, and
                will send the URL-encoded result in a POST request to the
                endpoint specified in the 'Login URL'. We'll automatically add
                the content-type header 'application/x-www-form-urlencoded' when
                sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product}
                will automatically add the content-type header
                'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
      anyOf:
        - required:
            - prometheusAPI
        - required:
            - lokiAPI
    InputLoki:
      required:
        - host
        - port
        - lokiAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - loki
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults
            to /loki/api/v1/push, which will (in this example) expand as:
            'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'."
          default: /loki/api/v1/push
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          description: Loki logs authentication type
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
          default: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    InputPrometheusRw:
      required:
        - host
        - port
        - prometheusAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - prometheus_rw
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Prometheus requests. Defaults
            to /write, which will expand as:
            http://<your‑upstream‑URL>:<your‑port>/write."
          default: /write
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
          default: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    InputPrometheus:
      required:
        - interval
        - logLevel
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        dimensionList:
          type: array
          title: Extra Dimensions
          minItems: 0
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - ec2
            - dns
          description: Target discovery mechanism. Use static to manually enter a list of
            targets.
          default: static
        interval:
          type: integer
          title: Poll Interval
          description: How often in minutes to scrape targets for metrics, 60 must be
            evenly divisible by the value or save will fail.
          minimum: 1
          maximum: 60
          default: 15
        logLevel:
          type: string
          title: Log Level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime Log Level
          default: info
        keepAliveTime:
          type: integer
          title: Keep Alive Time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job Timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: integer
          title: Worker Timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter credentials directly, or select a stored secret
        tarlist:
          type: array
          title: Targets
          minItems: 1
          default: []
          description: "List of Prometheus targets to pull metrics from. Values can be in
            URL or host[:port] format. For example:
            http://localhost:9090/metrics, localhost:9090, or localhost. In
            cases where just host[:port] is specified, the endpoint will resolve
            to 'http://host[:port]/metrics'."
          items:
            type: string
            title: Targets
        nameList:
          type: object
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
        names:
          type: string
          title: DNS Names
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
        scrapeProtocol:
          type: string
          title: Metrics Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
        scrapePath:
          type: string
          title: Metrics Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the
            private IP address should be used.
          default: true
        scrapePort:
          type: integer
          title: Metrics Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see:
                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_De\
                  scribeInstances.html for more information. Attributes can be
                  manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be
                  returned
                minItems: 0
                default: []
                items:
                  type: string
                  minLength: 1
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to EC2-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - discoveryType
      type: object
    InputEdgePrometheus:
      required:
        - interval
        - discoveryType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        dimensionList:
          type: array
          title: Extra Dimensions
          minItems: 0
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - k8s-pods
            - dns
            - ec2
            - k8s-node
          description: Target discovery mechanism. Use static to manually enter a list of
            targets.
          default: static
        interval:
          type: integer
          title: Poll Interval
          description: How often in seconds to scrape targets for metrics.
          minimum: 2
          default: 15
        timeout:
          type: integer
          title: HTTP Connection Timeout
          description: Timeout, in milliseconds, before aborting HTTP connection attempts;
            1-60000 or 0 to disable
          default: 5000
          maximum: 60000
          minimum: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        authType:
          title: Authentication method
          type: string
          enum:
            - kubernetes
            - secret
          default: manual
          description: Enter credentials directly, or select a stored secret
        targets:
          type: array
          title: Targets
          default: []
          minItems: 1
          items:
            type: object
            required:
              - host
            properties:
              protocol:
                type: string
                title: Protocol
                enum:
                  - http
                  - https
                description: Protocol to use when collecting metrics
                default: http
              host:
                type: string
                title: Host
                description: Name of host from which to pull metrics.
              port:
                type: integer
                title: Port
                description: The port number in the metrics URL for discovered targets.
                minimum: 1
                maximum: 65535
                default: 9090
              path:
                type: string
                title: Path
                description: Path to use when collecting metrics from discovered targets
                default: /metrics
                pattern: ^/.*
        nameList:
          type: object
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
        names:
          type: string
          title: DNS Names
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
        scrapeProtocol:
          type: string
          title: Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
        scrapePath:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the
            private IP address should be used.
          default: true
        scrapePort:
          type: integer
          title: Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see:
                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_De\
                  scribeInstances.html for more information. Attributes can be
                  manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be
                  returned
                minItems: 0
                default: []
                items:
                  type: string
                  minLength: 1
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to EC2-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        scrapeProtocolExpr:
          type: string
          title: Protocol
          description: Protocol to use when collecting metrics
          default: metadata.annotations['prometheus.io/scheme'] || 'http'
        scrapePortExpr:
          type: string
          title: Port
          description: The port number in the metrics URL for discovered targets.
          default: metadata.annotations['prometheus.io/port'] || 9090
        scrapePathExpr:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: metadata.annotations['prometheus.io/path'] || '/metrics'
        podFilter:
          type: array
          title: Filter Rules
          description: |2
            
              Add rules to decide which pods to discover for metrics.
              Pods are searched if no rules are given or of all the rules'
              expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to pods objects. Return 'true' to
                  include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: metadata.annotations['prometheus.io/scrape']
              description: Scrape pod if annotation is true
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - region
            - usePublicIp
            - searchFilter
      type: object
    InputOffice365Mgmt:
      required:
        - tenantId
        - appId
        - planType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_mgmt
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
        timeout:
          type: integer
          title: Timeout (secs)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: integer
          title: Keep Alive Time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job Timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: integer
          title: Worker Timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        planType:
          type: string
          title: Subscription Plan
          description: Office 365 subscription plan for your organization, typically
            Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
        publisherIdentifier:
          type: string
          title: Publisher Identifier
          description: Optional Publisher Identifier to use in API requests, defaults to
            tenant id if not defined. For more information see
            [here](https://docs.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-reference#start-a-subscription)
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Active Directory
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Exchange
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: SharePoint
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: General
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: DLP
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Management Activity API Content Type
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible
                  by 60 or save will fail
              interval:
                type: integer
                title: Interval
                minimum: 1
                maximum: 60
              logLevel:
                type: string
                title: Log Level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                description: Collector runtime Log Level
              enabled:
                type: boolean
                title: Enabled
          description: "Enable Office 365 Management Activity API content types and
            polling intervals. Polling intervals are used to set up search date
            range and cron schedule, e.g.: */${interval} * * * *. Because of
            this, intervals entered must be evenly divisible by 60 to give a
            predictable schedule."
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter client secret directly, or select a stored secret
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: clientSecret
      type: object
    InputOffice365Service:
      required:
        - tenantId
        - appId
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_service
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
        timeout:
          type: integer
          title: Timeout (secs)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: integer
          title: Keep Alive Time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job Timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: integer
          title: Worker Timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Current Status
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Messages
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Services API Content Type
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible
                  by 60 or save will fail
              interval:
                type: integer
                title: Interval
                minimum: 0
                maximum: 60
              logLevel:
                type: string
                title: Log Level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                description: Collector runtime Log Level
              enabled:
                type: boolean
                title: Enabled
          description: "Enable Office 365 Service Communication API content types and
            polling intervals. Polling intervals are used to set up search date
            range and cron schedule, e.g.: */${interval} * * * *. Because of
            this, intervals entered for current and historical status must be
            evenly divisible by 60 to give a predictable schedule."
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter client secret directly, or select a stored secret
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: clientSecret
      type: object
    InputOffice365MsgTrace:
      required:
        - url
        - interval
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        url:
          title: Report URL
          type: string
          description: URL to use when retrieving report data.
          default: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
        interval:
          type: integer
          title: Poll interval
          description: How often (in minutes) to run the report. Must divide evenly into
            60 minutes to create a predictable schedule, or Save will fail.
          minimum: 1
          maximum: 60
          default: 60
        startDate:
          title: Date range start
          type: string
          description: "Backward offset for the search range's head. (E.g.: -3h@h) Message
            Trace data is delayed; this parameter (with Date range end)
            compensates for delay and gaps."
        endDate:
          title: Date range end
          type: string
          description: "Backward offset for the search range's tail. (E.g.: -2h@h) Message
            Trace data is delayed; this parameter (with Date range start)
            compensates for delay and gaps."
        logLevel:
          type: string
          title: Log level
          enum:
            - error
            - warn
            - info
            - debug
          description: Log Level (verbosity) for collection runtime behavior.
        timeout:
          type: integer
          title: Timeout (secs)
          description: HTTP request inactivity timeout. Maximum is 2400 (40 minutes);
            enter 0 to wait indefinitely.
          minimum: 0
          maximum: 2400
          default: 600
        disableTimeFilter:
          type: boolean
          title: Disable time filter
          description: Disables time filtering of events when a date range is specified.
          default: true
        authType:
          title: Authentication method
          type: string
          enum:
            - oauthCert
            - secret
            - oauth
            - oauthSecret
          default: oauth
          description: Select authentication method.
        keepAliveTime:
          type: integer
          title: Keep Alive Time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job Timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: integer
          title: Worker Timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        username:
          type: string
          title: Username
          description: Username to run Message Trace API call.
        password:
          type: string
          title: Password
          description: Password to run Message Trace API call.
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials.
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        clientSecret:
          type: string
          title: Client secret
          description: client_secret to pass in the OAuth request parameter.
        tenantId:
          type: string
          title: Tenant identifier
          description: Directory ID (tenant identifier) in Azure Active Directory.
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter.
        resource:
          type: string
          title: Resource
          description: Resource to pass in the OAuth request parameter.
          default: https://outlook.office365.com
        textSecret:
          type: string
          title: Client secret
          description: Select (or create) a secret that references your client_secret to
            pass in the OAuth request parameter.
        certOptions:
          type: object
          required:
            - privKeyPath
            - certPath
          properties:
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path to the private key to use. Key should be in PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt the private key.
            certPath:
              type: string
              title: Certificate path
              description: Path to the certificate to use. Certificate should be in PEM
                format. Can reference $ENV_VARS.
      type: object
    InputEventhub:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - eventhub
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        brokers:
          type: array
          title: Brokers
          description: List of Event Hubs Kafka brokers to connect to, e.g.,
            yourdomain.servicebus.windows.net:9093. The hostname can be found in
            the host portion of the primary or secondary connection string in
            Shared Access Policies.
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Event Hub name
          description: "The name of the Event Hub (a.k.a. Kafka topic) to subscribe to.
            Warning: To optimize performance, Cribl suggests subscribing each
            Event Hubs Source to only a single topic."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: Specifies the consumer group this instance belongs to, default is
            'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Whether to start reading from earliest available data, relevant
            only during initial subscription.
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable authentication.
              default: false
              
            mechanism:
              type: string
              enum:
                - plain
                - oauthbearer
              title: SASL mechanism
              default: plain
              description: SASL authentication mechanism to use
        tls:
          type: object
          title: TLS settings (client side)
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA).
              default: true
        sessionTimeout:
          type: integer
          title: Session timeout (ms)
          description: >-2
            
                  Timeout (a.k.a session.timeout.ms in Kafka domain) used to detect client failures when using Kafka's group management facilities.
                  If the client sends the broker no heartbeats before this timeout expires, the broker will remove this client from the group, and will initiate a rebalance.
                  Value must be lower than rebalanceTimeout.
                  See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 30000
          minimum: 6000
          maximum: 300000
        rebalanceTimeout:
          type: integer
          title: Rebalance timeout (ms)
          description: >-2
            
                  Maximum allowed time (a.k.a rebalance.timeout.ms in Kafka domain) for each worker to join the group after a rebalance has begun.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: integer
          title: Heartbeat interval (ms)
          description: >-2
            
                  Expected time (a.k.a heartbeat.interval.ms in Kafka domain) between heartbeats to the consumer coordinator when using Kafka's group management facilities.
                  Value must be lower than sessionTimeout, and typically should not exceed 1/3 of the sessionTimeout value.
                  See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: integer
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: integer
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: integer
          title: Max bytes per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: integer
          title: Max bytes
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        minimizeDuplicates:
          type: boolean
          title: Minimize duplicates
          description: Enable feature to minimize duplicate events by only starting one
            consumer for each topic partition.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputExec:
      required:
        - command
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        command:
          type: string
          title: Command
          description: Command to execute; supports Bourne shell (or CMD on Windows) syntax
        retries:
          type: integer
          title: Max retries
          description: Maximum number of retry attempts in the event that the command fails.
          default: 10
          minimum: 0
        scheduleType:
          title: Schedule type
          type: string
          enum:
            - cronSchedule
          default: interval
          description: Select a schedule type; either an interval (in seconds) or a
            cron-style schedule.
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        interval:
          type: integer
          title: Interval
          description: Interval between command executions in seconds.
          default: 60
          minimum: 1
        cronSchedule:
          type: string
          title: Schedule
          description: Cron schedule to execute the command on.
          default: "* * * * *"
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - scheduleType
      type: object
    InputFirehose:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - firehose
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthed access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputGooglePubsub:
      required:
        - topicName
        - subscriptionName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - google_pubsub
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to receive events from.
        subscriptionName:
          type: string
          title: Subscription ID
          description: ID of the subscription to use when receiving events.
        createTopic:
          type: boolean
          title: Create topic
          description: If enabled, create topic if it does not exist
          default: false
        createSubscription:
          type: boolean
          title: Create subscription
          description: If enabled, create subscription if it does not exist
          default: true
          
        region:
          type: string
          title: Region
          description: Region to retrieve messages from. Select 'default' to allow Google
            to auto-select the nearest region. When using ordered delivery, the
            selected region must be allowed by message storage policy.
          enum:
            - pubsub.googleapis.com
            - us-east1-pubsub.googleapis.com
            - us-east4-pubsub.googleapis.com
            - us-central1-pubsub.googleapis.com
            - us-central2-pubsub.googleapis.com
            - us-west1-pubsub.googleapis.com
            - us-west2-pubsub.googleapis.com
            - us-west3-pubsub.googleapis.com
            - southamerica-east1-pubsub.googleapis.com
            - northamerica-northeast1-pubsub.googleapis.com
            - europe-west6-pubsub.googleapis.com
            - europe-west4-pubsub.googleapis.com
            - europe-west3-pubsub.googleapis.com
            - europe-west2-pubsub.googleapis.com
            - europe-west1-pubsub.googleapis.com
            - europe-north1-pubsub.googleapis.com
            - australia-southeast1-pubsub.googleapis.com
            - asia-southeast1-pubsub.googleapis.com
            - asia-south1-pubsub.googleapis.com
            - asia-northeast3-pubsub.googleapis.com
            - asia-northeast2-pubsub.googleapis.com
            - asia-northeast1-pubsub.googleapis.com
            - asia-east2-pubsub.googleapis.com
            - asia-east1-pubsub.googleapis.com
        googleAuthMethod:
          type: string
          title: Authentication Method
          description: Google authentication method. Choose Auto to use environment
            variables PUBSUB_PROJECT and PUBSUB_CREDENTIALS..
          default: manual
          enum:
            - secret
            - manual
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded
            from Google Cloud. To upload a file, click the upload button at this
            field's upper right. As an alternative, you can use environment
            variables (see
            [here](https://googleapis.dev/ruby/google-cloud-pubsub/latest/file.AUTHENTICATION.html)).
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: serviceAccountCredentials
            authTypeField: googleAuthMethod
        maxBacklog:
          type: integer
          title: Max backlog
          description: If Destination exerts backpressure, this setting limits how many
            inbound events Stream will queue for processing before it stops
            retrieving events.
          default: 1000
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Pull request timeout, in milliseconds.
          default: 60000
          minimum: 10000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: If enabled, receive events in the order they were added to the
            queue. For this to work correctly, the process sending events must
            have ordering enabled.
          default: false
      type: object
    InputCribl:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputCriblTcp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_tcp
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveCxn:
          type: integer
          title: Max Active Connections
          description: Maximum number of active connections allowed per Worker Process,
            use 0 for unlimited
          default: 1000
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputCriblHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_http
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthed access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputTcpjson:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - tcpjson
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP Allowlist Regex
          description: Regex matching IP addresses that are allowed to establish a
            connection.
          default: /.*/
        maxActiveCxn:
          type: integer
          title: Max Active Connections
          description: Maximum number of active connections allowed per Worker Process,
            use 0 for unlimited
          default: 1000
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header
            field). If empty, unauthed access is permitted.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: authToken
      type: object
    InputSystemMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        interval:
          type: integer
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default
            is 10 seconds.
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - disabled
                - all
                - custom
              default: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for system metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    processes:
                      type: boolean
                      default: false
                      title: Process metrics
                      description: Generate metrics for the numbers of processes in various states
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for CPU metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    perCpu:
                      type: boolean
                      default: false
                      title: Per CPU metrics
                      description: Generate metrics for each CPU
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for memory metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for network metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    devices:
                      type: array
                      title: Interface filter
                      description: "Network interfaces to include/exclude. E.g.: eth0, !lo, etc. All
                        interfaces are included if this list is empty."
                      default:
                        - "!lo"
                        - "*"
                      items:
                        type: string
                    perInterface:
                      type: boolean
                      default: false
                      title: Per interface metrics
                      description: Generate separate metrics for each interface
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for disk metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    devices:
                      type: array
                      title: Device filter
                      description: "Block devices to include/exclude. E.g.: sda*, !loop*, etc.
                        Wildcards and ! (not) operators are supported. All
                        devices are included if this list is empty."
                      default:
                        - "!loop*"
                        - "*"
                      items:
                        type: string
                    mountpoints:
                      type: array
                      title: Mountpoint filter
                      description: "Filesystem mountpoints to include/exclude. E.g.: /, /home,
                        !/proc*, !/tmp, etc. Wildcards and ! (not) operators are
                        supported. All mountpoints are included if this list is
                        empty."
                      default: []
                      items:
                        type: string
                    fstypes:
                      type: array
                      title: Filesystem type filter
                      description: "Filesystem types to include/exclude. E.g.: ext4, !*tmpfs,
                        !squashfs, etc. Wildcards and ! (not) operators are
                        supported. All types are included if this list is
                        empty."
                      default: []
                      items:
                        type: string
                    perDevice:
                      type: boolean
                      default: false
                      title: Per device metrics
                      description: Generate separate metrics for each device
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full disk metrics
        container:
          type: object
          properties:
            mode:
              type: string
              description: Select the level of detail for container metrics
              enum:
                - disabled
                - all
                - custom
              default: basic
            dockerSocket:
              type: array
              title: Docker socket
              description: Full paths for Docker's UNIX-domain socket
              default:
                - /var/run/docker.sock
                - /run/docker.sock
              items:
                type: string
            dockerTimeout:
              type: integer
              default: 5
              minimum: 1
              title: Docker timeout
              description: Timeout, in seconds, for the Docker API
            filters:
              type: array
              title: Container Filters
              description: Containers matching any of these will be included. All are included
                if this is empty.
              items:
                type: object
                required:
                  - expr
                properties:
                  expr:
                    type: string
                    title: Expression
            allContainers:
              type: boolean
              default: false
              title: All containers
              description: Include stopped and paused containers
            perDevice:
              type: boolean
              default: false
              title: Per device metrics
              description: Generate separate metrics for each device
            detail:
              type: boolean
              default: false
              title: Detailed metrics
              description: Generate full container metrics
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Max data size
              description: Maximum disk space allowed to be consumed (e.g., 420MB or 4GB).
                Once reached, older data will be deleted.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Max data age
              type: string
              description: Maximum amount of time to retain data (e.g., 2h or 4d). Once
                reached, older data will be deleted.
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Select data compression format. Optional.
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_metrics
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/system_metrics
      type: object
    InputSystemState:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        interval:
          type: integer
          default: 300
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive state collections. Default is
            300 seconds. (i.e. 5 minutes)
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        collectors:
          type: object
          properties:
            hostsfile:
              type: object
              title: Hosts File
              description: Creates events based on entries collected from the hosts file
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            interfaces:
              type: object
              title: Interfaces
              description: Creates events for each of the host’s network interfaces
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            disk:
              type: object
              title: Disks & File Systems
              description: Creates events for physical disks, partitions, and file systems
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            metadata:
              type: object
              title: Host Info
              description: Creates events based on the host system’s current state
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            routes:
              type: object
              title: Routes
              description: Creates events based on entries collected from the host’s network
                routes
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            dns:
              type: object
              title: DNS
              description: Creates events for DNS resolvers and search entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            user:
              type: object
              title: Users & Groups
              description: Creates events for local users and groups
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
        persistence:
          type: object
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Max data size
              description: Maximum disk space allowed to be consumed (e.g., 420MB or 4GB).
                Once reached, older data will be deleted.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Max data age
              type: string
              description: Maximum amount of time to retain data (e.g., 2h or 4d). Once
                reached, older data will be deleted.
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Select data compression format. Optional.
              enum:
                - none
                - gzip
              default: none
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_state
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/system_state
      type: object
    InputKubeMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        interval:
          type: integer
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metrics collections. Default
            is 15 secs.
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Kubernetes objects to generate metrics
            for. Events are generated if no rules are given or of all the rules'
            expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true'
                  to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics on disk for Cribl Search
              default: false
              
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Max data size
              description: Maximum disk space allowed to be consumed (e.g., 420MB or 4GB).
                Once reached, older data will be deleted.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Max data age
              type: string
              description: Maximum amount of time to retain data (e.g., 2h or 4d). Once
                reached, older data will be deleted.
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Select data compression format. Optional.
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/kube_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
      type: object
    InputKubeLogs:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        interval:
          type: integer
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checks for new containers. Default is 15
            secs.
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Pods to collect logs for. Logs are
            collected if no rules are given or of all the rules' expressions
            evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Pod objects. Return 'true' to
                  include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
        timestamps:
          type: boolean
          default: false
          title: Enable timestamps
          description: For use when containers do not emit a timestamp, prefix each line
            of output with a timestamp. If you enable this setting, you can use
            the Kubernetes Logs Event Breaker and the kubernetes_logs
            Pre-processing Pipeline to remove them from the events after the
            timestamps are extracted.
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
      type: object
    InputKubeEvents:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        rules:
          type: array
          title: Filter Rules
          description: Filtering on event fields
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true'
                  to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default: []
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputWindowsMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        interval:
          type: integer
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default
            is 10 seconds.
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - disabled
                - all
                - custom
              default: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for system metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all system information
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for CPU metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    perCpu:
                      type: boolean
                      default: false
                      title: Per CPU metrics
                      description: Generate metrics for each CPU
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for memory metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for network metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    devices:
                      type: array
                      title: Interface filter
                      description: Network interfaces to include/exclude. All interfaces are included
                        if this list is empty.
                      default:
                        - "!6to4*"
                        - "!*Debug*"
                        - "!*Virtual*"
                        - "!*Tunneling*"
                        - "!*IP-HTTPS*"
                        - "*"
                      items:
                        type: string
                    perInterface:
                      type: boolean
                      default: false
                      title: Per interface metrics
                      description: Generate separate metrics for each interface
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for disk metrics
                      enum:
                        - disabled
                        - all
                        - custom
                      default: basic
                    volumes:
                      type: array
                      title: Volume filter
                      description: "Windows volumes to include/exclude. E.g.: C:, !E:, etc. Wildcards
                        and ! (not) operators are supported. All volumes are
                        included if this list is empty."
                      default:
                        - "!HarddiskVolume*"
                        - "*"
                      items:
                        type: string
                    perVolume:
                      type: boolean
                      default: false
                      title: Per volume metrics
                      description: Generate separate metrics for each volume
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Max data size
              description: Maximum disk space allowed to be consumed (e.g., 420MB or 4GB).
                Once reached, older data will be deleted.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Max data age
              type: string
              description: Maximum amount of time to retain data (e.g., 2h or 4d). Once
                reached, older data will be deleted.
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Select data compression format. Optional.
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/windows_metrics
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/windows_metrics
      type: object
    InputCrowdstrike:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - crowdstrike
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from.
            When a non-AWS URL is specified, format must be:
            '{url}/myQueueName'. E.g., 'https://host:port/myQueueName'. Value
            must be a JavaScript expression (which can evaluate to a constant
            value), enclosed in quotes or backticks. Can be evaluated only at
            init time. E.g., referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS Account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required,
            unless the Queue entry is a URL or ARN that includes a Region.
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: integer
          title: Max Messages
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: integer
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          default: 21600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: integer
          title: Num receivers
          description: The Number of receiver processes to run, the higher the number the
            better throughput at the expense of CPU overhead
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: integer
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if
            timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Toggle to Yes to skip files that trigger a processing error.
            Defaults to No, which enables retries after processing errors.
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        enableSQSAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials when accessing SQS.
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Custom Command
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        pollTimeout:
          type: integer
          title: Poll timeout (secs)
          description: The amount of time to wait for events before trying polling again.
            The lower the number the higher the AWS bill. The higher the number
            the longer it will take for the source to react to configuration
            changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
      type: object
    InputDatadogAgent:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - datadog_agent
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Toggle to Yes to extract each incoming metric to multiple events,
            one per data point. This works well when sending metrics to a
            statsd-type output. If sending metrics to DatadogHQ or any
            destination that accepts arbitrary JSON, leave toggled to No (the
            default).
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        proxyMode:
          type: object
          title: ""
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Forward API key validation requests
              default: false
              description: Toggle to Yes to send key validation requests from Datadog Agent to
                the Datadog API. If toggled to No (the default), Stream handles
                key validation requests by always responding that the key is
                valid.
      type: object
    InputDatagen:
      required:
        - samples
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        samples:
          title: Datagen
          description: List of datagens
          type: array
          minItems: 1
          items:
            type: object
            required:
              - sample
              - eventsPerSec
            properties:
              sample:
                type: string
                title: Data Generator File
                description: Name of the datagen file
              eventsPerSec:
                type: integer
                title: Events Per Second Per Worker Node
                description: Maximum no. of events to generate per second per worker node.
                  Defaults to 10.
                default: 10
                minimum: 1
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputHttpRaw:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - http_raw
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthed access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        activityLogSampleRate:
          type: integer
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        allowedPaths:
          type: array
          title: Allowed URI paths
          description: List of URI paths accepted by this input, wildcards are supported,
            e.g /api/v*/hook. Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
        allowedMethods:
          type: array
          title: Allowed HTTP methods
          description: List of HTTP methods accepted by this input, wildcards are
            supported, e.g. P*, GET. Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
      type: object
    InputKinesis:
      required:
        - streamName
        - region
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kinesis
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        streamName:
          type: string
          title: Stream name
          description: Kinesis stream name to read data from.
        serviceInterval:
          type: integer
          title: Service Period
          description: Time interval in minutes between consecutive service calls
          default: 1
          minimum: 1
          maximum: 5
        shardExpr:
          type: string
          title: Shard selection expression
          description: A JS expression to be called with each shardId for the stream, if
            the expression evalutates to a truthy value the shard will be
            processed.
          default: "true"
        shardIteratorType:
          type: string
          title: Shard iterator start
          description: Location at which to start reading a shard for the first time.
          enum:
            - TRIM_HORIZON
            - LATEST
          default: TRIM_HORIZON
        payloadFormat:
          type: string
          title: Record data format
          description: Format of data inside the Kinesis Stream records. Gzip compression
            is automatically detected.
          enum:
            - cribl
            - ndjson
            - cloudwatch
            - line
          default: cribl
        getRecordsLimit:
          type: integer
          title: Records limit per call
          description: Maximum number of records per getRecords call
          minimum: 5000
          default: 5000
          maximum: 10000
        getRecordsLimitTotal:
          type: integer
          title: Total records limit
          description: Maximum number of records, across all shards, to pull down at once
            per Worker Process
          minimum: 20000
          default: 20000
        loadBalancingAlgorithm:
          type: string
          title: Shard Load Balancing
          description: The load-balancing algorithm to use for spreading out shards across
            Workers and Worker Processes
          enum:
            - ConsistentHashing
            - RoundRobin
          default: ConsistentHashing
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to AWS'
            Region-specific endpoint. Otherwise, it must point to Kinesis
            stream-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        verifyKPLCheckSums:
          type: boolean
          title: Verify KPL checksums
          description: Verify Kinesis Producer Library (KPL) event checksums
          default: false
        avoidDuplicates:
          type: boolean
          title: Avoid duplicate records
          description: "Yes means: when resuming streaming from a stored state, Stream
            will read the next available record, rather than rereading the
            last-read record. Enabling this can cause data loss after a Worker
            Node's unexpected shutdown or restart."
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
      type: object
    InputCriblmetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - criblmetrics
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        prefix:
          type: string
          title: Metric Name Prefix
          description: A prefix that is applied to the metrics provided by Cribl Stream
          default: cribl.logstream.
        fullFidelity:
          type: boolean
          title: Full Fidelity
          description: "Include granular metrics.  Disabling this will drop the following
            metrics events:
            `cribl.logstream.host.(in_bytes,in_events,out_bytes,out_events)`,
            `cribl.logstream.index.(in_bytes,in_events,out_bytes,out_events)`,
            `cribl.logstream.source.(in_bytes,in_events,out_bytes,out_events)`,
            `cribl.logstream.sourcetype.(in_bytes,in_events,out_bytes,out_event\
            s)`."
          default: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputMetrics:
      required:
        - host
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - metrics
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
        udpPort:
          type: integer
          title: UDP Port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
        tcpPort:
          type: integer
          title: TCP Port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
        maxBufferSize:
          type: integer
          title: Max Buffer Size (events)
          description: Maximum number of events to buffer when downstream is blocking.
            Only applies to UDP.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP Allowlist Regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2
          default: false
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - udpPort
            - tcpPort
      type: object
    InputS3:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - s3
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from.
            When a non-AWS URL is specified, format must be:
            '{url}/myQueueName'. E.g., 'https://host:port/myQueueName'. Value
            must be a JavaScript expression (which can evaluate to a constant
            value), enclosed in quotes or backticks. Can be evaluated only at
            init time. E.g., referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS Account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required,
            unless the Queue entry is a URL or ARN that includes a Region.
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: integer
          title: Max Messages
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: integer
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          default: 600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: integer
          title: Num receivers
          description: The Number of receiver processes to run, the higher the number the
            better throughput at the expense of CPU overhead
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: integer
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if
            timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Toggle to Yes to skip files that trigger a processing error.
            Defaults to No, which enables retries after processing errors.
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        enableSQSAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials when accessing SQS.
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Custom Command
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        parquetChunkSizeMB:
          type: integer
          title: Max Parquet chunk size (MB)
          description: Maximum file size for each Parquet chunk.
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: integer
          title: Parquet chunk download timeout (seconds)
          description: The maximum time to wait for a Parquet file's chunk to be
            downloaded. Processing will end if a required chunk could not be
            downloaded within the time imposed by this setting.
          default: 600
          maximum: 3600
          minimum: 1
        pollTimeout:
          type: integer
          title: Poll timeout (secs)
          description: The amount of time to wait for events before trying polling again.
            The lower the number the higher the AWS bill. The higher the number
            the longer it will take for the source to react to configuration
            changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
      type: object
    InputSnmp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - snmp
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
        port:
          type: integer
          title: UDP Port
          maximum: 65535
          description: UDP port to receive SNMP traps on. Defaults to 162.
          default: 162
        maxBufferSize:
          type: integer
          title: Max Buffer Size (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP Allowlist Regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputOpenTelemetry:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - open_telemetry
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses). IPv6
            addresses must be enclosed by square brackets.
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
          default: 4317
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader: {}
        captureHeaders: {}
        activityLogSampleRate: {}
        requestTimeout:
          type: integer
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        protocol:
          type: string
          title: Protocol
          description: Select whether to leverage gRPC or HTTP for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
        extractSpans:
          type: boolean
          title: Extract spans
          description: Toggle to Yes to extract each incoming span to a separate event.
          default: false
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Toggle to Yes to extract each incoming Gauge or IntGauge metric to
            multiple events, one per data point.
          default: false
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
          default: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        maxActiveCxn:
          type: integer
          title: Max active connections
          description: Maximum number of active connections allowed per Worker Process,
            use 0 for unlimited
          default: 1000
          minimum: 0
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    InputSqs:
      required:
        - queueName
        - queueType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - sqs
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read events from. When a
            non-AWS URL is specified, format must be: '{url}/myQueueName'. E.g.,
            'https://host:port/myQueueName'. Value must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can only be evaluated at init time. E.g.
            referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
        queueType:
          title: Queue Type
          type: string
          description: The queue type used (or created). Defaults to Standard
          enum:
            - standard
            - fifo
          default: standard
        awsAccountId:
          title: AWS Account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
        createQueue:
          type: boolean
          title: Create Queue
          description: Create queue if it does not exist.
          default: false
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the
            Queue entry is a URL or ARN that includes a Region.
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to SQS-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        maxMessages:
          type: integer
          title: Max Messages
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 10
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: integer
          title: Visibility Timeout Seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          default: 600
          minimum: 0
          maximum: 43200
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        pollTimeout:
          type: integer
          title: Poll timeout (secs)
          description: The amount of time to wait for events before trying polling again.
            The lower the number the higher the AWS bill. The higher the number
            the longer it will take for the source to react to configuration
            changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        numReceivers:
          type: integer
          title: Num receivers
          description: The Number of receiver processes to run, the higher the number the
            better throughput at the expense of CPU overhead
          default: 3
          minimum: 1
          maximum: 100
      type: object
    InputSyslog:
      required:
        - host
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - syslog
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
        udpPort:
          type: integer
          title: UDP port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
        tcpPort:
          type: integer
          title: TCP port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
        maxBufferSize:
          type: integer
          title: Max buffer size (events)
          description: Maximum number of events to buffer when downstream is blocking.
            Only applies to UDP.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        timestampTimezone:
          type: string
          title: Default timezone
          description: Timezone to assign to timestamps without timezone info.
          default: local
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: Whether to treat UDP packet data received as full syslog message
          default: false
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2
          default: false
        keepFieldsList:
          type: array
          title: Fields to keep
          description: Wildcard list of fields to keep from source data, * = ALL (default)
          default: []
          minItems: 0
          items:
            type: string
        octetCounting:
          type: boolean
          title: Octet count framing
          description: Enable if incoming messages use octet counting per RFC 6587.
          default: false
        allowNonStandardAppName:
          type: boolean
          title: Allow non-standard app name
          description: Enable if RFC 3164-formatted messages have hyphens in the app name
            portion of the TAG section. If disabled, only alphanumeric
            characters and underscores are allowed. Ignored for RFC
            5424-formatted messages.
          default: false
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - udpPort
            - tcpPort
      type: object
      anyOf:
        - required:
            - host
            - udpPort
        - required:
            - host
            - tcpPort
    InputFile:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        mode:
          type: string
          enum:
            - manual
          default: auto
          description: Choose how to discover files to monitor.
        interval:
          type: integer
          default: 10
          minimum: 1
          title: Polling interval
          description: "Time, in seconds, between scanning for files. "
        filenames:
          type: array
          title: Filename allowlist
          description: The full path of discovered files are matched against this wildcard
            list.
          default:
            - "!*.journal"
            - "!*/faillog"
            - "!*/lastlog"
            - "!*/tallylog"
            - "*/log/*"
            - "*log"
          items:
            type: string
        tailOnly:
          type: boolean
          default: false
          title: Collect from end
          description: Read only new entries at the end of all files discovered at next
            startup. @{product} will then read newly discovered files from the
            head. Disable this to resume reading all files from head.
        idleTimeout:
          type: integer
          default: 300
          minimum: 1
          title: Idle timeout
          description: "Time, in seconds, before an idle file is closed. "
        maxAgeDur:
          type: string
          title: Max age duration
          description: "The maximum file age, in duration form (e.g,: 60s, 4h, 3d, 1w),
            for files to monitor. Age will be relative to file modification
            time. Default of no value will apply no max age filters."
        checkFileModTime:
          type: boolean
          default: false
          title: Check file modification times
          description: Skip files with modification times earlier than the maximum age
            duration.
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        path:
          type: string
          title: Search path
          description: Directory path to search for files. Environment variables will be
            resolved, e.g. $CRIBL_HOME/log/.
        depth:
          type: integer
          minimum: 0
          title: Max depth
          description: Set how many subdirectories deep to search. Use 0 to search only
            files in the given path, 1 to also look in its immediate
            subdirectories, etc. Leave it empty for unlimited depth.
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - mode
            - depth
      type: object
    InputTcp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - tcp
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP Allowlist Regex
          description: Regex matching IP addresses that are allowed to establish a
            connection.
          default: /.*/
        maxActiveCxn:
          type: integer
          title: Max Active Connections
          description: Maximum number of active connections allowed per Worker Process,
            use 0 for unlimited
          default: 1000
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        enableHeader:
          type: boolean
          title: Enable Header
          description: 'If enabled, client will pass the header record with every new
            connection. The header can contain an authToken, and an object with
            a list of fields and values to add to every event. These fields can
            be used to simplify Event Breaker selection, routing, etc. Header
            has this format, and must be followed by a newline: { "authToken" :
            "myToken", "fields": { "field1": "value1", "field2": "value2" } }'
          default: false
          
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Custom Command
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments
              items:
                type: string
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - enableHeader
      type: object
    InputAppscope:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - appscope
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        ipWhitelistRegex:
          type: string
          title: IP Allowlist Regex
          description: Regex matching IP addresses that are allowed to establish a
            connection.
          default: /.*/
        maxActiveCxn:
          type: integer
          title: Max Active Connections
          description: Maximum number of active connections allowed per Worker Process,
            use 0 for unlimited
          default: 1000
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event breaking rulesets that will be applied, in order,
            to the input data stream.
          items:
            type: string
        staleChannelFlushMs:
          type: integer
          title: Event Breaker buffer timeout (ms)
          description: The amount of time (in milliseconds) the Event Breaker will wait
            for new data to be sent to a specific channel, before flushing the
            data stream out, as-is, to the Pipelines.
          default: 10000
          minimum: 10
          maximum: 43200000
        enableUnixPath:
          type: boolean
          title: UNIX domain socket
          description: Toggle to Yes to specify a file-backed UNIX domain socket
            connection, instead of a network host and port.
          default: false
          
        filter:
          type: object
          properties:
            enable:
              type: boolean
              title: Enable AppScope filter
              description: Toggle to Yes to specify processes to scope and configs to apply.
              
            allow:
              type: array
              title: Allowlist
              description: Specify processes that AppScope SHOULD be loaded into, and the
                config to use.
              items:
                type: object
                properties:
                  procname:
                    type: string
                    title: Process name
                    description: Specify the name of a process or family of processes.
                  arg:
                    type: string
                    title: Process argument
                    description: Specify a string to substring-match against process command-line.
                  config:
                    type: string
                    title: AppScope config
                    description: Choose a config to apply to processes that match the process name
                      and/or argument.
                anyOf:
                  - required:
                      - procname
                      - config
                  - required:
                      - arg
                      - config
            deny:
              type: array
              title: Denylist
              description: Specify processes that AppScope SHOULD NOT be loaded into.
              items:
                type: object
                properties:
                  procname:
                    type: string
                    title: Process name
                    description: Specify the name of a process or family of processes.
                  arg:
                    type: string
                    title: Process argument
                    description: Specify a string to substring-match against process command-line.
                anyOf:
                  - required:
                      - procname
                  - required:
                      - arg
            transportURL:
              type: string
              title: Transport override
              description: To override the UNIX domain socket or address/port specified in
                General Settings (while leaving Authentication settings as is),
                enter a URL.
        persistence:
          type: object
          title: Persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events and metrics on disk for Cribl Edge and Search
              default: false
              
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Max data size
              description: Maximum disk space allowed to be consumed (e.g., 420MB or 4GB).
                Once reached, older data will be deleted.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Max data age
              type: string
              description: Maximum amount of time to retain data (e.g., 2h or 4d). Once
                reached, older data will be deleted.
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Select data compression format. Optional.
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/appscope
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/appscope
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Whether to require clients to present their certificates. Used to
                perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        unixSocketPath:
          type: string
          title: UNIX socket path
          default: $CRIBL_HOME/state/appscope.sock
          description: Path to the UNIX domain socket to listen on.
        unixSocketPerms:
          type: string
          title: UNIX socket permissions
          description: Permissions to set for socket e.g., 777. If empty, falls back to
            the runtime user's default permissions.
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header
            field). If empty, unauthed access is permitted.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: authToken
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - enableUnixPath
      type: object
    InputWef:
      required:
        - host
        - port
        - subscriptions
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - wef
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
          default: 5986
        authMethod:
          type: string
          title: Authentication method
          description: Method by which to authenticate incoming client connections.
          enum:
            - kerberos
            - clientCert
          default: clientCert
        tls:
          type: object
          title: mTLS settings
          required:
            - privKeyPath
            - certPath
            - caPath
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable TLS
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate client certs
              description: Required for WEF certificate authentication.
              default: true
            requestCert:
              type: boolean
              title: Authenticate client
              description: Required for WEF certificate authentication.
              default: true
            certificateName:
              type: string
              title: Certificate name
              description: Name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Server path containing CA certificates (in PEM format) to use. Can
                reference $ENV_VARS. If multiple certificates are present in a
                .pem, each must directly certify the one preceding it.
            commonNameRegex:
              type: string
              title: Common name
              description: Regex matching allowable common names in peer certificates' subject
                attribute.
              default: /.*/
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to accept from connections.
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to accept from connections
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            ocspCheck:
              type: boolean
              title: Verify certificate via OCSP
              description: Enable OCSP check of certificate
              default: false
              
            keytab: {}
            principal: {}
            ocspCheckFailClose:
              type: boolean
              title: Strict validation
              description: If enabled, checks will fail on any OCSP error. Otherwise, checks
                will fail only when a certificate is revoked, ignoring other
                errors.
              default: false
        maxActiveReq:
          type: integer
          title: Max active requests
          description: Maximum number of active requests per Worker Process. Use 0 for
            unlimited.
          default: 256
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Toggle this to Yes to add request headers to events, in the
            __headers field.
          default: false
        keepAliveTimeout:
          type: integer
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 5
          minimum: 1
          maximum: 600
        socketTimeout:
          type: integer
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        caFingerprint:
          type: string
          title: CA fingerprint override
          description: SHA1 fingerprint expected by the client, if it does not match the
            first certificate in the configured CA chain
        keytab:
          type: string
          title: Keytab location
          description: Path to the keytab file containing the service principal
            credentials. @{product} will use `/etc/krb5.keytab` if not provided.
        principal:
          type: string
          title: Service principal name
          description: Kerberos principal used for authentication, typically in the form
            HTTP/<hostname>@<REALM>.
        allowMachineIdMismatch:
          type: boolean
          title: Allow MachineID mismatch
          description: Allow events to be ingested even if their MachineID does not match
            the client certificate CN.
          default: false
        subscriptions:
          title: Subscriptions
          description: Subscriptions to events on forwarding endpoints.
          type: array
          items:
            type: object
            required:
              - subscriptionName
              - contentFormat
              - heartbeatInterval
              - batchTimeout
              - targets
            minLength: 1
            properties:
              subscriptionName:
                title: Name
                type: string
                description: Friendly name for this subscription.
              version:
                title: Version
                type: string
                description: Version UUID for this subscription. If any subscription parameters
                  are modified, this value will change.
              contentFormat:
                title: Format
                type: string
                enum:
                  - Raw
                  - RenderedText
                description: Content format in which the endpoint should deliver events.
                default: Raw
              heartbeatInterval:
                title: Heartbeat
                type: integer
                description: Max time (in seconds) between endpoint checkins before considering
                  it unavailable.
                minimum: 1
                default: 60
              batchTimeout:
                title: Batch timeout
                type: integer
                description: Interval (in seconds) over which the endpoint should collect events
                  before sending them to Stream.
                minimum: 0
                default: 60
              readExistingEvents:
                title: Read existing events
                type: boolean
                description: Set to Yes if a newly-subscribed endpoint should send previously
                  existing events. Set to No to only receive new events
                default: false
              sendBookmarks:
                title: Use bookmarks
                type: boolean
                description: If toggled to Yes, @{product} will keep track of which events have
                  been received, resuming from that point after a
                  re-subscription. This setting takes precedence over 'Read
                  existing events' -- see the documentation for details.
                default: true
              compress:
                title: Compression
                type: boolean
                description: If toggled to Yes, Stream will receive compressed events from the
                  source.
                default: true
              targets:
                type: array
                title: Targets
                description: "Enter the DNS names of the endpoints that should forward these
                  events. You may use wildcards, for example: *.mydomain.com"
                items:
                  type: string
                  minLength: 1
                default:
                  - "*"
              querySelector:
                type: string
                title: Query builder mode
                description: Select the query builder mode.
                enum:
                  - simple
                  - xml
                default: simple
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - authMethod
            - keytab
      type: object
    InputWinEventLogs:
      required:
        - logNames
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - win_event_logs
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        logNames:
          type: array
          title: Event Logs
          description: Enter the event logs to collect. Run "Get-WinEvent -ListLog *" in
            PowerShell to see the available logs.
          default:
            - Application
            - Security
            - System
          items:
            type: string
          minItems: 1
          uniqueItems: true
        readMode:
          type: string
          default: oldest
          enum:
            - oldest
            - newest
          title: Read Mode
          description: Read all stored and future event logs, or only future events.
        interval:
          type: integer
          default: 10
          minimum: 1
          title: Polling Interval
          description: Time, in seconds, between checking for new entries.
        batchSize:
          type: integer
          default: 500
          minimum: 1
          title: Batch Size
          description: The maximum number of events to read in one polling interval. A
            batch size higher than 500 can cause delays when pulling from
            multiple event logs.
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        maxEventBytes:
          type: integer
          title: Max Event Bytes
          description: The maximum number of bytes that an event can be before being
            flushed to the pipelines
          default: 51200
          minimum: 1
          maximum: 134217728
      type: object
    InputRawUdp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - raw_udp
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
        port:
          type: integer
          title: Port
          maximum: 65535
          description: Port to listen on.
        maxBufferSize:
          type: integer
          title: Max buffer size (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: If true, each UDP packet is assumed to contain a single message. If
            false, each UDP packet is assumed to contain multiple messages,
            separated by newlines.
          default: false
        ingestRawBytes:
          type: boolean
          title: Ingest raw bytes
          description: If true, a __rawBytes field will be added to each event containing
            the raw bytes of the datagram.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    InputJournalFiles:
      required:
        - path
        - journals
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          title: Input Type
          enum:
            - splunk
            - splunk_hec
            - syslog
            - tcpjson
            - grafana
            - loki
            - http
            - http_raw
            - firehose
            - elastic
            - kafka
            - confluent_cloud
            - msk
            - kinesis
            - eventhub
            - azure_blob
            - metrics
            - sqs
            - s3
            - snmp
            - crowdstrike
            - tcp
            - raw_udp
            - office365_service
            - office365_mgmt
            - office365_msg_trace
            - prometheus
            - edge_prometheus
            - prometheus_rw
            - appscope
            - google_pubsub
            - open_telemetry
            - datadog_agent
            - wef
            - datagen
            - cribl
            - criblmetrics
            - cribl_http
            - cribl_tcp
            - win_event_logs
            - system_metrics
            - windows_metrics
            - system_state
            - kube_metrics
            - kube_logs
            - kube_events
            - exec
            - splunk_search
            - file
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          description: Enable/disable this input
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes.
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable Persistent Queue
          description: "For details on Persistent Queues, see:
            [https://docs.cribl.io/stream/persistent-queues](https://docs.cribl\
            .io/stream/persistent-queues)"
          
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        connections:
          type: array
          
          title: Quick Connections
          description: Direct connections to Destinations, optionally via a Pipeline or a
            Pack.
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline/Pack
                description: Select Pipeline or Pack. Optional.
                type: string
              output:
                title: Destination
                description: Select a Destination.
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: integer
              title: Max buffer size
              description: The maximum number of events to hold in memory before writing the
                events to disk.
              default: 1000
              minimum: 42
            commitFrequency:
              type: integer
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them.
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: Max file size
              description: The maximum size to store in each queue file before closing and
                optionally compressing (KB, MB, etc.).
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Max queue size
              description: The maximum amount of disk space the queue is allowed to consume.
                Once reached, the system stops queueing and applies the fallback
                Queue-full behavior. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>."
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data.
        path:
          type: string
          title: Search path
          description: Directory path to search for journals. Environment variables will
            be resolved, e.g. $CRIBL_EDGE_FS_ROOT/var/log/journal/$MACHINE_ID.
        interval:
          type: integer
          default: 10
          minimum: 1
          title: Polling interval
          description: "Time, in seconds, between scanning for journals. "
        journals:
          type: array
          title: Journal allowlist
          description: The full path of discovered journals are matched against this
            wildcard list.
          default:
            - system
          items:
            type: string
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which journal objects to allow. Events are
            generated if no rules are given or if all the rules' expressions
            evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Journal objects. Return 'true' to
                  include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: severity <= 4
              description: Allow log messages having 'emergency', 'alert', 'critical',
                'error', or 'warning' priority
        currentBoot:
          type: boolean
          default: false
          title: Current boot only
          description: Skip log messages that are not part of the current boot session.
        maxAgeDur:
          type: string
          title: Max age duration
          description: "The maximum log message age, in duration form (e.g,: 60s, 4h, 3d,
            1w).  Default of no value will apply no max age filters."
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
      type: object
    Input:
      oneOf:
        - $ref: "#/components/schemas/InputCollection"
        - $ref: "#/components/schemas/InputKafka"
        - $ref: "#/components/schemas/InputMsk"
        - $ref: "#/components/schemas/InputHttp"
        - $ref: "#/components/schemas/InputSplunk"
        - $ref: "#/components/schemas/InputSplunkSearch"
        - $ref: "#/components/schemas/InputSplunkHec"
        - $ref: "#/components/schemas/InputAzureBlob"
        - $ref: "#/components/schemas/InputElastic"
        - $ref: "#/components/schemas/InputConfluentCloud"
        - $ref: "#/components/schemas/InputGrafana"
        - $ref: "#/components/schemas/InputLoki"
        - $ref: "#/components/schemas/InputPrometheusRw"
        - $ref: "#/components/schemas/InputPrometheus"
        - $ref: "#/components/schemas/InputEdgePrometheus"
        - $ref: "#/components/schemas/InputOffice365Mgmt"
        - $ref: "#/components/schemas/InputOffice365Service"
        - $ref: "#/components/schemas/InputOffice365MsgTrace"
        - $ref: "#/components/schemas/InputEventhub"
        - $ref: "#/components/schemas/InputExec"
        - $ref: "#/components/schemas/InputFirehose"
        - $ref: "#/components/schemas/InputGooglePubsub"
        - $ref: "#/components/schemas/InputCribl"
        - $ref: "#/components/schemas/InputCriblTcp"
        - $ref: "#/components/schemas/InputCriblHttp"
        - $ref: "#/components/schemas/InputTcpjson"
        - $ref: "#/components/schemas/InputSystemMetrics"
        - $ref: "#/components/schemas/InputSystemState"
        - $ref: "#/components/schemas/InputKubeMetrics"
        - $ref: "#/components/schemas/InputKubeLogs"
        - $ref: "#/components/schemas/InputKubeEvents"
        - $ref: "#/components/schemas/InputWindowsMetrics"
        - $ref: "#/components/schemas/InputCrowdstrike"
        - $ref: "#/components/schemas/InputDatadogAgent"
        - $ref: "#/components/schemas/InputDatagen"
        - $ref: "#/components/schemas/InputHttpRaw"
        - $ref: "#/components/schemas/InputKinesis"
        - $ref: "#/components/schemas/InputCriblmetrics"
        - $ref: "#/components/schemas/InputMetrics"
        - $ref: "#/components/schemas/InputS3"
        - $ref: "#/components/schemas/InputSnmp"
        - $ref: "#/components/schemas/InputOpenTelemetry"
        - $ref: "#/components/schemas/InputSqs"
        - $ref: "#/components/schemas/InputSyslog"
        - $ref: "#/components/schemas/InputFile"
        - $ref: "#/components/schemas/InputTcp"
        - $ref: "#/components/schemas/InputAppscope"
        - $ref: "#/components/schemas/InputWef"
        - $ref: "#/components/schemas/InputWinEventLogs"
        - $ref: "#/components/schemas/InputRawUdp"
        - $ref: "#/components/schemas/InputJournalFiles"
    AddHecTokenRequest:
      type: object
      properties:
        description:
          type: string
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            required:
              - name
              - value
        token:
          type: string
      required:
        - token
    UpdateHecTokenRequest:
      type: object
      properties:
        description:
          type: string
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            required:
              - name
              - value
    OutputDefault:
      required:
        - defaultId
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - default
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        defaultId:
          type: string
          title: Default Output ID
          description: ID of the default output. This will be used whenever a
            nonexistent/deleted output is referenced.
      type: object
    OutputWebhook:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - webhook
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
        method:
          type: string
          title: Method
          description: The method to use when sending events. Defaults to POST.
          enum:
            - POST
            - PUT
            - PATCH
          default: POST
        format:
          type: string
          title: Format
          description: Specifies how to format events before sending out. Defaults to
            NDJSON.
          enum:
            - custom
            - json_array
          default: ndjson
        keepAlive:
          type: boolean
          title: Keep alive
          description: Toggle to No if you want @{product} to close the connection as soon
            as the outgoing request is sent. Defaults to Yes.
          default: true
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 512000
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically
            on a per-event basis in the __headers field, as explained
            [here](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          type: string
          title: Authentication type
          description: The authentication method to use for the HTTP request. Defaults to
            None.
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
            - none
          default: none
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        customSourceExpression:
          type: string
          title: Source expression
          description: "Expression to evaluate on events, to generate output
            notifications. E.g.: `notification=${_raw}`. See docs for other
            fields available. If empty, we send the full notification event as
            stringified JSON"
          default: __httpOut
        customDropWhenNull:
          type: boolean
          title: Drop when null
          description: Whether or not to drop events when the source expression evaluates
            to null.
          default: false
        customEventDelimiter:
          type: string
          title: Event delimiter
          description: Delimiter string to insert between individual events. Defaults to
            newline character.
          default: \n
        customContentType:
          type: string
          title: Content type
          description: Content type to use for request. Defaults to application/x-ndjson.
            Any content types set in Advanced Settings > Extra HTTP headers will
            override this entry.
          default: application/x-ndjson
        customPayloadExpression:
          type: string
          title: Batch expression
          description: 'Expression specifying how to format the payload for each batch. To
            reference the events to send, use the `${events}` variable. Example
            expression: `{ "items" : [${events}] }` would send the batch inside
            a JSON object.'
          default: "`${events}`"
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    OutputDevnull:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - devnull
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
      type: object
    OutputSyslog:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - syslog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        protocol:
          type: string
          title: Protocol
          description: The network protocol to use for sending out syslog messages
          default: tcp
          enum:
            - udp
        facility:
          type: integer
          title: Facility
          description: Default value for message facility, will be overwritten by value of
            __facility if set. Defaults to user.
          default: 1
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
        severity:
          type: integer
          title: Severity
          description: Default value for message severity, will be overwritten by value of
            __severity if set. Defaults to notice.
          default: 5
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        appName:
          type: string
          title: App Name
          description: Default value for application name, will be overwritten by value of
            __appname if set. Defaults to Cribl.
          default: Cribl
        messageFormat:
          type: string
          default: rfc3164
          enum:
            - rfc3164
            - rfc5424
          title: Message Format
          description: The syslog message format depending on the receiver's support
        timestampFormat:
          type: string
          default: syslog
          enum:
            - syslog
            - iso8601
          title: Timestamp Format
          description: Timestamp format to use when serializing event's time field
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        octetCountFraming:
          type: boolean
          title: Octet count framing
          description: When enabled, messages will be prefixed with the byte count of the
            message. Otherwise, no prefix will be set, and the message will be
            appended with a \n.
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: integer
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
        maxRecordSize:
          type: integer
          title: Max Record Size
          default: 1500
          minimum: 1
          maximum: 2048
          description: Maximum size of syslog messages. If max record size is > than MTU
            then UDP packets can be fragmented across, set this value  <= MTU to
            avoid fragmentation.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - loadBalanced
            - protocol
      type: object
    OutputSplunk:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - splunk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: integer
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 9997
        nestedFields:
          type: string
          enum:
            - json
            - none
          title: Nested field serialization
          description: Specifies how to serialize nested fields into index-time fields.
          default: none
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event.
            Supported in Splunk 8.0 and above.
          default: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps
            minimize data loss during shutdown.
          default: true
          
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake.
          enum:
            - v3
            - v4
          default: v3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        maxFailedHealthChecks:
          type: integer
          title: Max failed health checks
          description: Maximum number of times healthcheck can fail before we close
            connection. If set to 0 (disabled), and the connection to Splunk is
            forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a
            Splunk indexer.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: authToken
      type: object
    OutputSplunkLb:
      required:
        - hosts
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - splunk_lb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        dnsResolvePeriodSec:
          type: integer
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: Re-resolve any hostnames every this many seconds and pick up
            destinations from A records.
        loadBalanceStatsPeriodSec:
          type: integer
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes.
        maxConcurrentSenders:
          type: integer
          default: 0
          minimum: 0
          title: Max connections
          description: Maximum number of concurrent connections (per worker process). A
            random set of IPs will be picked on every DNS resolution period. Use
            0 for unlimited.
        nestedFields:
          type: string
          enum:
            - json
            - none
          title: Nested field serialization
          description: Specifies how to serialize nested fields into index-time fields.
          default: none
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event.
            Supported in Splunk 8.0 and above.
          default: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps
            minimize data loss during shutdown.
          default: true
          
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake.
          enum:
            - v3
            - v4
          default: v3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        indexerDiscovery:
          type: boolean
          default: false
          title: Indexer Discovery
          description: Automatically discover indexers in indexer clustering environment.
          
        senderUnhealthyTimeAllowance:
          type: integer
          title: Endpoint health fluctuation time allowance (ms)
          description: How long (in milliseconds) each LB endpoint can report blocked
            before the Destination reports unhealthy, blocking the sender.
            (Grace period for fluctuations.) Use 0 to disable; max 1 minute.
          default: 100
          minimum: 0
          maximum: 60000
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        maxFailedHealthChecks:
          type: integer
          title: Max failed health checks
          description: Maximum number of times healthcheck can fail before we close
            connection. If set to 0 (disabled), and the connection to Splunk is
            forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
        indexerDiscoveryConfigs:
          type: object
          description: List of configurations to set up indexer discovery in Splunk
            Indexer clustering environment.
          required:
            - masterUri
            - site
            - refreshIntervalSec
          properties:
            site:
              type: string
              pattern: "[0-9A-Za-z-._]+"
              title: Site
              description: Clustering site of the indexers from where indexers need to be
                discovered. In case of single site cluster, it defaults to
                'default' site.
              default: default
            masterUri:
              type: string
              pattern: ^https?://[a-zA-Z0-9-._]+:[0-9]+$
              title: Cluster Manager URI
              description: "Full URI of Splunk cluster Manager (scheme://host:port). E.g.:
                https://managerAddress:8089"
            refreshIntervalSec:
              type: integer
              default: 300
              minimum: 60
              maximum: 86400
              title: Refresh Period
              description: Time interval in seconds between two consecutive indexer list
                fetches from cluster Manager.
            authType:
              title: Authentication method
              type: string
              enum:
                - secret
                - manual
              default: manual
              description: Enter a token directly, or provide a secret referencing a token
            authToken:
              type: string
              title: Auth token
              description: Authentication token required to authenticate to cluster Manager
                for indexer discovery.
              default: ""
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select (or create) a stored text secret
              x-metasecret:
                type: text
                target: authToken
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames.
        hosts:
          type: array
          title: Destinations
          description: Set of Splunk indexers to load-balance data to.
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver.
              port:
                type: integer
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host.
                default: 9997
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS.
                enum:
                  - inherit
                  - off
                default: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not
                  specified, defaults to connection host (iff not an IP);
                  otherwise, to the global TLS settings.
              weight:
                type: integer
                title: Load Weight
                description: The weight to use for load-balancing purposes.
                minimum: 0
                default: 1
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a
            Splunk indexer.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: authToken
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - indexerDiscovery
            - indexerDiscoveryConfigs
      type: object
    OutputSplunkHec:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - splunk_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          
        nextQueue:
          type: string
          title: Next Processing Queue
          description: In the Splunk app, define which Splunk processing queue to send the
            events after HEC processing.
          default: indexQueue
        tcpRouting:
          type: string
          title: Default _TCP_ROUTING
          description: In the Splunk app, set the value of _TCP_ROUTING for events that do
            not have _ctrl._TCP_ROUTING set.
          default: nowhere
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 2097152
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        enableMultiMetrics:
          type: boolean
          title: Output multi-metrics
          description: Output metrics in multiple-metric format, supported in Splunk 8.0
            and above to allow multiple metrics in a single event.
          default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        url:
          type: string
          title: Splunk HEC Endpoint
          description: URL to a Splunk HEC endpoint to send events to, e.g.,
            http://localhost:8088/services/collector/event
          default: http://localhost:8088/services/collector/event
          pattern: ^https?://.*
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames.
        urls:
          type: array
          title: Splunk HEC Endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: HEC Endpoint
                description: URL to a Splunk HEC endpoint to send events to, e.g.,
                  http://localhost:8088/services/collector/event
                default: http://localhost:8088/services/collector/event
                pattern: ^https?://.*
              weight:
                type: integer
                title: Load Weight
                description: The weight to use for load-balancing purposes.
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: integer
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: Re-resolve any hostnames every this many seconds and pick up
            destinations from A records.
        loadBalanceStatsPeriodSec:
          type: integer
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes.
        token:
          type: string
          title: HEC Auth token
          description: Splunk HEC authentication token
        textSecret:
          type: string
          title: HEC Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - loadBalanced
            - urls
      type: object
    OutputTcpjson:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - tcpjson
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          
        compression:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        tokenTTLMinutes:
          type: integer
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated
            authentication token expires, valid values between 1 and 60
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: integer
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames.
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to.
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver.
              port:
                type: integer
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host.
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS.
                enum:
                  - inherit
                  - off
                default: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not
                  specified, defaults to connection host (iff not an IP);
                  otherwise, to the global TLS settings.
              weight:
                type: integer
                title: Load Weight
                description: The weight to use for load-balancing purposes.
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: integer
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: Re-resolve any hostnames every this many seconds and pick up
            destinations from A records.
        loadBalanceStatsPeriodSec:
          type: integer
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes.
        maxConcurrentSenders:
          type: integer
          default: 0
          minimum: 0
          title: Max connections
          description: Maximum number of concurrent connections (per worker process). A
            random set of IPs will be picked on every DNS resolution period. Use
            0 for unlimited.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        authToken:
          type: string
          title: Auth token
          description: Optional authentication token to include as part of the connection
            header
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: authToken
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - loadBalanced
            - hosts
      type: object
    OutputWavefront:
      required:
        - domain
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - wavefront
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        domain:
          type: string
          title: Domain name
          description: WaveFront domain name, e.g. "longboard"
          default: longboard
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        token:
          type: string
          title: Auth token
          description: WaveFront API authentication token (see
            [here](https://docs.wavefront.com/wavefront_api.html#generating-an-api-token))
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputSignalfx:
      required:
        - realm
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - signalfx
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        realm:
          type: string
          title: Realm
          description: SignalFx realm name, e.g. "us0"
          default: us0
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        token:
          type: string
          title: Auth token
          description: SignalFx API access token (see
            [here](https://docs.signalfx.com/en/latest/admin-guide/tokens.html#working-with-access-tokens))
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputFilesystem:
      required:
        - destPath
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - filesystem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        destPath:
          type: string
          title: Output location
          description: Final destination for the output files
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and
            moving to final destination. Use performant, stable storage.
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Append output's ID to staging location.
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove staging dirs
          description: Remove empty staging directories after moving files.
          default: false
          
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression defining how files are partitioned and organized.
            Default is date-based. If blank, Stream will fall back to the
            event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - parquet
            - raw
            - json
          default: json
          x-flagprefix: native
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant).
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`)
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
        maxFileSizeMB:
          type: integer
          title: Max file size (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxFileOpenTimeSec:
          type: integer
          title: Max file open time (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: integer
          title: Max file idle time (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: integer
          title: Max open files
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
        compress:
          type: string
          title: Compress
          description: Choose data compression format to apply before moving files to
            final destination.
          enum:
            - none
            - gzip
          default: none
        parquetRowGroupSize:
          type: string
          title: Row group size
          description: Ideal memory size for row group segments. E.g., 128MB or 1GB.
            Affects memory use when writing. Imposes a target, not a strict
            limit; the final size of a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 16MB
        parquetPageSize:
          type: string
          title: Page size
          description: Ideal memory size for page segments. E.g., 1MB or 128MB. Generally,
            lower values improve reading speed, while higher values improve
            compression. Imposes a target, not a strict limit; the final size of
            a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        spacer:
          type: string
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented.
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V1
          description: Serialization format of data pages. Note that not all reader
            implentations support Data page V2.
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: To log rows that @{product} skips due to data mismatch, first set
            logging to Debug, then toggle this on. Logs up to 20 unique rows.
        emptyDirCleanupSec:
          type: integer
          title: Staging cleanup period
          description: How often (secs) to clean-up empty directories when 'Remove Staging
            Dirs' is enabled.
          default: 300
          minimum: 10
          maximum: 86400
      type: object
    OutputS3:
      required:
        - bucket
        - destPath
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at init time. E.g., referencing a
            Global Variable: `myBucket-${C.vars.myVar}`."
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located.
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.SOME_SECRET}`).
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Append output's ID to staging location.
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove staging dirs
          description: Remove empty staging directories after moving files.
          default: false
          
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be evaluated only at init time. E.g.,
            referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`."
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects.
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects.
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
        serverSideEncryption:
          type: string
          title: Server side encryption
          description: Server-side encryption for uploaded objects.
          enum:
            - aws:kms
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression defining how files are partitioned and organized.
            Default is date-based. If blank, Stream will fall back to the
            event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - parquet
            - raw
            - json
          default: json
          x-flagprefix: native
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant).
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`)
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
        maxFileSizeMB:
          type: integer
          title: Max file size (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: integer
          title: Max open files
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
        maxFileOpenTimeSec:
          type: integer
          title: Max file open time (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: integer
          title: Max file idle time (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: integer
          title: Max concurrent file parts
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        awsApiKey:
          type: string
          title: Access key
          description: Access key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.SOME_ACCESS_KEY}`).
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        compress:
          type: string
          title: Compress
          description: Choose data compression format to apply before moving files to
            final destination.
          enum:
            - none
            - gzip
          default: none
        parquetRowGroupSize:
          type: string
          title: Row group size
          description: Ideal memory size for row group segments. E.g., 128MB or 1GB.
            Affects memory use when writing. Imposes a target, not a strict
            limit; the final size of a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 16MB
        parquetPageSize:
          type: string
          title: Page size
          description: Ideal memory size for page segments. E.g., 1MB or 128MB. Generally,
            lower values improve reading speed, while higher values improve
            compression. Imposes a target, not a strict limit; the final size of
            a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        spacer:
          type: string
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented.
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V1
          description: Serialization format of data pages. Note that not all reader
            implentations support Data page V2.
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: To log rows that @{product} skips due to data mismatch, first set
            logging to Debug, then toggle this on. Logs up to 20 unique rows.
        emptyDirCleanupSec:
          type: integer
          title: Staging cleanup period
          description: How often (secs) to clean-up empty directories when 'Remove Staging
            Dirs' is enabled.
          default: 300
          minimum: 10
          maximum: 86400
      type: object
    OutputAzureBlob:
      required:
        - containerName
        - destPath
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - azure_blob
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        containerName:
          type: string
          title: Container name
          description: A container organizes a set of blobs, similar to a directory in a
            file system. Value can be a JavaScript expression enclosed in quotes
            or backticks. @{product} evaluates the expression at init time. The
            expression can evaluate to a constant value, and can reference
            Global Variables, e.g., `myContainer-${C.env["CRIBL_WORKER_ID"]}`
        createContainer:
          type: boolean
          title: Create container
          description: Creates the configured container in Azure Blob Storage if it does
            not already exist.
          default: false
        destPath:
          type: string
          title: Blob prefix
          description: Root directory prepended to path before uploading. Value can be a
            JavaScript expression enclosed in quotes or backticks. @{product}
            evaluates the expression at init time. The expression can evaluate
            to a constant value, and can reference Global Variables, e.g.,
            `myBlobPrefix-${C.env["CRIBL_WORKER_ID"]}`
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Append output's ID to staging location.
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove staging dirs
          description: Remove empty staging directories after moving files.
          default: false
          
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression defining how files are partitioned and organized.
            Default is date-based. If blank, Stream will fall back to the
            event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - parquet
            - raw
            - json
          default: json
          x-flagprefix: native
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant).
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`)
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
        maxFileSizeMB:
          type: integer
          title: Max file size (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxFileOpenTimeSec:
          type: integer
          title: Max file open time (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: integer
          title: Max file idle time (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: integer
          title: Max open files
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter connection string directly, or select a stored secret
        compress:
          type: string
          title: Compress
          description: Choose data compression format to apply before moving files to
            final destination.
          enum:
            - none
            - gzip
          default: none
        parquetRowGroupSize:
          type: string
          title: Row group size
          description: Ideal memory size for row group segments. E.g., 128MB or 1GB.
            Affects memory use when writing. Imposes a target, not a strict
            limit; the final size of a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 16MB
        parquetPageSize:
          type: string
          title: Page size
          description: Ideal memory size for page segments. E.g., 1MB or 128MB. Generally,
            lower values improve reading speed, while higher values improve
            compression. Imposes a target, not a strict limit; the final size of
            a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        spacer:
          type: string
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented.
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V1
          description: Serialization format of data pages. Note that not all reader
            implentations support Data page V2.
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: To log rows that @{product} skips due to data mismatch, first set
            logging to Debug, then toggle this on. Logs up to 20 unique rows.
        emptyDirCleanupSec:
          type: integer
          title: Staging cleanup period
          description: How often (secs) to clean-up empty directories when 'Remove Staging
            Dirs' is enabled.
          default: 300
          minimum: 10
          maximum: 86400
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank,
            Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: connectionString
      type: object
    OutputAzureLogs:
      required:
        - logType
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - azure_logs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        logType:
          type: string
          title: Log Type
          description: The Log Type of events sent to this LogAnalytics workspace.
            Defaults to `Cribl`. Use only letters, numbers, and `_` characters,
            and can't exceed 100 characters. Can be overwritten by event field
            __logType.
          default: Cribl
          maxLength: 100
        resourceId:
          type: string
          title: Resource ID
          description: Optional Resource ID of the Azure resource to associate the data
            with. Can be overridden by the __resourceId event field. This ID
            populates the _ResourceId property, allowing the data to be included
            in resource-centric queries. If the ID is neither specified nor
            overridden, resource-centric queries will omit the data.
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 1024
          minimum: 1
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        apiUrl:
          type: string
          title: DNS name of API endpoint
          description: "Enter the DNS name of the Log API endpoint that sends log data to
            a Log Analytics workspace in Azure Monitor. Defaults to
            .ods.opinsights.azure.com. @{product} will add a prefix and suffix
            around this DNS name to construct a URI in this format:
            <https://<Workspace_ID><your_DNS_name>/api/logs?api-version=<API
            version>."
          pattern: ^\.[^\/]+$
          default: .ods.opinsights.azure.com
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter workspace ID and workspace key directly, or select a stored
            secret
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        workspaceId:
          type: string
          title: Workspace ID
          description: Azure Log Analytics Workspace ID. See Azure Dashboard Workspace >
            Advanced settings.
        workspaceKey:
          type: string
          title: Workspace key
          description: Azure Log Analytics Workspace Primary or Secondary Shared Key. See
            Azure Dashboard Workspace > Advanced settings.
        keypairSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - workspaceId
              - workspaceKey
            authTypeField: awsAuthenticationMethod
      type: object
    OutputKinesis:
      required:
        - streamName
        - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - kinesis
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        streamName:
          type: string
          title: Stream Name
          description: Kinesis stream name to send events to.
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to AWS'
            Region-specific endpoint. Otherwise, it must point to Kinesis
            stream-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        concurrency:
          type: integer
          title: Put request concurrency
          description: Maximum number of ongoing put requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxRecordSizeKB:
          type: integer
          title: Max record size (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For
            non-compressible data 1MB is the max recommended size
          default: 1024
          minimum: 1
          maximum: 10240
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputHoneycomb:
      required:
        - dataset
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - honeycomb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        dataset:
          type: string
          title: Dataset name
          description: Name of the dataset to send events to – e.g., observability
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter API key directly, or select a stored secret
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        team:
          type: string
          title: API key
          description: Team API key where the dataset belongs
        textSecret:
          type: string
          title: API key (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: team
      type: object
    OutputAzureEventhub:
      required:
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - azure_eventhub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Brokers
          description: List of Event Hubs Kafka brokers to connect to, eg.
            yourdomain.servicebus.windows.net:9093. The hostname can be found in
            the host portion of the primary or secondary connection string in
            Shared Access Policies.
          minItems: 1
          items:
            type: string
            minLength: 1
        topic:
          type: string
          title: Event Hub Name
          description: The name of the Event Hub (a.k.a. Kafka Topic) to publish events.
            Can be overwritten using field __topicOut.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments
          enum:
            - 1
            - 0
            - -1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
          title: Record data format
          description: Format to use to serialize events before writing to the Event Hubs
            Kafka brokers.
        maxRecordSizeKB:
          type: integer
          default: 768
          minimum: 1
          title: Max record size (KB, uncompressed)
          description: Maximum size (KB) of each record batch before compression. Setting
            should be < message.max.bytes settings in Event Hubs brokers.
        flushEventCount:
          type: integer
          default: 1000
          minimum: 1
          maximum: 10000
          title: Max events per batch
          description: Maximum number of events in a batch before forcing a flush.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable authentication.
              default: false
              
            mechanism:
              type: string
              enum:
                - plain
                - oauthbearer
              title: SASL mechanism
              default: plain
              description: SASL authentication mechanism to use
        tls:
          type: object
          title: TLS settings (client side)
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA).
              default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputGoogleChronicle:
      required:
        - logType
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_chronicle
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        authenticationMethod:
          type: string
          title: Authentication Method
          default: manual
          enum:
            - secret
            - manual
        extraLogTypes:
          type: array
          title: Custom log types
          description: Custom log types. If the value "Custom" is selected in the setting
            "Default log type" above, the first custom log type in this table
            will be automatically selected as default log type.
          items:
            type: object
            required:
              - logType
            properties:
              logType:
                type: string
                title: Log type
                description: Log type
                pattern: ^[A-Z0-9_]+$
              description:
                type: string
                title: Description
                description: Log type description
        logType:
          type: string
          title: Default log type
          description: Default log type value to send to Chronicle. Can be overwritten by
            event field __logType.
          enum:
            - ONEPASSWORD
            - ABNORMAL_SECURITY
            - ABSOLUTE
            - ACALVIO
            - ACCELLION
            - ACQUIA_CLOUD_PLATFORM
            - AI_HUNTER
            - ADTRAN_NETVANTA
            - AIRLOCK_DIGITAL
            - AIX_SYSTEM
            - AKAMAI_CLOUD_MONITOR
            - AKAMAI_DHCP
            - AKAMAI_DNS
            - AKAMAI_EAA
            - AKAMAI_ETP
            - AKAMAI_DDOS
            - AKAMAI_SIEM_CONNECTOR
            - AKAMAI_WAF
            - AKEYLESS_VAULT
            - ALERTLOGIC_NOTIFICATIONS
            - ALGOSEC
            - ALLOT_NETENFORCER
            - ASOC_ALERT
            - ALVEO_RDM
            - ANOMALI_IOC
            - ANSIBLE_AWX
            - APACHE
            - CASSANDRA
            - HADOOP
            - APACHE_KAFKA_AUDIT
            - APACHE_SPAMASSASSIN
            - TOMCAT
            - APC_SMART_UPS
            - APC_STRUXUREWARE
            - APPGATE_SDP
            - APPIAN_CLOUD
            - MACOS
            - APPOMNI
            - APTOS_EOM
            - AQUA_SECURITY
            - ARCHER_IRM
            - ARCSIGHT_CEF
            - AREA1
            - ARGO_CD
            - ARISTA_SWITCH
            - ARKIME_PCAP
            - ARMIS
            - ARMOR_ANYWHERE
            - ARRAYNETWORKS_VPN
            - ARRAY_NETWORKS_WAF
            - ARUBA_WIRELESS
            - ARUBA_AIRWAVE
            - ARUBA_IPS
            - ARXAN_THREAT_ANALYTICS
            - ATT_NETBOND
            - ATLASSIAN_CONFLUENCE
            - ATLASSIAN_JIRA
            - ATTIVO
            - AUTH_ZERO
            - AUTHENTIC8_SILO
            - AUTHX
            - AUTHX_USER_CONTEXT
            - AUTOMATION_ANYWHERE
            - AUTOMOX_EPM
            - AVANAN_EMAIL
            - AVATIER
            - AVAYA_AURA
            - AVAYA_IVR
            - AVAYA_WIRELESS
            - AVIATRIX
            - AWAKE_NDR
            - AWS_AURORA
            - AWS_CLOUDFRONT
            - AWS_CLOUDTRAIL
            - AWS_CLOUDWATCH
            - AWS_CONFIG
            - AWS_CONTROL_TOWER
            - AWS_ELB
            - GUARDDUTY
            - AWS_KMS
            - AWS_MACIE
            - AWS_REDSHIFT
            - AWS_ROUTE_53
            - AWS_S3_SERVER_ACCESS
            - AWS_SECURITY_HUB
            - AWS_SESSION_MANAGER
            - AWS_SES
            - AWS_VPC_FLOW
            - AWS_WAF
            - AXIS_OS
            - AXONIUS
            - AZURE_AD
            - AZURE_AD_AUDIT
            - AZURE_AD_CONTEXT
            - AZURE_ATP
            - AZURE_COSMOS_DB
            - AZURE_DEVOPS
            - AZURE_FIREWALL
            - AZURE_SECURITY_CENTER
            - AZURE_SQL
            - AZURE_WAF
            - BARRACUDA_CLOUDGEN_ACCESS
            - BARRACUDA_EMAIL
            - BARRACUDA_FIREWALL
            - BARRACUDA_WAF
            - BETTERCLOUD
            - BOMGAR
            - BEYONDTRUST_BEYONDINSIGHT
            - BEYONDTRUST_CPB
            - BEYONDTRUST_ENDPOINT
            - BEYONDTRUST_PI
            - BEYONDTRUST_REMOTE_ACCESS
            - BIGSWITCH_BCF
            - BIND_DNS
            - BITDEFENDER
            - BLUECOAT_WEBPROXY
            - BLUE_PRISM
            - BLUECAT_DDI
            - BLUECAT_EDGE
            - BMC_AMI_DEFENDER
            - BMC_CONTROL_M
            - BMC_HELIX_DISCOVERY
            - BOX
            - BRICATA_NDR
            - BRIVO
            - BROADCOM_CEM
            - BROADCOM_SSL_VA
            - BROCADE_SERVERIRON
            - BROCADE_SWITCH
            - BT_IPCONTROL
            - CA_ACCESS_CONTROL
            - CA_ACF2
            - CA_LDAP
            - CAMEYO_BYO_CLOUD
            - CB_EDR
            - CB_APP_CONTROL
            - CATO_NETWORKS
            - CATO_SDWAN
            - CENTRIFY_SSO
            - CENTRIPETAL_IOC
            - CEQUENCE_BOT_DEFENSE
            - CERBERUS_FTP
            - CHECKPOINT_FIREWALL
            - CHECKPOINT_CLOUDGUARD
            - CHECKPOINT_EMAIL
            - CHECKPOINT_HARMONY
            - CHECKPOINT_EDR
            - CIRCLECI
            - CIS_ALBERT_ALERT
            - CISCO_ACS
            - CISCO_AMP
            - CISCO_APIC
            - CISCO_ACI
            - CISCO_ACE
            - CISCO_ASA_FIREWALL
            - CISCO_CLOUDLOCK_CASB
            - CISCO_SMA
            - CISCO_CTS
            - CISCO_DHCP
            - CISCO_DNAC
            - CISCO_DNS
            - CISCO_EMAIL_SECURITY
            - CISCO_FIREPOWER_FIREWALL
            - CISCO_FIRESIGHT
            - CISCO_IOS
            - CISCO_ISE
            - CISCO_MERAKI
            - CISCO_NX_OS
            - CISCO_PRIME
            - CISCO_ROUTER
            - CISCO_SECURE_MALWARE_ANALYTICS
            - CISCO_SECURE_WORKLOAD
            - CISCO_STEALTHWATCH
            - CISCO_SWITCH
            - CISCO_TACACS
            - CISCO_UCM
            - CISCO_UCS
            - UMBRELLA_FIREWALL
            - UMBRELLA_DNS
            - UMBRELLA_IP
            - UMBRELLA_WEBPROXY
            - CISCO_VCS
            - CISCO_SDWAN
            - CISCO_VPN
            - CISCO_WIPS
            - CISCO_WIRELESS
            - CISCO_WSA
            - CITRIX_ANALYTICS
            - CITRIX_MONITOR
            - CITRIX_NETSCALER
            - CITRIX_NETSCALER_WEB_LOGS
            - CITRIX_SDWAN
            - CITRIX_STOREFRONT
            - CITRIX_WEB_GATEWAY
            - CITRIX_WORKSPACE
            - CITRIX_XENCENTER
            - CLAM_AV
            - CLEARSENSE
            - CLICK_STUDIOS_PASSWORDSTATE
            - CLOUD_PASSAGE
            - CLOUDPASSAGE_CSM
            - CLOUDPASSAGE_FIM
            - CLOUDPASSAGE_LIDS
            - CLOUDPASSAGE_SVM
            - CLOUDFLARE
            - CLOUDFLARE_AUDIT
            - CLOUDFLARE_BOT_MANAGEMENT
            - CLOUDFLARE_WAF
            - CLOUDGENIX_SDWAN
            - CLOUDIAN_HYPERSTORE
            - CLOUDM
            - CMD
            - CODE_WORLDWIDE
            - CODE42
            - CODE42_INCYDR
            - COFENSE_TRIAGE
            - COFENSE_VISION
            - COHESITY
            - COMMVAULT
            - COMODO_AV
            - CONFLUENT_AUDIT
            - CONNECTWISE_CONTROL
            - CORELIGHT
            - ENDPOINT_PROTECTOR_DLP
            - COVID_CTC_IOC
            - CRADLEPOINT_NETCLOUD
            - CS_DETECTS
            - CS_EDR
            - CS_CEF_EDR
            - CS_STREAM
            - CROWDSTRIKE_IOC
            - CSV_CUSTOM_CMDB
            - CSV_CUSTOM_IOC
            - CTERA_DRIVE
            - DefaultCustomLogType
            - CUSTOM_APPLICATION_ACCESS
            - CUSTOM_DNS
            - CUSTOM_HOST_FORENSICS
            - CUSTOM_SECURITY_DATA_ANALYTICS
            - CUSTOMER_ALERT
            - E2_SOLUTIONS
            - CYBERARK
            - CYBEREASON_EDR
            - CYBERHAVEN_DDR
            - CYCODE
            - CYLANCE
            - CYLANCE_PROTECT
            - CYOLO_ZTNA
            - D3_BANKING
            - D3_SECURITY
            - DARKTRACE
            - DATADOG
            - DATALOCKER_SAFECONSOLE
            - DATAWATCH
            - DATTO_FILE_PROTECTION
            - DEEP_INSTINCT_EDR
            - DEEPFENCE
            - DELINEA_PRIVILEGE_MANAGER
            - DELINEA_SECRET_SERVER
            - DELINEA_SERVER_SUITE
            - DELL_EMC_AVAMAR
            - DELL_EMC_CLOUDLINK
            - DELL_EMC_DATA_DOMAIN
            - DELL_EMC_NAS
            - IDRAC
            - DELL_OPENMANAGE
            - DELL_SWITCH
            - DHS_IOC
            - DESIGN_PROFIT_CENTRAL_SERVER
            - FRONTLINE_VM
            - DIGITALGUARDIAN_DLP
            - DIGITALGUARDIAN_EDR
            - DIGITAL_SHADOWS_IOC
            - DIGITAL_SHADOWS_SEARCHLIGHT
            - DIGITALARTS_IFILTER
            - DMP_ENTRE
            - DOCKER
            - PHISHEYE_ALERT
            - DOMO
            - DREMIO_DATA_LAKEHOUSE
            - DROPBOX
            - DUO_CASB
            - DUO_ADMIN
            - DUO_AUTH
            - DUO_CONTEXT
            - DUO_NETWORK_GATEWAY
            - DUO_TELEPHONY
            - DUO_USER_CONTEXT
            - DYNATRACE
            - ESHARE_PLATFORM
            - EATON_UPS
            - ECAR
            - ECAR_BRO
            - EIQ_EDR
            - EFFICIENTIP_DDI
            - ELASTIC_AUDITBEAT
            - ELASTIC_FILEBEAT
            - ELASTIC_METRICBEAT
            - ELASTIC_PACKETBEATS
            - ELASTIC_SEARCH
            - ELASTIC_WINLOGBEAT
            - ET_PRO_IOC
            - EMERSON_FIREWALL
            - ENDGAME_EDR
            - ENTRUST_HSM
            - ENTRUST_NTP_SERVER
            - ENTRUST_SECRETS_VAULT
            - EPIC
            - ESET_EDR
            - ESET_AV
            - ESET_IOC
            - ESTAR
            - ETQ_RELIANCE
            - EXABEAM_FUSION_XDR
            - EXTRAHOP_DHCP
            - EXTRAHOP_DNS
            - EXTRAHOP
            - AIRDEFENSE
            - EXTREME_SWITCH
            - F5_ASM
            - F5_BIGIP_LTM
            - F5_BOT
            - F5_DNS
            - F5_SHAPE
            - F5_VPN
            - FALCO_IDS
            - FASTLY_WAF
            - FIDELIS_ENDPOINT
            - FIDELIS_NETWORK
            - FILE_SCANNING_FRAMEWORK
            - FILEZILLA_FTP
            - FIREEYE_ALERT
            - FIREEYE_EMPS
            - FIREEYE_ETP
            - FIREEYE_HX
            - FIREEYE_NX
            - FIREMON_FIREWALL
            - FLASHPOINT_IOC
            - FLUENTD
            - FORCEPOINT_FIREWALL
            - FORCEPOINT_CASB
            - FORCEPOINT_DLP
            - FORCEPOINT_WEBPROXY
            - FORESCOUT_NAC
            - OPENAM
            - OPENDJ
            - FORSETI
            - FORTANIX_DSM
            - FORTINET_FIREWALL
            - FORTINET_DHCP
            - FORTINET_FORTIANALYZER
            - FORTINET_FORTIAUTHENTICATOR
            - FORTINET_FORTICLIENT
            - FORTINET_FORTIEDR
            - FORTINET_FORTINAC
            - FORTINET_SANDBOX
            - FORTINET_WEBPROXY
            - FOX_IT_STIX
            - FREEIPA
            - FREERADIUS
            - FUTUREX_HSM
            - GCP_APIGEE
            - GCP_CLOUDIDENTITY_DEVICEUSERS
            - GCP_CLOUDIDENTITY_DEVICES
            - GCP_CLOUDIOT
            - GCP_CLOUD_NAT
            - GCP_RUN
            - GCP_CLOUDSQL
            - GCP_COMPUTE
            - GCP_CSCC
            - GCP_DNS
            - GCP_FIREWALL
            - GCP_IDS
            - GCP_LOADBALANCING
            - GCP_THREAT_DETECTION
            - GCP_VPC_FLOW
            - GIGAMON
            - GITHUB
            - GITLAB
            - GLOBALSCAPE_SFTP
            - GLUSTER_FS
            - GMAIL_LOGS
            - GMV_CHECKER
            - GMV_CHECKER_CONTEXT
            - GODADDY_DNS
            - CLOUD_IDENTITY_CONTEXT
            - GCP
            - GREATHORN
            - GSUITE_ADMIN
            - GSUITE_AUDIT
            - GTB_DLP
            - GUARDICORE_CENTRA
            - H3C_SWITCH
            - HAPROXY
            - HAPROXY_LOADBALANCER
            - HASHICORP
            - HCL_BIGFIX
            - HCNET_ACCOUNT_ADAPTER
            - HIRSCHMANN_SWITCH
            - HITACHI_CLOUD_PLATFORM
            - HITACHI_ID_PAM
            - HONEYD
            - PROWATCH
            - CLEARPASS
            - HP_PRINTER
            - HP_PROCURVE
            - HPE_ILO
            - HYPR_MFA
            - IBM_AS400
            - IBM_CICS
            - IBM_DATAPOWER
            - DB2_DB
            - GUARDIUM
            - INFORMIX
            - JDE
            - IBM_MAAS360
            - IBM_MQ_FILE_TRANSFER
            - IBM_SAFENET
            - IBM_QRADAR
            - IBM_SECURITY_VERIFY
            - IBM_SPECTRUM_PROTECT
            - IBM_SWITCH
            - IBM_TIVOLI
            - IBM_WEBSEAL
            - IBM_WEBSPHERE_APP_SERVER
            - IBM_ZOS
            - IBM_ZSECURE_ALERT
            - IBOSS_WEBPROXY
            - ILLUMIO_CORE
            - IMANAGE_CLOUD
            - IMPERVA_WAF
            - IMPERVA_DB
            - IMPERVA_FLEXPROTECT
            - IMPERVA_SECURESPHERE
            - IMPERVA_SONAR
            - IMPRIVATA_CONFIRM_ID
            - IMPRIVATA_IDG
            - IMPRIVATA_ONESIGN
            - INFOBLOX
            - INFOBLOX_DHCP
            - INFOBLOX_DNS
            - INFOBLOX_LOADBALANCER
            - INFOBLOX_NETMRI
            - INFOBLOX_RPZ
            - INTERSYSTEMS_CACHE
            - IPSWITCH_MOVEIT_AUTOMATION
            - IPSWITCH_MOVEIT_TRANSFER
            - IPSWITCH_SFTP
            - ISC_DHCP
            - JAMF
            - JAMF_COMPLIANCE_REPORTER
            - JAMF_PROTECT
            - JENKINS
            - JUMPCLOUD_DAAS
            - JUNIPER_FIREWALL
            - JUNIPER_IPS
            - JUNIPER_JUNOS
            - JUNIPER_MX
            - KAMAILIO
            - KANDJI
            - KASEYA
            - KASPERSKY_AV
            - KEA_DHCP
            - KEEPER
            - KEMP_LOADBALANCER
            - KIBANA
            - KISI
            - KNOWBE4_PHISHER
            - KONG_GATEWAY
            - KUBERNETES_AUDIT
            - KUBERNETES_AUTH_PROXY
            - KUBERNETES_NODE
            - KYRIBA
            - LACEWORK
            - LASTPASS
            - SITEMINDER_SSO
            - LENEL_ONGUARD
            - LEXMARK_PRINTER
            - LIAISON_NUBRIDGES
            - LIBRAESVA_EMAIL
            - LIMACHARLIE_EDR
            - AUDITD
            - LINUX_DHCP
            - LINUX_SYSMON
            - LOGICMONITOR
            - LOOKING_GLASS_IOC
            - LOOKINGGLASS_IPS
            - LSI_BMS
            - MAILSCANNER
            - MALWAREBYTES_EDR
            - MANAGE_ENGINE_AD360
            - ADAUDIT_PLUS
            - ADMANAGER_PLUS
            - ADSELFSERVICE_PLUS
            - MANAGE_ENGINE_PASSWORD_MANAGER
            - MANAGE_ENGINE_REPORTER_PLUS
            - MANGOAPPS
            - MARIA_DB
            - MATERIAL_SECURITY
            - MATRIX_FRONTIER
            - MCAFEE_ATD
            - MCAFEE_DLP
            - MCAFEE_ESM
            - MCAFEE_EPO
            - MCAFEE_IPS
            - MCAFEE_MVISION_CASB
            - MCAFEE_EDR
            - MCAFEE_SKYHIGH_CASB
            - MCAFEE_UCE
            - MCAFEE_WEBPROXY
            - MCAFEE_WEB_PROTECTION
            - MEDIGATE_CMDB
            - MEDIGATE_IOT
            - MENANDMICE_DNS
            - MENLO_SECURITY
            - MICROSEMI_NTP
            - ACTIVE_SYNC
            - WINDOWS_AD
            - ADFS
            - MICROSOFT_ATA
            - AZURE
            - AZURE_ACTIVITY
            - AZURE_NSG_FLOW
            - AZURE_RESOURCE_LOGS
            - MICROSOFT_CASB
            - MICROSOFT_DEFENDER_ENDPOINT
            - MICROSOFT_DEFENDER_IDENTITY
            - EXCHANGE_MAIL
            - MICROSOFT_GRAPH_ALERT
            - IIS
            - AZURE_MDM_INTUNE
            - MICROSOFT_NETLOGON
            - POWERSHELL
            - MICROSOFT_SECURITY_CENTER_ALERT
            - MICROSOFT_SENTINEL
            - SHAREPOINT
            - MICROSOFT_SQL
            - MICROSOFT_SSTP
            - MICROSOFT_SCEP
            - MIMECAST_MAIL
            - MIMECAST_WEBPROXY
            - MINERVA_AV
            - MISP_IOC
            - MOBILEIRON
            - MONGO_DB
            - MULESOFT
            - MYSQL
            - NAGIOS
            - NASUNI_FILE_SERVICES
            - NCC_SCOUTSUITE
            - NCR_DIGITAL_INSIGHT_FSG
            - NCR_DIGITAL_INSIGHT_GL
            - NETAPP_ONTAP
            - NETAPP_SAN
            - NETDISCO
            - NETFILTER_IPTABLES
            - NETIQ_ACCESS_MANAGER
            - NETIQ_EDIRECTORY
            - NETMOTION
            - ARBOR_EDGE_DEFENSE
            - ARBOR_SIGHTLINE
            - NETSKOPE_ALERT
            - NETSKOPE_CASB
            - NETSKOPE_WEBPROXY
            - NETSURION_PROTECTWISE
            - NEW_RELIC
            - NGINX
            - NIMBLE_OS
            - NIST_NVD
            - VITALQIP
            - NUCLEUS_ASSET
            - NUCLEUS_VULNERABILITY
            - NUCLEUS_VULNERABILITY_DELTA
            - NUTANIX_FRAME
            - NUTANIX_PRISM
            - NXLOG_MANAGER
            - OBSIDIAN
            - OFFICE_365
            - OKTA
            - OKTA_ACCESS_GATEWAY
            - OKTA_RADIUS
            - OKTA_USER_CONTEXT
            - ONBASE_CMS
            - ONEIDENTITY_ARS
            - ONEIDENTITY_CHANGE_AUDITOR
            - ONEIDENTITY_DEFENDER
            - ONEIDENTITY_TPAM
            - BALABIT
            - ONELOGIN_SSO
            - ONELOGIN_USER_CONTEXT
            - OPENLDAP
            - OSINT_IOC
            - OPENGEAR
            - OPENPATH
            - OPENSSH
            - OPENTEXT_FAX2MAIL
            - OPEN_VPN
            - ORACLE_DB
            - ORACLE_CLOUD_AUDIT
            - ORACLE_WEBLOGIC
            - ORCA
            - ORDR_IOT
            - OSCAR_CLAIMS
            - OSIRIUM_PAM
            - OSQUERY_EDR
            - OSSEC
            - PACOM_SYSTEMS
            - PAGERDUTY
            - CORTEX_XDR
            - PAN_CORTEX_XDR_EVENTS
            - PAN_FIREWALL
            - PAN_GLOBAL_PROTECT
            - PAN_EDR
            - PAN_XSOAR
            - PAN_CASB
            - PAN_PRISMA_CLOUD
            - PAN_IOC
            - PASSIVE_DNS
            - PENTERA_ASV
            - PEOPLESOFT
            - PEPLINK_LOADBALANCER
            - PEPLINK_ROUTER
            - PEPLINK_SWITCH
            - PERIMETERX_BOT_PROTECTION
            - PFSENSE
            - PING_FEDERATE
            - PING
            - PIVOTAL
            - PLASO
            - PLIXER_SCRUTINIZER
            - POSTFIX_MAIL
            - POWER_DNS
            - PREEMPT
            - PREEMPT_AUTH
            - PREVEIL_ENTERPRISE
            - PROOFID
            - PROOFPOINT_CASB
            - PROOFPOINT_MAIL_FILTER
            - OBSERVEIT
            - PROOFPOINT_ON_DEMAND
            - PROOFPOINT_MAIL
            - PROOFPOINT_TRAP
            - PROOFPOINT_WEB_BROWSER_ISOLATION
            - PROTEGRITY_DEFIANCE
            - PULSE_SECURE_VPN
            - PULSE_SECURE_VTM
            - PUPPET
            - PURE_STORAGE
            - QUALYS_CONTINUOUS_MONITORING
            - QUALYS_VM
            - QUEST_AD
            - RADWARE_DDOS
            - RADWARE_FIREWALL
            - RAPID7_NEXPOSE
            - RAPID7_INSIGHT
            - GCP_RECAPTCHA_ENTERPRISE
            - RECORDED_FUTURE_IOC
            - REDCANARY_EDR
            - REDCANARY_CLOUD_PROTECTION_RAW
            - REDHAT_DIRECTORY_SERVER
            - REDHAT_IM
            - REDHAT_KEYCLOAK
            - REDHAT_OPENSHIFT
            - REDHAT_STACKROX
            - REMEDIANT_SECUREONE
            - RH_ISAC_IOC
            - RIBBON_ANALYTICS_PLATFORM
            - RIBBON_SBC
            - RING_CENTRAL
            - RISKIQ_DIGITAL_FOOTPRINT
            - STEELHEAD
            - RSA_AUTH_MANAGER
            - RSA_NETWITNESS
            - RADIUS
            - RUBRIK
            - RUBRIK_POLARIS
            - RUCKUS_WIRELESS
            - RUMBLE_NETWORK_DISCOVERY
            - SAFECONNECT_NAC
            - SAILPOINT_IAM
            - SALESFORCE
            - SALESFORCE_CONTEXT
            - SAP_C4C
            - SAP_HANA
            - SAP_IDM
            - SAP_INSURANCE
            - SAP_SUCCESSFACTORS
            - SAVIYNT_EIP
            - SECBERUS
            - SECUREAUTH_SSO
            - SECURELINK
            - SECURITYSCORECARD
            - SEMPERIS_ADFR
            - SEMPERIS_DSP
            - SENDMAIL
            - SENTINELONE_ALERT
            - SENTINEL_DV
            - SENTINEL_EDR
            - SERVICENOW_AUDIT
            - SERVICENOW_CMDB
            - SERVICENOW_ROLES
            - SERVICENOW_SECURITY
            - SEVCO_CMDB
            - SHIBBOLETH_IDP
            - SHODAN_IO
            - SHRUBBERY_TACACS
            - SIEMENS_SIPASS
            - SIGNAL_SCIENCES_WAF
            - SILVERPEAK_FIREWALL
            - SILVERFORT
            - CA_SSO_WEB
            - SLACK_AUDIT
            - SNARE_SOLUTIONS
            - SNIPE_IT
            - SNOOPY_LOGGER
            - SNORT_IDS
            - SNOWFLAKE
            - SOFTWARE_HOUSE_ACS
            - SOLARIS_SYSTEM
            - SOLARWINDS_KSS
            - SOLARWINDS_SERV_U
            - SONARQUBE
            - SONIC_FIREWALL
            - SOPHOS_AV
            - SOPHOS_CAPSULE8
            - SOPHOS_CENTRAL
            - SOPHOS_DHCP
            - SOPHOS_FIREWALL
            - SOPHOS_EDR
            - SOPHOS_UTM
            - SOURCEFIRE_IDS
            - SPLUNK_DNS
            - SPLUNK_PHANTOM
            - SPLUNK
            - SPYCLOUD
            - SQUID_WEBPROXY
            - PCAP_SSL_CLIENT_HELLO
            - STAIRWELL_INCEPTION
            - ASSET_STATIC_IP
            - STEALTHBITS_AUDIT
            - STEALTHBITS_DEFEND
            - STORMSHIELD_FIREWALL
            - STREAMALERT
            - STRONGSWAN_VPN
            - SUPERNA_EYEGLASS
            - SUREVIEW_SYSTEMS
            - SURICATA_EVE
            - SURICATA_IDS
            - SWIFT_AMH
            - SWIMLANE
            - SYMANTEC_CASB
            - SYMANTEC_DLP
            - SYMANTEC_EDR
            - SEP
            - SYMANTEC_EVENT_EXPORT
            - SYMANTEC_MAIL
            - SYMANTEC_VIP
            - SYMANTEC_WEB_ISOLATION
            - SYMANTEC_WSS
            - SYSDIG
            - TANIUM_ASSET
            - TANIUM_AUDIT
            - TANIUM_COMPLY
            - TANIUM_DEPLOY
            - TANIUM_DISCOVER
            - TANIUM_INSIGHT
            - TANIUM_INTEGRITY_MONITOR
            - TANIUM_PATCH
            - TANIUM_QUESTION
            - TANIUM_REVEAL
            - TANIUM_TH
            - TANIUM_THREAT_RESPONSE
            - TCPWAVE_DDI
            - TEAMVIEWER
            - TELEPORT_ACCESS_PLANE
            - TENABLE_SC
            - TENABLE_IO
            - TERRAFORM_ENTERPRISE
            - TESSIAN_PLATFORM
            - TGDETECT
            - THALES_DIS
            - THALES_LUNA_HSM
            - THALES_MFA
            - VORMETRIC
            - THINKST_CANARY
            - THREATCONNECT_IOC
            - THYCOTIC
            - THYCOTIC_DEVOPS_SECRETVAULT
            - TIPPING_POINT
            - TRENDMICRO_AV
            - TRENDMICRO_CLOUDAPPSECURITY
            - TRENDMICRO_DEEP_SECURITY
            - TRENDMICRO_EDR
            - TRENDMICRO_WEBPROXY
            - TRIPWIRE_FIM
            - TWILIO_AUDIT
            - UBIQUITI_SWITCH
            - UDM
            - ULTRA_CYBERFENCE
            - ULTRADNS
            - UNBOUND_DNS
            - UNIFI_AP
            - UNIFI_SWITCH
            - UNIT21
            - NIX_SYSTEM
            - UPTYCS_EDR
            - VANDYKE_SFTP
            - VARONIS
            - VECTRA_DETECT
            - VECTRA_PROTECT
            - VECTRA_STREAM
            - VEEAM
            - VENAFI
            - VERIZON_NDR
            - VERSA_FIREWALL
            - VIRUSTOTAL_THREAT_HUNTER
            - VMRAY_FLOG_XML
            - AIRWATCH
            - VMWARE_AVI_VANTAGE
            - VMWARE_AVINETWORKS_IWAF
            - VMWARE_ESX
            - VMWARE_HCX
            - VMWARE_HORIZON
            - VMWARE_NSX
            - VMWARE_TANZU
            - VMWARE_VCENTER
            - VMWARE_VREALIZE
            - VMWARE_VSHIELD
            - VMWARE_WORKSPACE_ONE
            - VOLTAGE
            - VSFTPD_AUDIT
            - WATCHGUARD
            - WAZUH
            - WTI_CONSOLE_SERVERS
            - WHITECLOUD_EDR
            - WINDOWS_APPLOCKER
            - WINDOWS_DEFENDER_ATP
            - WINDOWS_DEFENDER_AV
            - WINDOWS_DHCP
            - WINDOWS_DNS
            - WINEVTLOG
            - WINEVTLOG_XML
            - WINDOWS_FIREWALL
            - WINDOWS_NET_POLICY_SERVER
            - WINDOWS_SYSMON
            - WIZ_IO
            - WORDPRESS_CMS
            - WORKDAY
            - WORKDAY_AUDIT
            - WORKSPACE_ACTIVITY
            - WORKSPACE_ALERTS
            - WORKSPACE_CHROMEOS
            - WORKSPACE_GROUPS
            - WORKSPACE_MOBILE
            - WORKSPACE_PRIVILEGES
            - WORKSPACE_USERS
            - WORKSPOT_CONTROL
            - WP_ENGINE
            - YUBICO_OTP
            - BRO_DHCP
            - BRO_HTTP
            - BRO_JSON
            - BRO_TSV
            - ZENDESK_CRM
            - ZEROFOX_PLATFORM
            - ZIMPERIUM
            - ZIX_EMAIL_ENCRYPTION
            - ZOOM_OPERATION_LOGS
            - ZSCALER_WEBPROXY
            - ZSCALER_CASB
            - ZSCALER_DECEPTION
            - ZSCALER_DIGITAL_EXPERIENCE
            - ZSCALER_DLP
            - ZSCALER_DNS
            - ZSCALER_FIREWALL
            - ZSCALER_VPN
        logTextField:
          type: string
          title: Log text field
          description: Name of the event field that contains the log text to send. If not
            specified, Stream sends a JSON representation of the whole event.
        customerId:
          type: string
          title: Customer ID
          description: Unique identifier (UUID) corresponding to a particular Chronicle
            instance. Provided by your Chronicle representative.
        namespace:
          type: string
          title: Namespace
          description: User-configured environment namespace to identify the data domain
            the logs originated from. Use namespace as a tag to identify the
            appropriate data domain for indexing and enrichment functionality.
            Can be overwritten by event field __namespace.
        logFormatType:
          type: string
          title: Send events as
          description: ""
          default: unstructured
          enum:
            - unstructured
            - udm
        region:
          type: string
          title: Region
          description: Regional endpoint to send events to
          enum:
            - malachiteingestion-pa.googleapis.com
            - europe-malachiteingestion-pa.googleapis.com
            - asia-southeast1-malachiteingestion-pa.googleapis.com
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Google Chronicle
        apiKeySecret:
          type: string
          title: API key (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: apiKey
            authTypeField: authenticationMethod
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputGoogleCloudStorage:
      required:
        - bucket
        - endpoint
        - region
        - destPath
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_cloud_storage
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        bucket:
          type: string
          title: Bucket name
          description: "Name of the destination Bucket. This value can be a constant or a
            JavaScript expression that can only be evaluated at init time. E.g.
            referencing a Global Variable: `myBucket-${C.vars.myVar}`."
        region:
          type: string
          title: Region
          description: Region where the bucket is located.
          enum:
            - NORTHAMERICA-NORTHEAST1
            - NORTHAMERICA-NORTHEAST2
            - US-CENTRAL1
            - US-EAST1
            - US-EAST4
            - US-EAST5
            - US-SOUTH1
            - US-WEST1
            - US-WEST2
            - US-WEST3
            - US-WEST4
            - SOUTHAMERICA-EAST1
            - SOUTHAMERICA-WEST1
            - EUROPE-CENTRAL2
            - EUROPE-SOUTHWEST1
            - EUROPE-NORTH1
            - EUROPE-WEST1
            - EUROPE-WEST2
            - EUROPE-WEST3
            - EUROPE-WEST4
            - EUROPE-WEST6
            - EUROPE-WEST8
            - EUROPE-WEST9
            - EUROPE-WEST12
            - ASIA-EAST1
            - ASIA-EAST2
            - ASIA-NORTHEAST1
            - ASIA-NORTHEAST2
            - ASIA-NORTHEAST3
            - ASIA-SOUTH1
            - ASIA-SOUTH2
            - ASIA-SOUTHEAST1
            - ASIA-SOUTHEAST2
            - AUSTRALIA-SOUTHEAST1
            - AUSTRALIA-SOUTHEAST2
            - ME-CENTRAL1
            - ME-WEST1
            - ASIA
            - EU
            - US
            - ASIA1
            - EUR4
            - NAM4
        endpoint:
          type: string
          title: Endpoint
          default: https://storage.googleapis.com
          description: Google Cloud Storage service endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Google Cloud Storage requests.
          default: v4
          enum:
            - v2
            - v4
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          default: manual
          enum:
            - secret
            - manual
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be evaluated only at init time. E.g.,
            referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`."
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects.
          default: private
          enum:
            - private
            - bucket-owner-read
            - bucket-owner-full-control
            - project-private
            - authenticated-read
            - public-read
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects.
          enum:
            - STANDARD
            - NEARLINE
            - COLDLINE
            - ARCHIVE
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Append output's ID to staging location.
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove staging dirs
          description: Remove empty staging directories after moving files.
          default: false
          
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression defining how files are partitioned and organized.
            Default is date-based. If blank, Stream will fall back to the
            event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - parquet
            - raw
            - json
          default: json
          x-flagprefix: native
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant).
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`)
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
        maxFileSizeMB:
          type: integer
          title: Max file size (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxFileOpenTimeSec:
          type: integer
          title: Max file open time (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: integer
          title: Max file idle time (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: integer
          title: Max open files
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
        compress:
          type: string
          title: Compress
          description: Choose data compression format to apply before moving files to
            final destination.
          enum:
            - none
            - gzip
          default: none
        parquetRowGroupSize:
          type: string
          title: Row group size
          description: Ideal memory size for row group segments. E.g., 128MB or 1GB.
            Affects memory use when writing. Imposes a target, not a strict
            limit; the final size of a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 16MB
        parquetPageSize:
          type: string
          title: Page size
          description: Ideal memory size for page segments. E.g., 1MB or 128MB. Generally,
            lower values improve reading speed, while higher values improve
            compression. Imposes a target, not a strict limit; the final size of
            a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        spacer:
          type: string
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented.
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V1
          description: Serialization format of data pages. Note that not all reader
            implentations support Data page V2.
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: To log rows that @{product} skips due to data mismatch, first set
            logging to Debug, then toggle this on. Logs up to 20 unique rows.
        emptyDirCleanupSec:
          type: integer
          title: Staging cleanup period
          description: How often (secs) to clean-up empty directories when 'Remove Staging
            Dirs' is enabled.
          default: 300
          minimum: 10
          maximum: 86400
        awsApiKey:
          type: string
          title: Access key
          description: HMAC access Key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.GCS_ACCESS_KEY}`).
        awsSecretKey:
          type: string
          title: Secret
          description: HMAC secret. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.GCS_SECRET}`).
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
      type: object
    OutputGoogleCloudLogging:
      required:
        - logLocationType
        - logLocationExpression
        - logNameExpression
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_cloud_logging
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        logLocationType:
          type: string
          title: Log location type
          enum:
            - folder
            - organization
            - billingAccount
        logNameExpression:
          type: string
          title: Log name expression
          description: JavaScript expression to compute the value of the log name.
        payloadFormat:
          type: string
          title: Payload format
          description: Format to use when sending payload. Defaults to Text.
          enum:
            - json
            - text
          default: text
        logLabels:
          type: array
          title: Log labels
          description: Labels to apply to the log entry
          items:
            type: object
            required:
              - label
              - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
        resourceTypeExpression:
          type: string
          title: Resource type expression
          description: JavaScript expression to compute the value of the managed resource
            type field. Must evaluate to one of the valid values
            [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types).
            Defaults to "global".
        resourceTypeLabels:
          type: array
          title: Resource labels
          description: Labels to apply to the managed resource. These must correspond to
            the valid labels for the specified resource type (see
            [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types)).
            Otherwise, they will be dropped by Google Cloud Logging.
          items:
            type: object
            required:
              - label
              - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
        severityExpression:
          type: string
          title: Severity expression
          description: JavaScript expression to compute the value of the severity field.
            Must evaluate to one of the severity values supported by Google
            Cloud Logging
            [here](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logseverity)
            (case insensitive). Defaults to "DEFAULT".
        insertIdExpression:
          type: string
          title: Insert ID expression
          description: JavaScript expression to compute the value of the insert ID field.
        googleAuthMethod:
          type: string
          title: Authentication Method
          description: Google authentication method. Choose Auto to use environment
            variable GOOGLE_APPLICATION_CREDENTIALS..
          default: manual
          enum:
            - secret
            - manual
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded
            from Google Cloud. To upload a file, click the upload button at this
            field's upper right. As an alternative, you can use environment
            variables (see
            [here](https://cloud.google.com/docs/authentication/provide-credentials-adc)).
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: serviceAccountCredentials
            authTypeField: googleAuthMethod
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        throttleRateReqPerSec:
          type: integer
          title: Throttle request rate
          description: Maximum number of requests to limit to per second.
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        logLocationExpression:
          title: Folder ID expression
          description: JavaScript expression to compute the value of the folder ID with
            which log entries should be associated.
          type: string
        payloadExpression:
          title: Payload object expression
          description: JavaScript expression to compute the value of the payload. Must
            evaluate to a JavaScript object value. If an invalid value is
            encountered it will result in the default value instead. Defaults to
            the entire event.
          type: string
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputGooglePubsub:
      required:
        - topicName
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_pubsub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to send events to.
        createTopic:
          type: boolean
          title: Create topic
          description: If enabled, create topic if it does not exist.
          default: false
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: If enabled, send events in the order they were added to the queue.
            For this to work correctly, the process receiving events must have
            ordering enabled.
          default: false
        region:
          type: string
          title: Region
          description: Region to publish messages to. Select 'default' to allow Google to
            auto-select the nearest region. When using ordered delivery, the
            selected region must be allowed by message storage policy.
          enum:
            - pubsub.googleapis.com
            - us-east1-pubsub.googleapis.com
            - us-east4-pubsub.googleapis.com
            - us-central1-pubsub.googleapis.com
            - us-central2-pubsub.googleapis.com
            - us-west1-pubsub.googleapis.com
            - us-west2-pubsub.googleapis.com
            - us-west3-pubsub.googleapis.com
            - southamerica-east1-pubsub.googleapis.com
            - northamerica-northeast1-pubsub.googleapis.com
            - europe-west6-pubsub.googleapis.com
            - europe-west4-pubsub.googleapis.com
            - europe-west3-pubsub.googleapis.com
            - europe-west2-pubsub.googleapis.com
            - europe-west1-pubsub.googleapis.com
            - europe-north1-pubsub.googleapis.com
            - australia-southeast1-pubsub.googleapis.com
            - asia-southeast1-pubsub.googleapis.com
            - asia-south1-pubsub.googleapis.com
            - asia-northeast3-pubsub.googleapis.com
            - asia-northeast2-pubsub.googleapis.com
            - asia-northeast1-pubsub.googleapis.com
            - asia-east2-pubsub.googleapis.com
            - asia-east1-pubsub.googleapis.com
        googleAuthMethod:
          type: string
          title: Authentication Method
          description: Google authentication method. Choose Auto to use environment
            variables PUBSUB_PROJECT and PUBSUB_CREDENTIALS..
          default: manual
          enum:
            - secret
            - manual
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded
            from Google Cloud. To upload a file, click the upload button at this
            field's upper right. As an alternative, you can use environment
            variables (see
            [here](https://googleapis.dev/ruby/google-cloud-pubsub/latest/file.AUTHENTICATION.html)).
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: serviceAccountCredentials
            authTypeField: googleAuthMethod
        batchSize:
          type: integer
          title: Batch size
          minimum: 1
          maximum: 10000
          default: 1000
          description: The maximum number of items the Google API should batch before it
            sends them to the topic.
        batchTimeout:
          type: integer
          title: Batch timeout (ms)
          minimum: 1
          maximum: 100000
          default: 100
          description: The maximum amount of time, in milliseconds, that the Google API
            should wait to send a batch (if the Batch size is not reached).
        maxQueueSize:
          type: integer
          title: Max queue size
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
        maxRecordSizeKB:
          type: integer
          title: Max batch size (KB)
          description: Maximum size (KB) of batches to send.
          default: 256
          minimum: 1
          maximum: 256
        flushPeriodSec:
          title: Flush period (sec)
          description: Maximum time to wait before sending a batch (when Max batch size is
            not reached).
          default:
            type: integer
            default: 1
        maxInProgress:
          type: integer
          title: Max concurrent requests
          description: The maximum number of in-progress API requests before backpressure
            is applied.
          default: 10
          minimum: 1
          maximum: 100
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputKafka:
      required:
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - kafka
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Brokers
          description: Enter each Kafka broker you want to use. Specify hostname and port,
            e.g., mykafkabroker:9092, or just hostname, in which case @{product}
            will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the
            __topicOut field.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
        compression:
          type: string
          default: none
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
        maxRecordSizeKB:
          type: integer
          default: 768
          minimum: 1
          title: Max record size (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value
            must not exceed the Kafka brokers' message.max.bytes setting.
        flushEventCount:
          type: integer
          default: 1000
          minimum: 1
          maximum: 10000
          title: Max events per batch
          description: The maximum number of events you want the Destination to allow in a
            batch before forcing a flush
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before
            forcing a flush. Shorter intervals tend to result in smaller batches
            being sent.
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Schema Registry
              default: true
              
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for access to the Confluent Schema Registry, i.e.:
                http://localhost:8081"
              default: http://localhost:8081
            defaultKeySchemaId:
              type: integer
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values,
                leave blank if key transformation is not required by default.
            defaultValueSchemaId:
              type: integer
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw,
                leave blank if value transformation is not required by default.
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: Reject certs that are not authorized by a CA in the CA certificate
                    path, or by another trusted CA (e.g., the system's CA).
                    Defaults to No.
                  default: false
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate name
                  description: The name of the predefined certificate.
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key.
                minVersion:
                  type: string
                  title: Minimum TLS version
                  description: Minimum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  description: Maximum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Authentication
              default: true
              
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              description: SASL authentication mechanism to use.
              x-flagprefix: native
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputConfluentCloud:
      required:
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - confluent_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Brokers
          description: List of Confluent Cloud brokers to connect to, e.g.,
            yourAccount.confluent.cloud:9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the
            __topicOut field.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
        compression:
          type: string
          default: none
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
        maxRecordSizeKB:
          type: integer
          default: 768
          minimum: 1
          title: Max record size (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value
            must not exceed the Kafka brokers' message.max.bytes setting.
        flushEventCount:
          type: integer
          default: 1000
          minimum: 1
          maximum: 10000
          title: Max events per batch
          description: The maximum number of events you want the Destination to allow in a
            batch before forcing a flush
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before
            forcing a flush. Shorter intervals tend to result in smaller batches
            being sent.
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Schema Registry
              default: true
              
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for access to the Confluent Schema Registry, i.e.:
                http://localhost:8081"
              default: http://localhost:8081
            defaultKeySchemaId:
              type: integer
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values,
                leave blank if key transformation is not required by default.
            defaultValueSchemaId:
              type: integer
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw,
                leave blank if value transformation is not required by default.
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: Reject certs that are not authorized by a CA in the CA certificate
                    path, or by another trusted CA (e.g., the system's CA).
                    Defaults to No.
                  default: false
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate name
                  description: The name of the predefined certificate.
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key.
                minVersion:
                  type: string
                  title: Minimum TLS version
                  description: Minimum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  description: Maximum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Authentication
              default: true
              
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              description: SASL authentication mechanism to use.
              x-flagprefix: native
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputMsk:
      required:
        - brokers
        - topic
        - region
        - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - msk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Brokers
          description: Enter each Kafka broker you want to use. Specify hostname and port,
            e.g., mykafkabroker:9092, or just hostname, in which case @{product}
            will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the
            __topicOut field.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
        compression:
          type: string
          default: none
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
        maxRecordSizeKB:
          type: integer
          default: 768
          minimum: 1
          title: Max record size (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value
            must not exceed the Kafka brokers' message.max.bytes setting.
        flushEventCount:
          type: integer
          default: 1000
          minimum: 1
          maximum: 10000
          title: Max events per batch
          description: The maximum number of events you want the Destination to allow in a
            batch before forcing a flush
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before
            forcing a flush. Shorter intervals tend to result in smaller batches
            being sent.
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable Schema Registry
              default: true
              
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for access to the Confluent Schema Registry, i.e.:
                http://localhost:8081"
              default: http://localhost:8081
            defaultKeySchemaId:
              type: integer
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values,
                leave blank if key transformation is not required by default.
            defaultValueSchemaId:
              type: integer
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw,
                leave blank if value transformation is not required by default.
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: Reject certs that are not authorized by a CA in the CA certificate
                    path, or by another trusted CA (e.g., the system's CA).
                    Defaults to No.
                  default: false
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate name
                  description: The name of the predefined certificate.
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key.
                minVersion:
                  type: string
                  title: Minimum TLS version
                  description: Minimum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  description: Maximum TLS version to use when connecting
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: integer
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: integer
          title: Max retries
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data.
          default: 5
          minimum: 0
          maximum: 100
        authenticationTimeout:
          type: integer
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: integer
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backwards from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to AWS'
            Region-specific endpoint. Otherwise, it must point to MSK
            cluster-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputElastic:
      required:
        - index
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - elastic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          
        index:
          type: string
          title: Index or Data Stream
          description: Index or Data Stream to send events to. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be overwritten by an event's __index field.
        docType:
          type: string
          title: Type
          description: Document type to use for events. Can be overwritten by an event's
            __type field
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 102400
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        extraParams:
          type: array
          title: Extra Parameters
          description: Extra Parameters.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        auth:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Authentication Disabled
              default: true
              
            authType:
              title: Authentication method
              type: string
              enum:
                - manual
                - secret
                - manualAPIKey
                - textSecret
              default: manual
              description: Enter credentials directly, or select a stored secret
        elasticVersion:
          type: string
          title: Elastic Version
          description: Optional Elasticsearch version, used to format events. If not
            specified, will auto-discover version.
          enum:
            - auto
            - "6"
            - "7"
          default: auto
        elasticPipeline:
          type: string
          title: Elastic pipeline
          description: Optional Elasticsearch destination pipeline
        includeDocId:
          type: boolean
          title: Include document _id
          description: Toggle this off when sending events to an Elastic TSDS (time series
            data stream)
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        url:
          type: string
          title: Bulk API URL or Cloud ID
          description: Enter Cloud ID or URL to an Elastic cluster to send events to –
            e.g., http://elastic:9200/_bulk
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames.
        urls:
          type: array
          title: Bulk API URLs
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: URL
                description: URL to an Elastic node to send events to – e.g.,
                  http://elastic:9200/_bulk
              weight:
                type: integer
                title: Load Weight
                description: The weight to use for load-balancing purposes.
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: integer
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: Re-resolve any hostnames every this many seconds and pick up
            destinations from A records.
        loadBalanceStatsPeriodSec:
          type: integer
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - loadBalanced
            - urls
      type: object
    OutputNewrelic:
      required:
        - region
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - newrelic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
            - US
            - EU
          default: US
        logType:
          type: string
          title: Log type
          description: "Name of the logtype to send with events, e.g.: observability,
            access_log. The event's 'sourcetype' field (if set) will override
            this value."
          default: ""
        messageField:
          type: string
          title: Log message field
          description: Name of field to send as log message value. If not present, event
            will be serialized and sent as JSON.
          default: ""
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input.
          maxItems: 4
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
                enum:
                  - service
                  - hostname
                  - timestamp
                  - auditId
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter API key directly, or select a stored secret
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
        textSecret:
          type: string
          title: API key (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: apiKey
      type: object
    OutputNewrelicEvents:
      required:
        - accountId
        - region
        - eventType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - newrelic_events
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
            - US
            - EU
          default: US
        accountId:
          type: string
          title: Account ID
          description: New Relic account ID
        eventType:
          type: string
          title: Event type
          description: Default eventType to use when not present in an event. For more
            information, see
            [here](https://docs.newrelic.com/docs/telemetry-data-platform/custom-data/custom-events/data-requirements-limits-custom-event-data/#reserved-words).
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter API key directly, or select a stored secret
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
        textSecret:
          type: string
          title: API key (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: apiKey
      type: object
    OutputInfluxdb:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - influxdb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        url:
          type: string
          title: Write API URL
          description: URL of an InfluxDB cluster to send events to, e.g.,
            http://localhost:8086/write
          pattern: ^https?://.*
        useV2API:
          type: boolean
          title: Use v2 API
          description: The v2 API can be enabled with InfluxDB versions 1.8 and later.
          default: false
          
        timestampPrecision:
          type: string
          title: Timestamp precision
          description: Sets the precision for the supplied Unix time values. Defaults to
            milliseconds.
          enum:
            - ns
            - u
            - ms
            - s
            - m
            - h
          default: ms
        dynamicValueFieldName:
          type: boolean
          title: Dynamic value fields
          description: Enabling this will pull the value field from the metric name. E,g,
            'db.query.user' will use 'db.query' as the measurement and 'user' as
            the value field.
          default: true
        valueFieldName:
          type: string
          title: Value field name
          description: Name of the field in which to store the metric when sending to
            InfluxDB. If dynamic generation is enabled and fails, this will be
            used as a fallback.
          default: value
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 51200
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          type: string
          title: Authentication type
          description: InfluxDB authentication type
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
          default: none
        database:
          type: string
          title: Database
          description: Database to write to.
        bucket:
          type: string
          title: Bucket
          description: Bucket to write to.
        org:
          type: string
          title: Organization
          description: Organization ID for this bucket.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - useV2API
      type: object
    OutputCloudwatch:
      required:
        - logGroupName
        - logStreamName
        - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - cloudwatch
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        logGroupName:
          type: string
          title: Log group name
          description: CloudWatch log group to associate events with
        logStreamName:
          type: string
          title: Log stream prefix
          description: "Prefix for CloudWatch log stream name. This prefix will be used to
            generate a unique log stream name per cribl instance, for example:
            myStream_myHost_myOutputId"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the CloudWatchLogs is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: CloudWatchLogs service endpoint. If empty, defaults to AWS'
            Region-specific endpoint. Otherwise, it must point to
            CloudWatchLogs-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing CloudWatchLogs requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for CloudWatchLogs
          description: Use Assume Role credentials to access CloudWatchLogs
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        maxQueueSize:
          type: integer
          title: Max queue size
          description: Maximum number of queued batches before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxRecordSizeKB:
          type: integer
          title: Max record size (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For
            non compressible data 1MB is the max recommended size
          default: 1024
          minimum: 1
          maximum: 10240
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputMinio:
      required:
        - bucket
        - destPath
        - stagePath
        - endpoint
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - minio
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        endpoint:
          type: string
          title: MinIO endpoint
          description: MinIO service url (e.g. http://minioHost:9000)
          pattern: ^https?://.*
        bucket:
          type: string
          title: MinIO bucket name
          description: "Name of the destination MinIO bucket. This value can be a constant
            or a JavaScript expression that can only be evaluated at init time.
            E.g. referencing a Global Variable: `myBucket-${C.vars.myVar}`."
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method
          default: auto
          enum:
            - secret
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.SOME_SECRET}`).
        region:
          type: string
          title: Region
          description: Region where the MinIO service/cluster is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Append output's ID to staging location.
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove staging dirs
          description: Remove empty staging directories after moving files.
          default: false
          
        destPath:
          type: string
          title: Key prefix
          description: Root directory to prepend to path before uploading. Enter a
            constant, or a JS expression enclosed in quotes or backticks.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MinIO requests.
          default: v4
          enum:
            - v2
            - v4
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects.
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects.
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
        serverSideEncryption:
          type: string
          title: Server-side encryption
          description: Server-side encryption for uploaded objects.
          enum:
            - AES256
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression defining how files are partitioned and organized.
            Default is date-based. If blank, Stream will fall back to the
            event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - parquet
            - raw
            - json
          default: json
          x-flagprefix: native
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant).
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`)
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
        maxFileSizeMB:
          type: integer
          title: Max file size (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: integer
          title: Max open files
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
        maxFileOpenTimeSec:
          type: integer
          title: Max file open time (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: integer
          title: Max file idle time (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: integer
          title: Max concurrent file parts
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        awsApiKey:
          type: string
          title: Access key
          description: Access key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.SOME_ACCESS_KEY}`).
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        compress:
          type: string
          title: Compress
          description: Choose data compression format to apply before moving files to
            final destination.
          enum:
            - none
            - gzip
          default: none
        parquetRowGroupSize:
          type: string
          title: Row group size
          description: Ideal memory size for row group segments. E.g., 128MB or 1GB.
            Affects memory use when writing. Imposes a target, not a strict
            limit; the final size of a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 16MB
        parquetPageSize:
          type: string
          title: Page size
          description: Ideal memory size for page segments. E.g., 1MB or 128MB. Generally,
            lower values improve reading speed, while higher values improve
            compression. Imposes a target, not a strict limit; the final size of
            a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        spacer:
          type: string
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented.
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V1
          description: Serialization format of data pages. Note that not all reader
            implentations support Data page V2.
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: To log rows that @{product} skips due to data mismatch, first set
            logging to Debug, then toggle this on. Logs up to 20 unique rows.
        emptyDirCleanupSec:
          type: integer
          title: Staging cleanup period
          description: How often (secs) to clean-up empty directories when 'Remove Staging
            Dirs' is enabled.
          default: 300
          minimum: 10
          maximum: 86400
      type: object
    OutputStatsd:
      required:
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - statsd
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        protocol:
          type: string
          default: udp
          enum:
            - tcp
          title: Destination Protocol
          description: Protocol to use when communicating with the destination.
        host:
          type: string
          title: Host
          description: The hostname of the destination.
        port:
          type: integer
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
        mtu:
          type: integer
          default: 512
          minimum: 1
          title: Max record Size (Bytes)
          description: Used when Protocol is UDP, to specify the maximum size of packets
            sent to the destination. Also known as the MTU for the network path
            to the destination system.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Used when Protocol is TCP, to specify how often buffers should be
            flushed resulting in records sent to the destination.
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputStatsdExt:
      required:
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - statsd_ext
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        protocol:
          type: string
          default: udp
          enum:
            - tcp
          title: Destination Protocol
          description: Protocol to use when communicating with the destination.
        host:
          type: string
          title: Host
          description: The hostname of the destination.
        port:
          type: integer
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
        mtu:
          type: integer
          default: 512
          minimum: 1
          title: Max record Size (Bytes)
          description: Used when Protocol is UDP, to specify the maximum size of packets
            sent to the destination. Also known as the MTU for the network path
            to the destination system.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Used when Protocol is TCP, to specify how often buffers should be
            flushed resulting in records sent to the destination.
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputGraphite:
      required:
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - graphite
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        protocol:
          type: string
          default: udp
          enum:
            - tcp
          title: Destination Protocol
          description: Protocol to use when communicating with the destination.
        host:
          type: string
          title: Host
          description: The hostname of the destination.
        port:
          type: integer
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
        mtu:
          type: integer
          default: 512
          minimum: 1
          title: Max record Size (Bytes)
          description: Used when Protocol is UDP, to specify the maximum size of packets
            sent to the destination. Also known as the MTU for the network path
            to the destination system.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Used when Protocol is TCP, to specify how often buffers should be
            flushed resulting in records sent to the destination.
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputRouter:
      required:
        - rules
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - router
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        rules:
          type: array
          title: Rules
          description: Event routing rules
          minItems: 1
          items:
            type: object
            required:
              - filter
              - output
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression to select events to send to output
              output:
                type: string
                title: Output
                description: Output to send matching events to
              description:
                type: string
                title: Description
                description: Description of this rule's purpose
              final:
                type: boolean
                title: Final
                description: Flag to control whether to stop the event from being checked
                  against other rules
                default: true
      type: object
    OutputSns:
      required:
        - topicArn
        - messageGroupId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sns
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        topicArn:
          type: string
          title: Topic ARN
          description: "The ARN of the SNS topic to send events to. When a non-AWS URL is
            specified, format must be: '{url}/myQueueName'. E.g.,
            'https://host:port/myQueueName'. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at init time. E.g., referencing a
            Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        messageGroupId:
          type: string
          title: Message Group ID
          description: "The tag that specifies that a message belongs to a specific
            message group. Messages that belong to the same message group are
            processed in a FIFO manner. Must be a JavaScript expression (which
            can evaluate to a constant value), enclosed in quotes or backticks.
            Can be evaluated only at init time. E.g., referencing a Global
            Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        maxRetries:
          type: integer
          title: Maximum number of retries
          description: Maximum number of retries before the output returns an error. Note
            that not all errors are retryable. The retries use an exponential
            backoff policy.
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: Region where the SNS is located
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: SNS service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to SNS-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SNS requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for SNS
          description: Use Assume Role credentials to access SNS
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputSqs:
      required:
        - queueName
        - queueType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sqs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        queueName:
          type: string
          title: Queue Name
          description: "The name, URL, or ARN of the SQS queue to send events to. When a
            non-AWS URL is specified, format must be: '{url}/myQueueName'. E.g.,
            'https://host:port/myQueueName'. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at init time. E.g., referencing a
            Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        queueType:
          title: Queue Type
          type: string
          description: The queue type used (or created). Defaults to Standard.
          enum:
            - standard
            - fifo
          default: standard
        awsAccountId:
          title: AWS Account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
        messageGroupId:
          type: string
          title: Message Group ID
          description: This parameter applies only to FIFO queues. The tag that specifies
            that a message belongs to a specific message group. Messages that
            belong to the same message group are processed in a FIFO manner. Use
            event field __messageGroupId to override this value.
          default: cribl
        createQueue:
          type: boolean
          title: Create Queue
          description: Create queue if it does not exist.
          default: true
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the
            Queue entry is a URL or ARN that includes a Region.
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to SQS-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        maxQueueSize:
          type: integer
          title: Max queue size
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
        maxRecordSizeKB:
          type: integer
          title: Max record size (KB)
          description: Maximum size (KB) of batches to send. Per the SQS spec, the max
            allowed value is 256 KB.
          default: 256
          minimum: 1
          maximum: 256
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
        maxInProgress:
          type: integer
          title: Max concurrent requests
          description: The maximum number of in-progress API requests before backpressure
            is applied.
          default: 10
          minimum: 1
          maximum: 100
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        awsApiKey:
          type: string
          title: Access key
          description: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputSnmp:
      required:
        - hosts
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - snmp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        hosts:
          type: array
          title: SNMP Trap Destinations
          description: One or more SNMP destinations to forward traps to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: Destination host
              port:
                type: integer
                title: Port
                maximum: 65535
                description: Destination port, default is 162
                default: 162
      type: object
    OutputSumoLogic:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sumo_logic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        url:
          type: string
          title: API URL
          description: Sumo Logic HTTP collector URL to which events should be sent.
          pattern: ^https?://.*
        customSource:
          type: string
          title: Custom source name
          description: Optionally, override the source name configured on the Sumo Logic
            HTTP collector. This can also be overridden at the event level with
            the __sourceName field.
        customCategory:
          type: string
          title: Custom source category
          description: Optionally, override the source category configured on the
            Sumo Logic HTTP collector. This can also be overridden at the event
            level with the __sourceCategory field.
        format:
          type: string
          title: Data Format
          description: Optionally, preserve the raw event format instead of json-ifying it.
          enum:
            - json
            - raw
          default: json
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputDatadog:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - datadog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        contentType:
          type: string
          title: Send logs as
          description: The content type to use when sending logs.
          enum:
            - text
            - json
          default: json
        message:
          type: string
          title: Message field
          description: Name of the event field that contains the message to send. If not
            specified, Stream sends a JSON representation of the whole event.
        source:
          type: string
          title: Source
          description: Name of the source to send with logs. When you send logs as JSON
            objects, the event's 'source' field (if set) will override this
            value.
        host:
          type: string
          title: Host
          description: Name of the host to send with logs. When you send logs as JSON
            objects, the event's 'host' field (if set) will override this value.
        service:
          type: string
          title: Service
          description: Name of the service to send with logs. When you send logs as JSON
            objects, the event's '__service' field (if set) will override this
            value.
        tags:
          type: array
          title: Datadog tags
          description: List of tags to send with logs (e.g., 'env:prod',
            'env_staging:east').
          default: []
          items:
            type: string
        allowApiKeyFromEvents:
          type: boolean
          title: Allow API key from events
          description: If enabled, the API key can be set from the event's
            '__agent_api_key' field.
          default: false
        severity:
          type: string
          title: Severity
          description: Default value for message severity. When you send logs as JSON
            objects, the event's '__severity' field (if set) will override this
            value.
          default: info
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
            - debug
        site:
          type: string
          title: Datadog site
          description: Datadog site to which events should be sent
          default: us
          enum:
            - us
            - us3
            - us5
            - eu
            - fed1
            - ap1
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter API key directly, or select a stored secret
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Datadog
        textSecret:
          type: string
          title: API key (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: apiKey
      type: object
    OutputGrafanaCloud:
      required:
        - lokiUrl
        - prometheusUrl
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - grafana_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported. These fields are added as
            dimensions and labels to generated metrics and logs respectively."
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        lokiUrl:
          type: string
          title: Loki URL
          description: "The endpoint to send logs to, e.g.:
            https://logs-prod-us-central1.grafana.net"
          pattern: ^https?://
        prometheusUrl:
          type: string
          title: Prometheus URL
          description: "The remote_write endpoint to send Prometheus metrics to, e.g.:
            https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/pus\
            h"
          pattern: ^https?://
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not
            specified, Stream sends a JSON representation of the whole event.
        messageFormat:
          type: string
          title: Message Format
          description: Which format to use when sending logs to Loki (Protobuf or
            JSON).  Defaults to Protobuf.
          enum:
            - protobuf
            - json
          default: protobuf
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so
            use static labels to avoid proliferating label value combinations
            and streams. Can be merged and/or overridden by the event's __labels
            field (e.g.: '__labels: {host: \"cribl.io\", level: \"error\"}')."
          minItems: 0
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Name of the label.
                default: ""
              value:
                type: string
                title: Value
                description: Value of the label.
        metricRenameExpr:
          type: string
          title: Metrics renaming expression
          description: "A JS expression that can be used to rename metrics. E.g.:
            name.replace(/\\./g, '_') will replace all '.' characters in a
            metric's name with the supported '_' character. Use the 'name'
            global variable to access the metric's name.  You can access event
            fields' values via __e.<fieldName>."
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication Type
              description: The authentication method to use for the HTTP requests
              enum:
                - credentialsSecret
                - token
                - textSecret
                - basic
              default: basic
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana
                Cloud, this is generally built by concatenating the username and
                the API key, separated by a colon. E.g.:
                <your-username>:<your-api-key>."
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select (or create) a stored text secret
              x-metasecret:
                type: text
                target: token
            username:
              type: string
              title: Username
              description: Username for authentication
            password:
              type: string
              title: Password
              description: Password (a.k.a API key in Grafana Cloud domain) for authentication
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select (or create) a secret that references your credentials
              x-metasecret:
                type: credentials
                target:
                  - username
                  - password
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication Type
              description: The authentication method to use for the HTTP requests
              enum:
                - credentialsSecret
                - token
                - textSecret
                - basic
              default: basic
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana
                Cloud, this is generally built by concatenating the username and
                the API key, separated by a colon. E.g.:
                <your-username>:<your-api-key>."
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select (or create) a stored text secret
              x-metasecret:
                type: text
                target: token
            username:
              type: string
              title: Username
              description: Username for authentication
            password:
              type: string
              title: Password
              description: Password (a.k.a API key in Grafana Cloud domain) for authentication
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select (or create) a secret that references your credentials
              x-metasecret:
                type: credentials
                target:
                  - username
                  - password
        concurrency:
          type: integer
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning:
            Setting this value > 1 can cause Loki and Prometheus to complain
            about entries being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this
            too low can increase the number of ongoing requests (depending on
            the value of 'Request concurrency'); this can cause Loki and
            Prometheus to complain about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: "Maximum number of events to include in the request body. Default
            is 0 (unlimited). Warning: Setting this too low can increase the
            number of ongoing requests (depending on the value of 'Request
            concurrency'); this can cause Loki and Prometheus to complain about
            entries being delivered out of order."
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the
            payload size to be smaller than the configured Maximum time between
            requests. Small values can reduce the payload size below the
            configured 'Max record size' and 'Max events per request'. Warning:
            Setting this too low can increase the number of ongoing requests
            (depending on the value of 'Request concurrency'); this can cause
            Loki and Prometheus to complain about entries being delivered out of
            order."
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending. Applies only
            to Loki's JSON payloads, as both Prometheus' and Loki's Protobuf
            variant are snappy-compressed by default.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
      anyOf:
        - required:
            - lokiUrl
        - required:
            - prometheusUrl
    OutputLoki:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - loki
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported. These fields are added as
            labels to generated logs."
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        url:
          type: string
          title: Loki URL
          description: The endpoint to send logs to.
          pattern: ^https?://.*
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not
            specified, Stream sends a JSON representation of the whole event.
        messageFormat:
          type: string
          title: Message Format
          description: Which format to use when sending logs to Loki (Protobuf or
            JSON).  Defaults to Protobuf.
          enum:
            - protobuf
            - json
          default: protobuf
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so
            use static labels to avoid proliferating label value combinations
            and streams. Can be merged and/or overridden by the event's __labels
            field (e.g.: '__labels: {host: \"cribl.io\", level: \"error\"}')."
          minItems: 0
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: Name of the label.
                default: ""
              value:
                type: string
                title: Value
                description: Value of the label.
        authType:
          type: string
          title: Authentication Type
          description: The authentication method to use for the HTTP requests
          enum:
            - credentialsSecret
            - token
            - textSecret
            - basic
            - none
          default: none
        concurrency:
          type: integer
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning:
            Setting this value > 1 can cause Loki to complain about entries
            being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this
            too low can increase the number of ongoing requests (depending on
            the value of 'Request concurrency'); this can cause Loki to complain
            about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: "Maximum number of events to include in the request body. Defaults
            to 0 (unlimited). Warning: Setting this too low can increase the
            number of ongoing requests (depending on the value of 'Request
            concurrency'); this can cause Loki to complain about entries being
            delivered out of order."
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the
            payload size to be smaller than the configured Maximum time between
            requests. Small values can reduce the payload size below the
            configured 'Max record size' and 'Max events per request'. Warning:
            Setting this too low can increase the number of ongoing requests
            (depending on the value of 'Request concurrency'); this can cause
            Loki to complain about entries being delivered out of order."
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        compress:
          type: boolean
          default: false
          title: Compress
          description: Whether to compress the payload body before sending.
        token:
          type: string
          title: Auth token
          description: "Bearer token to include in the authorization header. In Grafana
            Cloud, this is generally built by concatenating the username and the
            API key, separated by a colon. E.g.:
            <your-username>:<your-api-key>."
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        username:
          type: string
          title: Username
          description: Username for authentication
        password:
          type: string
          title: Password
          description: Password (a.k.a API key in Grafana Cloud domain) for authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputPrometheus:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - prometheus
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported. These fields are added as
            dimensions to generated metrics."
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        url:
          type: string
          title: Remote Write URL
          description: The endpoint to send metrics to.
          pattern: ^https?://.*
        metricRenameExpr:
          type: string
          title: Metric renaming expression
          description: "A JS expression that can be used to rename metrics. E.g.:
            name.replace(/\\./g, '_') will replace all '.' characters in a
            metric's name with the supported '_' character. Use the 'name'
            global variable to access the metric's name.  You can access event
            fields' values via __e.<fieldName>."
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
        sendMetadata:
          type: boolean
          title: Send metadata
          description: Whether to generate and send metadata (`type` and
            `metricFamilyName`) requests.
          default: true
          
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
          default: none
        metricsFlushPeriodSec:
          type: integer
          default: 60
          title: Metadata flush period (sec)
          description: How frequently metrics metadata is sent out. Value cannot be
            smaller than the base Flush period (sec) set above.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    OutputRing:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - ring
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - json
            - raw
          default: json
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression to define how files are partitioned and organized. If
            left blank, Cribl Stream will fallback on event.__partition.
        maxDataSize:
          type: string
          title: Max data size
          description: Maximum disk space allowed to be consumed (e.g., 420MB or 4GB).
            Once reached, older data will be deleted.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1GB
        maxDataTime:
          title: Max data age
          type: string
          description: Maximum amount of time to retain data (e.g., 2h or 4d). Once
            reached, older data will be deleted.
          pattern: \d+[smhd]$
          default: 24h
        compress:
          type: string
          title: Compression
          description: Select data compression format. Optional.
          enum:
            - none
            - gzip
          default: gzip
        destPath:
          type: string
          title: Path location
          description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
      type: object
    OutputOpenTelemetry:
      required:
        - endpoint
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - open_telemetry
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where OTEL events will be sent. Enter any valid URL or
            an IP address (IPv4 or IPv6; enclose IPv6 addresses in square
            brackets). Unspecified ports will default to 4317, unless the
            endpoint is an HTTPS-based URL or TLS is enabled, in which case 443
            will be used.
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - deflate
            - gzip
          default: gzip
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - gzip
          default: gzip
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
            - oauth
            - basic
            - credentialsSecret
            - token
            - textSecret
          default: none
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: The endpoint where traces will be sent; if unspecified, defaults to
            `{endpoint}/v1/traces`
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: The endpoint where metrics will be sent; if unspecified, defaults
            to `{endpoint}/v1/metrics`
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value
            supports JavaScript expressions that are evaluated just once, when
            the destination gets started. To pass credentials as metadata, use
            'C.Secret'.
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                description: The key of the metadata
                default: ""
              value:
                type: string
                title: Value
                description: The value of the metadata
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        keepAliveTime:
          type: integer
          title: Keep Alive Time (seconds)
          description: How often the sender should ping the peer to keep the connection
            alive
          minimum: 1
          default: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Toggle to No if you want @{product} to close the connection as soon
            as the outgoing request is sent. Defaults to Yes.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        username:
          type: string
          title: Username
          description: Username for Basic authentication
        password:
          type: string
          title: Password
          description: Password for Basic authentication
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select (or create) a secret that references your credentials
          x-metasecret:
            type: credentials
            target:
              - username
              - password
        textSecret:
          type: string
          title: Token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
        spacer:
          type: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: integer
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
        rejectUnauthorized:
          type: boolean
          default: false
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            No.
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputDataset:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - dataset
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        messageField:
          type: string
          title: Message field
          description: Name of the event field that contains the message or attributes to
            send. If not specified, all of the event's non-internal fields will
            be sent as attributes.
        excludeFields:
          type: array
          title: Exclude fields
          description: Fields to exclude from the event if the Message field is either
            unspecified or refers to an object. Ignored if the Message field is
            a string. If empty, we send all non-internal fields.
          default:
            - sev
            - _time
            - ts
            - thread
          items:
            type: string
        serverHostField:
          type: string
          title: Server/host field
          description: Name of the event field that contains the `serverHost` identifier.
            If not specified, defaults to `cribl_<outputId>`.
        timestampField:
          type: string
          title: Timestamp field
          description: Name of the event field that contains the timestamp. If not
            specified, defaults to `ts`, `_time`, or `Date.now()`, in that
            order.
        defaultSeverity:
          type: string
          title: Severity
          description: Default value for event severity. If the `sev` or `__severity`
            fields are set on an event, the first one matching will override
            this value.
          default: info
          enum:
            - finest
            - finer
            - fine
            - info
            - warning
            - error
            - fatal
        site:
          type: string
          title: DataSet site
          description: DataSet site to which events should be sent
          default: us
          enum:
            - us
            - eu
            - custom
        customUrl:
          type: string
          pattern: ^https?://.*
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 6144
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter API key directly, or select a stored secret
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        apiKey:
          type: string
          title: API key
          description: A 'Log Write Access' API key for the DataSet account
        textSecret:
          type: string
          title: API key (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: apiKey
      type: object
    OutputCriblTcp:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - cribl_tcp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
        throttleRatePerSec:
          type: string
          title: Throttling
          description: Rate (in bytes per second) to throttle while writing to an output.
            Also takes values with multiple-byte units, such as KB, MB, GB, etc.
            (E.g., 42 MB.) Default value of 0 specifies no throttling.
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        connectionTimeout:
          type: integer
          title: Connection Timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
        writeTimeout:
          type: integer
          title: Write Timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
        tokenTTLMinutes:
          type: integer
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated
            authentication token expires, valid values between 1 and 60
        excludeFields:
          type: array
          title: Exclude Fields
          description: "Fields to exclude from the event. By default, all internal fields
            except `__output` are sent. E.g.: `cribl_pipe`, `c*`. Wildcards
            supported."
          default:
            - __kube_*
            - __metadata
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: integer
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 10300
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames.
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to.
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver.
              port:
                type: integer
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host.
                default: 10300
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS.
                enum:
                  - inherit
                  - off
                default: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not
                  specified, defaults to connection host (iff not an IP);
                  otherwise, to the global TLS settings.
              weight:
                type: integer
                title: Load Weight
                description: The weight to use for load-balancing purposes.
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: integer
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: Re-resolve any hostnames every this many seconds and pick up
            destinations from A records.
        loadBalanceStatsPeriodSec:
          type: integer
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes.
        maxConcurrentSenders:
          type: integer
          default: 0
          minimum: 0
          title: Max connections
          description: Maximum number of concurrent connections (per worker process). A
            random set of IPs will be picked on every DNS resolution period. Use
            0 for unlimited.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - loadBalanced
            - hosts
      type: object
    OutputCriblHttp:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - cribl_http
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certs that are not authorized by a CA in the CA certificate
                path, or by another trusted CA (e.g., the system's CA). Defaults
                to No.
              default: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate name
              description: The name of the predefined certificate.
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key.
            minVersion:
              type: string
              title: Minimum TLS version
              description: Minimum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              description: Maximum TLS version to use when connecting
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        tokenTTLMinutes:
          type: integer
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated
            authentication token expires, valid values between 1 and 60.
        excludeFields:
          type: array
          title: Exclude fields
          description: "Fields to exclude from the event. By default, all internal fields
            except `__output` are sent. E.g.: `cribl_pipe`, `c*`. Wildcards
            supported."
          default:
            - __kube_*
            - __metadata
          items:
            type: string
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending.
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        url:
          type: string
          title: Cribl endpoint
          description: URL of a Cribl Worker to send events to, e.g., http://localhost:10200
          pattern: ^https?://.*
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames.
        urls:
          type: array
          title: Cribl Worker Endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: Cribl Endpoint
                description: URL of a Cribl Worker to send events to, e.g.,
                  http://localhost:10200
                pattern: ^https?://.*
              weight:
                type: integer
                title: Load Weight
                description: The weight to use for load-balancing purposes.
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: integer
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: Re-resolve any hostnames every this many seconds and pick up
            destinations from A records.
        loadBalanceStatsPeriodSec:
          type: integer
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes.
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
        optionalFieldsInGeneralSection:
          type: string
          enum:
            - loadBalanced
            - urls
      type: object
    OutputHumioHec:
      required:
        - format
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - humio_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: false
          
        concurrency:
          type: integer
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: integer
          title: Max body size (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 32768
        maxPayloadEvents:
          type: integer
          title: Max events per request
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Whether to compress the payload body before sending.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: Reject certs that are not authorized by a CA in the CA certificate
            path, or by another trusted CA (e.g., the system's CA). Defaults to
            Yes.
        timeoutSec:
          type: integer
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before aborting it.
        flushPeriodSec:
          type: integer
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max body size.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Name
                description: Field name
              value:
                type: string
                title: Value
                description: Field value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Determines which data should be logged when a request fails.
            Defaults to None.  All headers are redacted by default, except those
            listed under `Safe Headers`.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text.
          default: []
          items:
            type: string
        format:
          title: Request Format
          type: string
          enum:
            - JSON
            - raw
          default: JSON
          description: Send data in JSON format to the api/v1/ingest/hec endpoint , or raw
            1-request-per-line to the api/v1/ingest/hec/raw endpoint .
        authType:
          title: Authentication method
          type: string
          enum:
            - secret
            - manual
          default: manual
          description: Enter a token directly, or provide a secret referencing a token
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block, drop, or queue events when all receivers are
            exerting backpressure.
          enum:
            - queue
            - drop
            - block
          default: block
        url:
          type: string
          title: LogScale Endpoint
          description: "URL to a CrowdStrike Falcon LogScale endpoint to send events to,
            e.g., https://cloud.us.humio.com/api/v1/ingest/hec for JSON and
            https://cloud.us.humio.com/api/v1/ingest/hec/raw for raw "
          default: https://cloud.us.humio.com/api/v1/ingest/hec
          pattern: ^https?://.*
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable to use round-robin DNS lookup. When a DNS server returns
            multiple addresses, this will cause Stream to cycle through them in
            the order returned.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames.
        urls:
          type: array
          title: CrowdStrike Falcon LogScale Endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: LogScale Endpoint
                description: "URL to a CrowdStrike Falcon LogScale endpoint to send events to,
                  e.g., https://cloud.us.humio.com/api/v1/ingest/hec for JSON
                  and https://cloud.us.humio.com/api/v1/ingest/hec/raw for raw "
                default: https://cloud.us.humio.com/api/v1/ingest/hec
                pattern: ^https?://.*
              weight:
                type: integer
                title: Load Weight
                description: The weight to use for load-balancing purposes.
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: integer
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: Re-resolve any hostnames every this many seconds and pick up
            destinations from A records.
        loadBalanceStatsPeriodSec:
          type: integer
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes.
        token:
          type: string
          title: LogScale Auth token
          description: CrowdStrike Falcon LogScale authentication token
        textSecret:
          type: string
          title: LogScale Auth token (text secret)
          description: Select (or create) a stored text secret
          x-metasecret:
            type: text
            target: token
        pqMaxFileSize:
          type: string
          title: Max file size
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.).
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Max queue size
          description: The maximum amount of disk space the queue is allowed to consume.
            Once reached, the system stops queueing and applies the fallback
            Queue-full behavior. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data.
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: Whether to block or drop events when the queue is exerting
            backpressure (full capacity or low disk). 'Block' is the same
            behavior as non-PQ blocking. 'Drop new data' throws away incoming
            data, while leaving the contents of the PQ unchanged.
        pqStrictOrdering:
          title: Strict ordering
          description: Toggle this off to forward new events to receiver(s) before queue
            is flushed. Otherwise, default drain behavior is FIFO (first in,
            first out).
          type: boolean
          default: true
        pqControls:
          type: object
          title: ""
      type: object
    OutputDlS3:
      required:
        - bucket
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - dl_s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at init time. E.g., referencing a
            Global Variable: `myBucket-${C.vars.myVar}`."
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located.
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.SOME_SECRET}`).
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to AWS' Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Append output's ID to staging location.
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove staging dirs
          description: Remove empty staging directories after moving files.
          default: false
          
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be evaluated only at init time. E.g.,
            referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`."
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects.
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects.
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
        serverSideEncryption:
          type: string
          title: Server side encryption
          description: Server-side encryption for uploaded objects.
          enum:
            - aws:kms
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression defining how files are partitioned and organized.
            Default is date-based. If blank, Stream will fall back to the
            event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - parquet
            - raw
            - json
          default: json
          x-flagprefix: native
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant).
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`)
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
        maxFileSizeMB:
          type: integer
          title: Max file size (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: integer
          title: Max open files
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
        maxFileOpenTimeSec:
          type: integer
          title: Max file open time (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: integer
          title: Max file idle time (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: integer
          title: Max concurrent file parts
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        partitioningFields:
          type: array
          title: Partition by fields
          description: List of fields to partition the path by, in addition to time, which
            is included automatically. The effective partition will be
            YYYY/MM/DD/HH/<list/of/fields>.
          default: []
          items:
            type: string
        awsApiKey:
          type: string
          title: Access key
          description: Access key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.SOME_ACCESS_KEY}`).
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        compress:
          type: string
          title: Compress
          description: Choose data compression format to apply before moving files to
            final destination.
          enum:
            - none
            - gzip
          default: none
        parquetRowGroupSize:
          type: string
          title: Row group size
          description: Ideal memory size for row group segments. E.g., 128MB or 1GB.
            Affects memory use when writing. Imposes a target, not a strict
            limit; the final size of a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 16MB
        parquetPageSize:
          type: string
          title: Page size
          description: Ideal memory size for page segments. E.g., 1MB or 128MB. Generally,
            lower values improve reading speed, while higher values improve
            compression. Imposes a target, not a strict limit; the final size of
            a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        spacer:
          type: string
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented.
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V1
          description: Serialization format of data pages. Note that not all reader
            implentations support Data page V2.
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: To log rows that @{product} skips due to data mismatch, first set
            logging to Debug, then toggle this on. Logs up to 20 unique rows.
        emptyDirCleanupSec:
          type: integer
          title: Staging cleanup period
          description: How often (secs) to clean-up empty directories when 'Remove Staging
            Dirs' is enabled.
          default: 300
          minimum: 10
          maximum: 86400
      type: object
    OutputSecurityLake:
      required:
        - bucket
        - stagePath
        - region
        - accountId
        - parquetSchema
        - customSource
        - assumeRoleArn
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - security_lake
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output.
        systemFields:
          type: array
          title: System fields
          description: "Set of fields to automatically add to events using this output.
            E.g.: cribl_pipe, c*. Wildcards supported. These fields are added as
            dimensions and labels to generated metrics and logs respectively."
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at init time. E.g., referencing a
            Global Variable: `myBucket-${C.vars.myVar}`."
        region:
          type: string
          title: Region
          description: Region where the Amazon Security Lake is located.
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - af-south-1
            - ca-central-1
            - eu-west-1
            - eu-central-1
            - eu-west-2
            - eu-south-1
            - eu-west-3
            - eu-north-1
            - ap-east-1
            - ap-northeast-1
            - ap-northeast-2
            - ap-southeast-1
            - ap-southeast-2
            - ap-south-1
            - me-south-1
            - sa-east-1
            - us-gov-east-1
            - us-gov-west-1
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - secret
            - manual
        endpoint:
          type: string
          title: Endpoint
          description: Amazon Security Lake service endpoint. If empty, defaults to AWS'
            Region-specific endpoint. Otherwise, it must point to Amazon
            Security Lake-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Amazon Security Lake requests.
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Whether to reuse connections between requests, which can improve
            performance.
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Whether to reject certificates that cannot be verified against a
            valid CA (e.g., self-signed certificates).
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Append output's ID to staging location.
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove staging dirs
          description: Remove empty staging directories after moving files.
          default: false
          
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects.
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects.
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
        serverSideEncryption:
          type: string
          title: Server side encryption
          description: Server-side encryption for uploaded objects.
          enum:
            - aws:kms
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant).
          default: "`CriblOut`"
        maxFileSizeMB:
          type: integer
          title: Max file size (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: integer
          title: Max open files
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: Whether to block or drop events when all receivers are exerting
            backpressure.
          enum:
            - block
            - drop
          default: block
        maxFileOpenTimeSec:
          type: integer
          title: Max file open time (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: integer
          title: Max file idle time (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: integer
          title: Max concurrent file parts
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        accountId:
          type: string
          title: Account ID
          description: ID of the AWS account whose data the Destination will write to
            Security Lake. This should have been configured when creating the
            Amazon Security Lake custom source.
        customSource:
          type: string
          title: Custom source name
          description: Name of the custom source configured in Amazon Security Lake
        parquetRowGroupSize:
          type: string
          title: Row group size
          description: Ideal memory size for row group segments. E.g., 128MB or 1GB.
            Affects memory use when writing. Imposes a target, not a strict
            limit; the final size of a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 16MB
        parquetPageSize:
          type: string
          title: Page size
          description: Ideal memory size for page segments. E.g., 1MB or 128MB. Generally,
            lower values improve reading speed, while higher values improve
            compression. Imposes a target, not a strict limit; the final size of
            a row group may be larger or smaller.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        spacer:
          type: string
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented.
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V1
          description: Serialization format of data pages. Note that not all reader
            implentations support Data page V2.
        awsApiKey:
          type: string
          title: Access key
          description: Access key. This value can be a constant or a JavaScript
            expression(e.g., `${C.env.SOME_ACCESS_KEY}`).
        awsSecret:
          type: string
          title: Secret key pair
          description: Select (or create) a stored secret that references your access key
            and secret key.
          x-metasecret:
            type: keypair
            target:
              - awsApiKey
              - awsSecretKey
            authTypeField: awsAuthenticationMethod
        emptyDirCleanupSec:
          type: integer
          title: Staging cleanup period
          description: How often (secs) to clean-up empty directories when 'Remove Staging
            Dirs' is enabled.
          default: 300
          minimum: 10
          maximum: 86400
      type: object
    Output:
      oneOf:
        - $ref: "#/components/schemas/OutputDefault"
        - $ref: "#/components/schemas/OutputWebhook"
        - $ref: "#/components/schemas/OutputDevnull"
        - $ref: "#/components/schemas/OutputSyslog"
        - $ref: "#/components/schemas/OutputSplunk"
        - $ref: "#/components/schemas/OutputSplunkLb"
        - $ref: "#/components/schemas/OutputSplunkHec"
        - $ref: "#/components/schemas/OutputTcpjson"
        - $ref: "#/components/schemas/OutputWavefront"
        - $ref: "#/components/schemas/OutputSignalfx"
        - $ref: "#/components/schemas/OutputFilesystem"
        - $ref: "#/components/schemas/OutputS3"
        - $ref: "#/components/schemas/OutputAzureBlob"
        - $ref: "#/components/schemas/OutputAzureLogs"
        - $ref: "#/components/schemas/OutputKinesis"
        - $ref: "#/components/schemas/OutputHoneycomb"
        - $ref: "#/components/schemas/OutputAzureEventhub"
        - $ref: "#/components/schemas/OutputGoogleChronicle"
        - $ref: "#/components/schemas/OutputGoogleCloudStorage"
        - $ref: "#/components/schemas/OutputGoogleCloudLogging"
        - $ref: "#/components/schemas/OutputGooglePubsub"
        - $ref: "#/components/schemas/OutputKafka"
        - $ref: "#/components/schemas/OutputConfluentCloud"
        - $ref: "#/components/schemas/OutputMsk"
        - $ref: "#/components/schemas/OutputElastic"
        - $ref: "#/components/schemas/OutputNewrelic"
        - $ref: "#/components/schemas/OutputNewrelicEvents"
        - $ref: "#/components/schemas/OutputInfluxdb"
        - $ref: "#/components/schemas/OutputCloudwatch"
        - $ref: "#/components/schemas/OutputMinio"
        - $ref: "#/components/schemas/OutputStatsd"
        - $ref: "#/components/schemas/OutputStatsdExt"
        - $ref: "#/components/schemas/OutputGraphite"
        - $ref: "#/components/schemas/OutputRouter"
        - $ref: "#/components/schemas/OutputSns"
        - $ref: "#/components/schemas/OutputSqs"
        - $ref: "#/components/schemas/OutputSnmp"
        - $ref: "#/components/schemas/OutputSumoLogic"
        - $ref: "#/components/schemas/OutputDatadog"
        - $ref: "#/components/schemas/OutputGrafanaCloud"
        - $ref: "#/components/schemas/OutputLoki"
        - $ref: "#/components/schemas/OutputPrometheus"
        - $ref: "#/components/schemas/OutputRing"
        - $ref: "#/components/schemas/OutputOpenTelemetry"
        - $ref: "#/components/schemas/OutputDataset"
        - $ref: "#/components/schemas/OutputCriblTcp"
        - $ref: "#/components/schemas/OutputCriblHttp"
        - $ref: "#/components/schemas/OutputHumioHec"
        - $ref: "#/components/schemas/OutputDlS3"
        - $ref: "#/components/schemas/OutputSecurityLake"
    OutputSamplesResponse:
      type: object
      properties:
        events:
          type: array
          items:
            type: object
            additionalProperties: true
      required:
        - events
    OutputTestResponse:
      type: object
      properties:
        details:
          type: object
          additionalProperties: true
        error:
          type: string
        outputId:
          type: string
        success:
          type: boolean
        successDetail:
          type: string
      required:
        - outputId
        - success
    CriblEvent:
      type: object
      properties:
        _raw:
          type: string
      required:
        - _raw
    OutputTestRequest:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/CriblEvent"
      required:
        - events
    SchemaLibEntry:
      type: object
      additionalProperties: true
      required:
        - id
        - schema
      properties:
        id:
          type: string
          title: ID
          description: Schema ID.
        description:
          type: string
          title: Description
          description: Brief description of this schema. Optional.
        schema:
          type: string
          title: Schema
          description: JSON schema matching standards of draft version 2019-09.
    PipelineFunctionConf:
      type: object
      required:
        - id
        - conf
      additionalProperties: false
      properties:
        filter:
          title: Filter
          description: Filter that selects data to be fed through this function
          type: string
          default: "true"
        id:
          title: ID
          description: Function ID
          type: string
        description:
          title: Description
          description: Simple description of this step
          type: string
        disabled:
          title: Disabled
          description: If true, data will not be pushed through this function
          type: boolean
        final:
          title: Final
          description: If true, stops the results of this function from being passed to
            the downstream functions
          type: boolean
        conf:
          type: object
          title: Function-specific configs
          properties: {}
        groupId:
          title: Group ID
          description: Group ID
          type: string
    Pipeline:
      title: Pipeline Settings
      x-speakeasy-entity: Pipeline
      type: object
      required:
        - conf
        - id
      properties:
        id:
          title: ID
          description: Pipeline ID
          type: string
        conf:
          type: object
          additionalProperties: false
          properties:
            asyncFuncTimeout:
              type: integer
              title: Async Function Timeout (ms)
              description: Time (in ms) to wait for an async function to complete processing a
                data item
              minimum: 0
              maximum: 10000
            output:
              type: string
              title: Output event destination
              description: The output destination for events processed by this pipeline
              default: default
            description:
              title: Description
              description: Simple description of this pipeline
              type: string
            streamtags:
              type: array
              title: Tags
              description: Add tags for filtering and grouping in @{product}.
              default: []
              items:
                type: string
            functions:
              title: Functions
              description: List of functions to pass data through
              type: array
              items:
                $ref: "#/components/schemas/PipelineFunctionConf"
            groups:
              type: object
              additionalProperties:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    title: Group Name
                  description:
                    type: string
                    title: Description
                    description: Short description of this group
                  disabled:
                    type: boolean
                    title: Disabled
                    description: Whether this group is disabled
    ProfilerItem:
      type: object
      properties:
        createTime:
          type: integer
        id:
          type: string
        size:
          type: integer
        workerId:
          type: string
      required:
        - id
    RoutesRoute:
      type: object
      additionalProperties: true
      required:
        - pipeline
        - name
      properties:
        id:
          type: string
          title: Route ID
          readOnly: true
        name:
          type: string
          title: Route Name
        disabled:
          type: boolean
          title: Disabled
          description: Whether this routing rule is disabled
        filter:
          type: string
          title: Filter
          description: Expression (JS) to select data to route
          default: "true"
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to send the matching data to
        enableOutputExpression:
          type: boolean
          title: Enable Expression
          description: If toggled to Yes, you can use a JavaScript expression that
            evaluates to the name of the Output below
          default: false
        output: {}
        outputExpression: {}
        description:
          type: string
          title: Description
          description: Short description of this Route
        final:
          title: Final
          description: Flag to control whether the event gets consumed by this Route
            (Final), or cloned into it
          type: boolean
          default: true
    Routes:
      type: object
      additionalProperties: false
      required:
        - routes
      properties:
        id:
          type: string
          title: ID
          description: Routes ID
        routes:
          type: array
          title: Route
          description: Pipeline routing rules
          items:
            $ref: "#/components/schemas/RoutesRoute"
        groups:
          type: object
          additionalProperties:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                title: Group Name
              description:
                type: string
                title: Description
                description: Short description of this group
              disabled:
                type: boolean
                title: Disabled
                description: Whether this group is disabled
        comments:
          type: array
          title: Comments
          description: Comments
          items:
            type: object
            properties:
              comment:
                type: string
                title: Comment
                description: Optional, short description of this Route's purpose
            additionalProperties: true
    SecretType:
      type: string
      enum:
        - text
        - keypair
        - credentials
    RestSecret:
      type: object
      properties:
        apiKey:
          type: string
        description:
          type: string
        id:
          type: string
        password:
          type: string
        secretKey:
          type: string
        secretType:
          $ref: "#/components/schemas/SecretType"
        tags:
          type: string
        username:
          type: string
        value:
          type: string
      required:
        - id
        - secretType
    InputStatus:
      type: object
      properties:
        id:
          type: string
        status:
          type: object
          properties:
            health:
              type: string
              enum:
                - Green
                - Yellow
                - Red
            metrics:
              type: object
              additionalProperties: true
            timestamp:
              type: integer
          required:
            - health
            - metrics
            - timestamp
      required:
        - id
        - status
    OutputStatus:
      type: object
      properties:
        id:
          type: string
        status:
          type: object
          properties:
            health:
              type: string
              enum:
                - Green
                - Yellow
                - Red
            metrics:
              type: object
              additionalProperties: true
            timestamp:
              type: integer
          required:
            - health
            - metrics
            - timestamp
      required:
        - id
        - status
    CrudEntityBase:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    LoginInfo:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    AuthToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    RedirectInfo:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        redirectUrl:
          type: string
        token:
          type: string
    AuthPolicyEntry:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
        object:
          type: string
      required:
        - actions
        - object
    CaptureParams:
      type: object
      properties:
        filter:
          type: string
        level:
          type: integer
        maxEvents:
          type: integer
        stepDuration:
          type: integer
        workerId:
          type: string
        workerThreshold:
          type: integer
      required:
        - duration
        - filter
        - level
        - maxEvents
    ChangelogState:
      type: object
      properties:
        lastViewedCurrent:
          type: string
        lastViewedUpgrade:
          type: string
    CluiCategory:
      type: string
      enum:
        - link
    CluiType:
      type: string
      enum:
        - input
        - output
        - route
        - pipeline
        - knowledge
        - collector
        - pack
        - monitoring
    CluiItem:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/CluiCategory"
        groupId:
          type: string
        id:
          type: string
        name:
          type: string
        packId:
          type: string
        subType:
          type: string
        type:
          $ref: "#/components/schemas/CluiType"
      required:
        - category
        - type
    Function:
      type: object
      properties:
        __conf:
          type: object
          additionalProperties: true
        __filename:
          type: string
        disabled:
          type: boolean
        group:
          type: string
        id:
          type: string
        initTime:
          type: integer
        loadTime:
          type: integer
        modTime:
          type: integer
        name:
          type: string
        schema:
          type: object
          additionalProperties: true
        uischema:
          type: object
          additionalProperties: true
        version:
          type: string
      required:
        - __conf
        - __filename
        - disabled
        - group
        - id
        - initTime
        - loadTime
        - modTime
        - name
        - schema
        - uischema
        - version
    Condition:
      $ref: "#/components/schemas/Function"
    SearchEvent: {}
    PreviewResponseBody:
      type: object
      properties:
        count:
          type: integer
        events:
          type: array
          items:
            $ref: "#/components/schemas/SearchEvent"
        processingTimeMS:
          type: integer
        useFormattedVisualization:
          type: boolean
      required:
        - count
        - events
        - processingTimeMS
        - useFormattedVisualization
    EventBreakerRuleFields:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    ConstrainParserType: {}
    ParserConf:
      $ref: "#/components/schemas/ConstrainParserType"
    EventBreakerRule:
      type: object
      properties:
        cleanFields:
          type: boolean
        condition:
          type: string
        delimiter:
          type: string
        delimiterRegex:
          type: string
        disabled:
          type: boolean
        escapeChar:
          type: string
        eventBreakerRegex:
          type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/EventBreakerRuleFields"
        fieldsLineRegex:
          type: string
        headerLineRegex:
          type: string
        jsonArrayField:
          type: string
        jsonExtractAll:
          type: boolean
        jsonTimeField:
          type: string
        maxEventBytes:
          type: integer
        name:
          type: string
        nullFieldVal:
          type: string
        parser:
          $ref: "#/components/schemas/ParserConf"
        parserEnabled:
          type: boolean
        quoteChar:
          type: string
        timeField:
          type: string
        timestamp:
          type: object
          properties:
            format:
              type: string
            length:
              type: integer
            type:
              type: string
              enum:
                - auto
                - format
                - current
          required:
            - type
        timestampAnchorRegex:
          type: string
        timestampEarliest:
          type: string
        timestampLatest:
          type: string
        timestampTimezone:
          type: string
        type:
          type: string
          enum:
            - regex
            - json
            - json_array
            - header
            - timestamp
            - csv
      required:
        - condition
        - maxEventBytes
        - name
        - timestamp
        - timestampAnchorRegex
        - timestampTimezone
    DatatypePreviewInput: {}
    DatatypePreviewRequestBody:
      type: object
      properties:
        eventBreakerRule:
          $ref: "#/components/schemas/EventBreakerRule"
        input:
          $ref: "#/components/schemas/DatatypePreviewInput"
      required:
        - input
    DistributedUpgradeRequest:
      type: object
      additionalProperties: false
      properties:
        packageUrls:
          title: Custom Path
          description: Provide your own URLs or local paths for platform-specific Cribl
            packages.
          type: array
          maxItems: 2
          items:
            type: object
            required:
              - packageUrl
            properties:
              packageUrl:
                type: string
                title: Platform-specific package location
                description: Package HTTP URL or local path.
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([a-zA-Z0-9]*)-?([a-z0-9]{8})?-?(linux|darwin|win32)?-?([0-9a-zA-Z]+)?
                minLength: 1
              packageHashUrl:
                type: string
                title: Package hash location
                description: Package's MD5 or SHA256 hash HTTP URL or local path.
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([a-zA-Z0-9]*)-?([a-z0-9]{8})?-?(linux|darwin|win32)?-?([0-9a-zA-Z]+)?(\.tgz)?\.(md5|sha256)
                minLength: 1
        upgradePercentage:
          type: integer
          title: Percentage of workers to upgrade
          description: Percentage of the total worker nodes on the group to run the
            upgrade on
          minimum: 0.00001
          maximum: 1
          default: 1
        workerRetries:
          type: integer
          title: Worker node connect retry count
          description: Number of times to retry conncecting to a worker node before
            marking the upgrade as failed.
          minimum: 1
          default: 5
        workerRetryDelay:
          type: integer
          title: Worker node connect retry delay
          description: Delay between retries
          minimum: 100
          default: 1000
        upgradeMode:
          type: string
          title: Upgrade mode
          enum:
            - rolling
            - regular
    EdgeFileInspectResponse:
      type: object
    FilesystemEntry:
      type: object
      properties:
        mode:
          type: string
        name:
          type: string
        stats:
          type: object
          additionalProperties: true
        type:
          type: string
      required:
        - name
        - type
    EdgeAwsMetadata:
      type: object
      properties:
        hostname:
          type: string
        identity:
          type: object
          additionalProperties: true
        public_ipv4:
          type: string
        roles:
          type: array
          items:
            type: string
        security_groups:
          type: array
          items:
            type: string
        tags:
          type: object
          additionalProperties: true
        version:
          type: integer
      required:
        - version
    EdgeCriblMetadata:
      type: object
      properties:
        config_version:
          type: string
        group:
          type: string
        mode:
          type: string
        version:
          type: string
      required:
        - mode
        - version
    EdgeKubeMetadata:
      type: object
      properties:
        cluster:
          type: object
          additionalProperties: true
        container:
          type: object
          additionalProperties: true
        node:
          type: object
          additionalProperties: true
        pod:
          type: object
          additionalProperties: true
    EdgeOsMetadata:
      type: object
      properties:
        arch:
          type: string
        cpu_count:
          type: integer
        cpu_speed_mhz:
          type: integer
        cpu_type:
          type: string
        gid:
          type: integer
        homedir:
          type: string
        hostname:
          type: string
        interfaces:
          type: object
          additionalProperties: true
        machine_id:
          type: string
        memory:
          type: integer
        os_id:
          type: string
        os_name:
          type: string
        os_version:
          type: string
        os_version_id:
          type: string
        platform:
          type: string
        release:
          type: string
        timezone:
          type: string
        timezone_offset:
          type: string
        uid:
          type: integer
        username:
          type: string
      required:
        - arch
        - cpu_count
        - cpu_speed_mhz
        - cpu_type
        - gid
        - homedir
        - hostname
        - interfaces
        - machine_id
        - memory
        - os_id
        - os_name
        - os_version
        - os_version_id
        - platform
        - release
        - timezone
        - timezone_offset
        - uid
        - username
    EdgeMetadata:
      type: object
      properties:
        aws:
          $ref: "#/components/schemas/EdgeAwsMetadata"
        cribl:
          $ref: "#/components/schemas/EdgeCriblMetadata"
        env:
          type: object
        kube:
          $ref: "#/components/schemas/EdgeKubeMetadata"
        os:
          $ref: "#/components/schemas/EdgeOsMetadata"
        timestamp:
          type: integer
      required:
        - timestamp
    ExprLibEntry:
      type: object
      properties:
        context:
          type: object
          additionalProperties: true
        evalType:
          type: string
        expr:
          type: string
          description: JavaScript expression to evaluate
        id:
          type: string
        pack:
          type: string
        result:
          type: object
          additionalProperties: true
        unprotected:
          type: boolean
      required:
        - expr
        - id
    SampleFile:
      type: object
      properties:
        bytes:
          type: string
        bytesRead:
          type: integer
        length:
          type: integer
      required:
        - bytes
        - bytesRead
        - length
    HealthStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - healthy
            - shutting down
    RunnableJobCollection:
      required:
        - collector
        - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Unique ID for this Job.
        type:
          type: string
          title: Job type
          description: Job type.
          enum:
            - collection
            - executor
            - scheduledSearch
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        removeFields:
          type: array
          title: Remove Discover fields
          description: "List of fields to remove from Discover results. Wildcards (e.g.:
            aws*) are allowed. This is useful when discovery returns sensitive
            fields that should not be exposed in the Jobs user interface."
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results.
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resumes the ad hoc job if a failure condition causes Stream to
            restart during job execution.
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job.
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Determines whether or not this schedule is enabled.
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job.
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: integer
              title: Max concurrent runs
              description: The maximum number of instances that may be running of this
                scheduled job at any given time.
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits.
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              required:
                - modes
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors.
                  default: true
                maxTaskReschedule:
                  type: integer
                  title: Max task reschedule
                  description: Max number of times a task can be rescheduled.
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log Level
                  description: Level at which to set task logging.
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                    Units are seconds, if not specified. Enter 0 for unlimited
                    time.
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  description: Time range for scheduled job.
                  default: relative
                earliest:
                  type: integer
                  title: Earliest
                  description: Earliest time, for the given Range Timezone.
                latest:
                  type: integer
                  title: Latest
                  description: Latest time, for the given Range Timezone.
                timestampTimezone:
                  type: string
                  title: Range Timezone
                  description: Timezone to use for Earliest and Latest times (defaults to UTC).
                  default: UTC
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: Limits the bundle size for small tasks. E.g., bundle five 200KB
                    files into one 1M task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: Limits the bundle size for files above the Lower task bundle size.
                    E.g., bundle five 2MB files into one 10MB task bundle.
                    Files greater than this size will be assigned to
                    individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled tasks are created and run by the same worker node.
          default: false
        collector:
          type: object
          required:
            - type
            - conf
          properties:
            type:
              type: string
              title: Collector type
              description: The type of collector to run.
            conf:
              type: object
              title: Collector-specific settings.
              properties: {}
            destructive:
              type: boolean
              title: Destructive
              description: If set to Yes, the collector will delete any files that it collects
                (where applicable).
              default: false
        input:
          type: object
          properties:
            type:
              type: string
              enum:
                - collection
              default: collection
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event breaking rulesets that will be applied, in order,
                to the input data stream.
              items:
                type: string
            staleChannelFlushMs:
              type: integer
              title: Event Breaker buffer timeout (ms)
              description: The amount of time (in milliseconds) the Event Breaker will wait
                for new data to be sent to a specific channel, before flushing
                the data stream out, as-is, to the Pipelines.
              default: 10000
              minimum: 10
              maximum: 43200000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: If set to Yes, events will be sent to normal routing and event
                processing. Set to No if you want to select a specific
                Pipeline/Destination combination.
              default: true
              
            preprocess:
              type: object
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  description: Enable Custom Command
                  default: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output
                    (stdout)
                args:
                  type: array
                  title: Arguments
                  description: Arguments
                  items:
                    type: string
            throttleRatePerSec:
              type: string
              title: Throttling
              description: Rate (in bytes per second) to throttle while writing to an output.
                Also takes values with multiple-byte units, such as KB, MB, GB,
                etc. (E.g., 42 MB.) Default value of 0 specifies no throttling.
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: Field name
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes
                      or backticks. (Can evaluate to a constant.)
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results.
            output:
              type: string
              title: Destination
              description: Destination to send results to.
        run:
          type: object
          required:
            - mode
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors.
              default: true
            maxTaskReschedule:
              type: integer
              title: Max task reschedule
              description: Max number of times a task can be rescheduled.
              default: 1
              minimum: 1
            logLevel:
              type: string
              title: Log Level
              description: Level at which to set task logging.
              enum:
                - error
                - warn
                - info
                - debug
                - silly
              default: info
            jobTimeout:
              title: Job timeout
              type: string
              description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                Units are seconds, if not specified. Enter 0 for unlimited time.
              pattern: \d+[sm]?$
              default: "0"
            mode:
              type: string
              title: Mode
              description: Job run mode. Preview will either return up to N matching results,
                or will run until capture time T is reached. Discovery will
                gather the list of files to turn into streaming tasks, without
                running the data collection job. Full Run will run the
                collection job.
              default: list
              enum:
                - run
            timeRangeType:
              type: string
              title: Time range
              description: Time range for scheduled job.
              default: relative
            earliest:
              type: integer
              title: Earliest
              description: Earliest time, for the given Range Timezone.
            latest:
              type: integer
              title: Latest
              description: Latest time, for the given Range Timezone.
            timestampTimezone:
              type: string
              title: Range Timezone
              description: Timezone to use for Earliest and Latest times (defaults to UTC).
              default: UTC
            expression:
              type: string
              title: Filter
              description: A filter for tokens in the provided collect path and/or the events
                being collected
              default: "true"
            minTaskSize:
              type: string
              title: Lower task bundle size
              description: Limits the bundle size for small tasks. E.g., bundle five 200KB
                files into one 1M task.
              default: 1MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
            maxTaskSize:
              type: string
              title: Upper task bundle size
              description: Limits the bundle size for files above the Lower task bundle size.
                E.g., bundle five 2MB files into one 10MB task bundle. Files
                greater than this size will be assigned to individual tasks.
              default: 10MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
            discoverToRoutes:
              type: boolean
              title: Send to Routes
              description: If true, send discover results to routes
              default: false
            capture:
              type: object
              title: Capture Settings
              properties:
                maxEvents:
                  type: integer
                  title: Capture Up to N Events
                  description: Maximum number of events to capture.
                  minimum: 1
                  maximum: 10000
                  default: 100
                level:
                  type: string
                  title: Where to capture
                  enum:
                    - "0"
                    - "1"
                    - "2"
                    - "3"
                  default: "0"
      type: object
    RunnableJobExecutor:
      required:
        - executor
        - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Unique ID for this Job.
        type:
          type: string
          title: Job type
          description: Job type.
          enum:
            - collection
            - executor
            - scheduledSearch
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        removeFields:
          type: array
          title: Remove Discover fields
          description: "List of fields to remove from Discover results. Wildcards (e.g.:
            aws*) are allowed. This is useful when discovery returns sensitive
            fields that should not be exposed in the Jobs user interface."
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results.
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resumes the ad hoc job if a failure condition causes Stream to
            restart during job execution.
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job.
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Determines whether or not this schedule is enabled.
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job.
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: integer
              title: Max concurrent runs
              description: The maximum number of instances that may be running of this
                scheduled job at any given time.
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits.
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              required:
                - modes
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors.
                  default: true
                maxTaskReschedule:
                  type: integer
                  title: Max task reschedule
                  description: Max number of times a task can be rescheduled.
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log Level
                  description: Level at which to set task logging.
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                    Units are seconds, if not specified. Enter 0 for unlimited
                    time.
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  description: Time range for scheduled job.
                  default: relative
                earliest:
                  type: integer
                  title: Earliest
                  description: Earliest time, for the given Range Timezone.
                latest:
                  type: integer
                  title: Latest
                  description: Latest time, for the given Range Timezone.
                timestampTimezone:
                  type: string
                  title: Range Timezone
                  description: Timezone to use for Earliest and Latest times (defaults to UTC).
                  default: UTC
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: Limits the bundle size for small tasks. E.g., bundle five 200KB
                    files into one 1M task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: Limits the bundle size for files above the Lower task bundle size.
                    E.g., bundle five 2MB files into one 10MB task bundle.
                    Files greater than this size will be assigned to
                    individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        executor:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Executor type
              description: The type of executor to run.
            storeTaskResults:
              type: boolean
              title: Store task results
              description: Determines whether or not to write task results to disk.
              default: true
            conf:
              type: object
              title: Executor-specific settings.
              properties: {}
        run:
          type: object
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors.
              default: true
            maxTaskReschedule:
              type: integer
              title: Max task reschedule
              description: Max number of times a task can be rescheduled.
              default: 1
              minimum: 1
            logLevel:
              type: string
              title: Log Level
              description: Level at which to set task logging.
              enum:
                - error
                - warn
                - info
                - debug
                - silly
              default: info
            jobTimeout:
              title: Job timeout
              type: string
              description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                Units are seconds, if not specified. Enter 0 for unlimited time.
              pattern: \d+[sm]?$
              default: "0"
      type: object
    RunnableJobScheduledSearch:
      required:
        - savedQueryId
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_\-]+$
          description: Unique ID for this Job.
        type:
          type: string
          title: Job type
          description: Job type.
          enum:
            - collection
            - executor
            - scheduledSearch
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        removeFields:
          type: array
          title: Remove Discover fields
          description: "List of fields to remove from Discover results. Wildcards (e.g.:
            aws*) are allowed. This is useful when discovery returns sensitive
            fields that should not be exposed in the Jobs user interface."
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results.
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resumes the ad hoc job if a failure condition causes Stream to
            restart during job execution.
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job.
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Determines whether or not this schedule is enabled.
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job.
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: integer
              title: Max concurrent runs
              description: The maximum number of instances that may be running of this
                scheduled job at any given time.
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits.
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              required:
                - modes
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors.
                  default: true
                maxTaskReschedule:
                  type: integer
                  title: Max task reschedule
                  description: Max number of times a task can be rescheduled.
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log Level
                  description: Level at which to set task logging.
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
                    Units are seconds, if not specified. Enter 0 for unlimited
                    time.
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  description: Time range for scheduled job.
                  default: relative
                earliest:
                  type: integer
                  title: Earliest
                  description: Earliest time, for the given Range Timezone.
                latest:
                  type: integer
                  title: Latest
                  description: Latest time, for the given Range Timezone.
                timestampTimezone:
                  type: string
                  title: Range Timezone
                  description: Timezone to use for Earliest and Latest times (defaults to UTC).
                  default: UTC
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: Limits the bundle size for small tasks. E.g., bundle five 200KB
                    files into one 1M task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: Limits the bundle size for files above the Lower task bundle size.
                    E.g., bundle five 2MB files into one 10MB task bundle.
                    Files greater than this size will be assigned to
                    individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Add tags for filtering and grouping in @{product}.
          default: []
          items:
            type: string
        savedQueryId:
          type: string
          title: ID of the SavedQuery
          description: Identifies which search query to run
      type: object
    RunnableJob:
      oneOf:
        - $ref: "#/components/schemas/RunnableJobCollection"
        - $ref: "#/components/schemas/RunnableJobExecutor"
        - $ref: "#/components/schemas/RunnableJobScheduledSearch"
    State:
      type: string
      enum:
        - prime
        - start
        - opName
        - paramList
        - paramVal
        - string
        - "@string"
        - quotedIdentifier
        - kusto
      properties: {}
    JobStatus:
      type: object
      properties:
        reason:
          type: object
          additionalProperties: true
        state:
          $ref: "#/components/schemas/State"
      required:
        - state
    JobInfo:
      type: object
      properties:
        args:
          $ref: "#/components/schemas/RunnableJob"
        id:
          type: string
        keep:
          type: boolean
        status:
          $ref: "#/components/schemas/JobStatus"
      required:
        - args
        - id
        - status
    VaultKMSEngineConfig:
      type: object
      properties:
        mount:
          type: string
        secretPath:
          type: string
        type:
          type: string
          enum:
            - kv2
      required:
        - type
    SECRET_PROVIDER:
      type: string
      enum:
        - local
        - vault
        - aws-kms
    IAWSKMSServiceConfig:
      type: object
      properties:
        kmsKeyArn:
          type: string
        region:
          type: string
      required:
        - kmsKeyArn
        - region
    IKMSProviderConfig:
      type: object
      properties:
        enableHealthCheck:
          type: boolean
        engine:
          $ref: "#/components/schemas/VaultKMSEngineConfig"
        healthCheckEndpoint:
          type: string
        namespace:
          type: string
        provider:
          $ref: "#/components/schemas/SECRET_PROVIDER"
        secretDir:
          type: string
        service:
          $ref: "#/components/schemas/IAWSKMSServiceConfig"
        url:
          type: string
      required:
        - enableHealthCheck
        - provider
    KMSHealthStatus:
      type: object
      properties: {}
    IKMSHealthTest:
      type: object
      properties:
        details:
          type: object
          additionalProperties: true
        status:
          $ref: "#/components/schemas/KMSHealthStatus"
      required:
        - status
    IKMSHealth:
      type: object
      properties:
        auth:
          $ref: "#/components/schemas/IKMSHealthTest"
        connection:
          $ref: "#/components/schemas/IKMSHealthTest"
        system:
          $ref: "#/components/schemas/IKMSHealthTest"
      required:
        - auth
        - connection
        - system
    License:
      type: object
      properties:
        cls:
          type: string
          enum:
            - prod
            - trial
            - free
        email:
          type: string
        exp:
          type: integer
        f_ph:
          type: integer
        f_phg:
          type: integer
        guid:
          type: string
        iat:
          type: integer
        id:
          type: string
        iss:
          type: string
        license:
          type: string
        limits:
          type: object
          additionalProperties: true
        quota:
          type: integer
        title:
          type: string
      required:
        - cls
        - email
        - exp
        - f_ph
        - f_phg
        - guid
        - iat
        - id
        - iss
        - license
        - quota
        - title
    DailyUsageMetrics:
      type: object
      properties:
        endTime:
          type: integer
        exemptedLicenseInBytes:
          type: integer
        inBytes:
          type: integer
        inEvents:
          type: integer
        outBytes:
          type: integer
        outEvents:
          type: integer
        startTime:
          type: integer
      required:
        - endTime
        - exemptedLicenseInBytes
        - inBytes
        - inEvents
        - outBytes
        - outEvents
        - startTime
    LoggerEntry:
      type: object
      properties:
        canDelete:
          type: boolean
        id:
          type: string
        level:
          type: string
      required:
        - id
        - level
    LoggerConfig:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: "#/components/schemas/LoggerEntry"
        defaultRedactFields:
          type: array
          items:
            type: string
        id:
          type: string
        redactFields:
          type: array
          items:
            type: string
        redactLabel:
          type: string
      required:
        - channels
        - id
        - redactFields
        - redactLabel
    LogFileInfo:
      type: object
      properties:
        id:
          type: string
        path:
          type: string
      required:
        - id
        - path
    DistributedSummary:
      type: object
      properties:
        groups:
          type: object
          properties:
            count:
              type: integer
            destinations:
              type: integer
            pipelines:
              type: integer
            routes:
              type: integer
            sources:
              type: integer
          required:
            - count
            - destinations
            - pipelines
            - routes
            - sources
        workers:
          type: object
          properties:
            alive:
              type: integer
            confVersions:
              type: integer
            count:
              type: integer
            groups:
              type: integer
            softwareVersions:
              type: integer
            unhealthy:
              type: integer
          required:
            - alive
            - confVersions
            - count
            - groups
            - softwareVersions
            - unhealthy
      required:
        - groups
        - workers
    AppMode:
      type: string
      enum:
        - single
        - master
        - worker
        - edge
        - managed-edge
    MasterWorkerEntry:
      type: object
      properties:
        deployable:
          type: boolean
        firstMsgTime:
          type: integer
        group:
          type: string
        id:
          type: string
        info:
          type: object
          properties:
            conn_ip:
              type: string
            cpus:
              type: integer
            cribl:
              type: object
              properties:
                config:
                  type: object
                distMode:
                  $ref: "#/components/schemas/AppMode"
                group:
                  type: string
                guid:
                  type: string
                master:
                  type: object
                  properties:
                    host:
                      type: string
                    port:
                      type: integer
                  required:
                    - host
                    - port
                pid:
                  type: integer
                startTime:
                  type: integer
                tags:
                  type: array
                  items:
                    type: string
                version:
                  type: string
              required:
                - config
                - distMode
                - group
                - guid
                - startTime
                - tags
                - version
            env:
              type: object
            freeDiskSpace:
              type: integer
            hostname:
              type: string
            node:
              type: string
            platform:
              type: string
            release:
              type: string
            totalDiskSpace:
              type: integer
            totalmem:
              type: integer
          required:
            - conn_ip
            - cpus
            - cribl
            - env
            - freeDiskSpace
            - hostname
            - node
            - platform
            - release
            - totalDiskSpace
            - totalmem
        lastMsgTime:
          type: integer
        status:
          type: string
        type:
          type: string
        workerProcesses:
          type: integer
      required:
        - firstMsgTime
        - group
        - id
        - info
        - lastMsgTime
        - workerProcesses
    RestartResponse:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        status:
          type: string
          enum:
            - Restarting
            - Error
      required:
        - id
        - status
    PackInfo:
      type: object
      properties:
        author:
          type: string
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
        isDisabled:
          type: boolean
        minLogStreamVersion:
          type: string
        settings:
          type: object
          additionalProperties: true
        source:
          type: string
        spec:
          type: string
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
            domain:
              type: array
              items:
                type: string
            streamtags:
              type: array
              items:
                type: string
            technology:
              type: array
              items:
                type: string
          required:
            - dataType
            - domain
            - streamtags
            - technology
        version:
          type: string
      required:
        - id
        - source
    PackClone:
      type: object
      properties:
        dest:
          type: string
        dstGroups:
          type: array
          items:
            type: string
        force:
          type: boolean
        packs:
          type: array
          items:
            type: string
        srcGroup:
          type: string
      required:
        - dstGroups
        - packs
        - srcGroup
    PreviewDataParams:
      type: object
      properties:
        cpuProfile:
          type: boolean
        dropped:
          type: boolean
        events:
          type: array
          items:
            type: object
            additionalProperties: true
        inputId:
          type: string
        level:
          type: integer
        memory:
          type: integer
        mode:
          type: string
          enum:
            - pipe
            - route
            - routeAndSend
        pipelineId:
          type: string
        sampleId:
          type: string
        samplePipelineId:
          type: string
        timeout:
          type: integer
      required:
        - mode
        - pipelineId
        - sampleId
    ProcessEntry:
      type: object
      properties:
        env:
          type: object
          additionalProperties: true
        id:
          type: string
        pid:
          type: integer
        restartOnExit:
          type: boolean
        restarts:
          type: integer
        startTime:
          type: integer
        type:
          type: string
      required:
        - id
        - restartOnExit
        - restarts
        - startTime
        - type
    PreviewOptions:
      type: object
      properties: {}
    PreviewRequestBody:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/SearchEvent"
        options:
          $ref: "#/components/schemas/PreviewOptions"
        query:
          type: string
      required:
        - events
        - query
    LicenseType:
      type: string
      enum:
        - prod
        - trial
        - free
    LicenseInfo:
      type: object
      properties:
        effectiveClass:
          $ref: "#/components/schemas/LicenseType"
        email:
          type: string
        expiration:
          type: integer
        guid:
          type: string
        isRunningInSaaS:
          type: boolean
        isSplunkApp:
          type: boolean
        licenseEnforceReason:
          type: string
        limits:
          type: object
          additionalProperties: true
        phoneHome:
          type: boolean
        phoneHomeGrace:
          type: integer
        quota:
          type: integer
        type:
          type: string
          enum:
            - prod
            - trial
            - free
      required:
        - effectiveClass
        - expiration
        - guid
        - isRunningInSaaS
        - licenseEnforceReason
        - limits
        - phoneHome
        - phoneHomeGrace
        - quota
        - type
    SystemConf:
      type: object
      properties:
        installType:
          type: string
        restart:
          type: string
        upgrade:
          type: string
      required:
        - installType
        - restart
        - upgrade
    SystemInfo:
      type: object
      properties:
        BUILD:
          type: object
          additionalProperties: true
        apiPort:
          type: integer
        conf:
          type: object
          properties:
            confVersion:
              type: string
            inputs:
              type: integer
            outputs:
              type: integer
            pipelines:
              type: integer
            routes:
              type: integer
            rules:
              type: integer
          required:
            - inputs
            - outputs
            - pipelines
            - routes
            - rules
        configPath:
          type: string
        cpus:
          type: array
          items:
            type: object
            properties:
              model:
                type: string
              speed:
                type: integer
              times:
                type: object
                additionalProperties: true
            required:
              - model
              - speed
              - times
        diskUsage:
          type: object
          properties:
            bytesAvailable:
              type: integer
            bytesUsed:
              type: integer
            diskPath:
              type: string
            totalDiskSize:
              type: integer
          required:
            - bytesAvailable
            - bytesUsed
            - diskPath
            - totalDiskSize
        distMode:
          $ref: "#/components/schemas/AppMode"
        env:
          type: object
        guid:
          type: string
        hostname:
          type: string
        installPath:
          type: string
        license:
          $ref: "#/components/schemas/LicenseInfo"
        limits:
          type: object
          properties:
            samples:
              type: object
              properties:
                maxSize:
                  type: string
              required:
                - maxSize
          required:
            - samples
        loadavg:
          type: array
          items:
            type: integer
        memory:
          type: object
          properties:
            free:
              type: integer
            total:
              type: integer
          required:
            - free
            - total
        messages:
          type: array
          items:
            $ref: "#/components/schemas/BulletinMessage"
        net:
          type: object
          additionalProperties: true
        os:
          type: object
          properties:
            arch:
              type: string
            endianness:
              type: string
            platform:
              type: string
            release:
              type: string
            type:
              type: string
          required:
            - arch
            - endianness
            - platform
            - release
            - type
        systemConf:
          $ref: "#/components/schemas/SystemConf"
        uptime:
          type: integer
        version:
          type: string
        workerProcesses:
          type: integer
      required:
        - BUILD
        - apiPort
        - conf
        - configPath
        - cpus
        - diskUsage
        - distMode
        - env
        - guid
        - hostname
        - installPath
        - license
        - limits
        - loadavg
        - memory
        - messages
        - net
        - os
        - systemConf
        - uptime
        - version
        - workerProcesses
    Diag:
      type: object
      properties:
        id:
          type: string
        modTime:
          type: integer
        path:
          type: string
        size:
          type: integer
      required:
        - id
        - path
    SendDiagBundle:
      type: object
      properties:
        sendToCribl:
          title: Send to Cribl Support
          description: Send diag bundle to Cribl Support
          type: boolean
          default: false
        path:
          type: string
          title: Diag Bundle File Path
          description: Existing diag bundle that will be send to Cribl Support. Max 100MB.
        renameJs:
          title: Rename .js files
          description: Append .txt to JavaScript files.
          type: boolean
          default: true
        includeMetrics:
          title: Include metrics
          description: Toggle to No to exclude metrics from the diag bundle.
          type: boolean
          default: true
        maxIncludeJobs:
          title: Latest number of jobs
          description: Number of jobs including all tasks that will be included in the
            bundle.
          type: integer
          minimum: 0
    MetricNameInfo:
      type: object
      properties:
        dims:
          type: array
          items:
            type: object
            properties:
              count:
                type: integer
              name:
                type: string
              values:
                type: array
                items:
                  type: string
            required:
              - count
              - name
              - values
        name:
          type: string
      required:
        - dims
        - name
    Filter: {}
    TraverseCallback:
      type: object
    PartialEvalFieldFilter:
      type: object
    PartialEvalRewrite:
      type: object
      properties:
        fieldFilter:
          $ref: "#/components/schemas/PartialEvalFieldFilter"
        nullObj:
          type: string
      required:
        - fieldFilter
        - nullObj
    ExpressionOptions:
      type: object
      properties:
        allowInternal:
          type: boolean
        args:
          type: array
          items:
            type: string
        astTraverseCallback:
          $ref: "#/components/schemas/TraverseCallback"
        context:
          type: string
        disallowAssign:
          type: boolean
        maxNumOfAllowedIterations:
          type: integer
        partialEval:
          $ref: "#/components/schemas/PartialEvalRewrite"
        replaceIdentifiers:
          type: boolean
        replaceLiterals:
          type: boolean
        unprotected:
          type: boolean
    Map:
      type: object
      properties:
        op:
          type: object
      required:
        - op
    Expression:
      type: object
      properties:
        declaredVariables:
          type: array
          items:
            type: string
        isSafe:
          type: boolean
        modifiedExpression:
          type: string
        opt:
          $ref: "#/components/schemas/ExpressionOptions"
        originalExpression:
          type: string
        partialExpression:
          type: string
        referencedCriblExport:
          type: boolean
        replaceIdentifiersExpression:
          type: string
        replaceLiteralExpression:
          type: string
        MAX_CACHE:
          type: integer
        cache:
          $ref: "#/components/schemas/Map"
      required:
        - declaredVariables
        - isSafe
        - modifiedExpression
        - opt
        - originalExpression
        - partialExpression
        - referencedCriblExport
        - replaceIdentifiersExpression
        - replaceLiteralExpression
        - MAX_CACHE
        - cache
    GetNamesOpts:
      type: object
      properties:
        dimKeyFilter:
          $ref: "#/components/schemas/Filter"
        dimValueFilter:
          $ref: "#/components/schemas/Filter"
        earliest:
          type: integer
        filterExpr:
          $ref: "#/components/schemas/Expression"
        maxValues:
          type: integer
        metricNameFilter:
          $ref: "#/components/schemas/Filter"
    SearchAggMode: {}
    AggregationMgrOptions:
      type: object
      properties:
        aggregations:
          type: array
          items:
            type: string
        cumulative:
          type: boolean
        flushEventLimit:
          type: integer
        flushMemLimit:
          type: integer
        hostname:
          type: string
        idleTimeLimitSeconds:
          type: integer
        lagToleranceSeconds:
          type: integer
        metricsMode:
          type: boolean
        prefix:
          type: string
        preserveSplitByStructure:
          type: boolean
        searchAggMode:
          $ref: "#/components/schemas/SearchAggMode"
        splitBys:
          type: array
          items:
            type: string
        sufficientStatsOnly:
          type: boolean
        timeWindowSeconds:
          type: integer
      required:
        - aggregations
        - cumulative
        - flushEventLimit
        - flushMemLimit
        - hostname
        - metricsMode
        - sufficientStatsOnly
        - timeWindowSeconds
    MetricsStore:
      type: object
      properties: {}
    MetricsAggOpts:
      type: object
      properties:
        aggs:
          $ref: "#/components/schemas/AggregationMgrOptions"
        alwaysBounds:
          type: boolean
        metrics:
          $ref: "#/components/schemas/MetricsStore"
        where:
          type: string
      required:
        - aggs
    AuthConfig:
      type: object
      properties:
        canChangePassword:
          type: boolean
        fallback:
          type: boolean
        fallbackBadLogin:
          type: boolean
        filter_type:
          type: string
        host:
          type: string
        port:
          type: integer
        ssl:
          type: boolean
        type:
          type: string
          enum:
            - splunk
            - local
            - ldap
            - openid
            - saml
      required:
        - fallback
        - fallbackBadLogin
        - host
        - port
        - ssl
        - type
    GitOpsType:
      type: string
      enum:
        - none
        - pull
        - push
    GitSettings:
      type: object
      properties:
        authType:
          type: string
        autoAction:
          type: string
        autoActionMessage:
          type: string
        autoActionSchedule:
          type: string
        branch:
          type: string
        commitDeploySingleAction:
          type: boolean
        defaultCommitMessage:
          type: string
        gitOps:
          $ref: "#/components/schemas/GitOpsType"
        password:
          type: string
        remote:
          type: string
        sshKey:
          type: string
        strictHostKeyChecking:
          type: boolean
        timeout:
          type: integer
        user:
          type: string
    JobSettings:
      type: object
      properties:
        concurrentJobLimit:
          type: integer
        concurrentScheduledJobLimit:
          type: integer
        concurrentSystemJobLimit:
          type: integer
        concurrentSystemTaskLimit:
          type: integer
        concurrentTaskLimit:
          type: integer
        finishedJobArtifactsLimit:
          type: integer
        finishedTaskArtifactsLimit:
          type: integer
        jobArtifactsReaperPeriod:
          type: string
        jobTimeout:
          type: string
        maxTaskPerc:
          type: integer
        schedulingPolicy:
          type: string
        taskHeartbeatPeriod:
          type: integer
        taskManifestFlushPeriodMs:
          type: integer
        taskManifestMaxBufferSize:
          type: integer
        taskManifestReadBufferSize:
          type: string
        taskPollTimeoutMs:
          type: integer
      required:
        - concurrentJobLimit
        - concurrentScheduledJobLimit
        - concurrentSystemJobLimit
        - concurrentSystemTaskLimit
        - concurrentTaskLimit
        - finishedJobArtifactsLimit
        - finishedTaskArtifactsLimit
        - jobArtifactsReaperPeriod
        - jobTimeout
        - maxTaskPerc
        - schedulingPolicy
        - taskHeartbeatPeriod
        - taskManifestFlushPeriodMs
        - taskManifestMaxBufferSize
        - taskManifestReadBufferSize
        - taskPollTimeoutMs
    EdgeHeartbeatMetricsMode:
      type: string
      enum:
        - minimal
        - basic
        - all
        - custom
    Limits:
      type: object
      properties:
        cpuProfileTTL:
          type: string
        edgeMetricsCustomExpression:
          type: string
        edgeMetricsMode:
          $ref: "#/components/schemas/EdgeHeartbeatMetricsMode"
        enableMetricsPersistence:
          type: boolean
        eventsMetadataSources:
          type: array
          items:
            type: string
        id:
          type: string
        metricsDirectory:
          type: string
        metricsFieldsBlacklist:
          type: array
          items:
            type: string
        metricsGCPeriod:
          type: string
        metricsMaxCardinality:
          type: integer
        metricsMaxDiskSpace:
          type: string
        metricsNeverDropList:
          type: array
          items:
            type: string
        metricsWorkerIdBlacklist:
          type: array
          items:
            type: string
        minFreeSpace:
          type: string
        samples:
          type: object
          properties:
            maxSize:
              type: string
          required:
            - maxSize
      required:
        - cpuProfileTTL
        - enableMetricsPersistence
        - id
        - metricsDirectory
        - metricsFieldsBlacklist
        - metricsGCPeriod
        - metricsNeverDropList
        - metricsWorkerIdBlacklist
        - minFreeSpace
        - samples
    RedisCacheLimits:
      type: object
      properties:
        clientTrackingMechanism:
          type: string
        enableServerAssist:
          type: boolean
        id:
          type: string
        keyTTLSecs:
          type: integer
        maxCacheSize:
          type: integer
        maxNumKeys:
          type: integer
        servicePeriodSecs:
          type: integer
      required:
        - id
    SearchLimitTimeLength: {}
    SearchSettings:
      type: object
      properties:
        fieldSummaryMaxFields:
          type: integer
        fieldSummaryMaxNestedDepth:
          type: integer
        maxExecutorsPerSearch:
          type: integer
        maxResultsPerSearch:
          type: integer
        maxSearchDuration:
          $ref: "#/components/schemas/SearchLimitTimeLength"
        searchHistoryMaxJobs:
          type: integer
        searchHistoryTTL:
          $ref: "#/components/schemas/SearchLimitTimeLength"
      required:
        - fieldSummaryMaxFields
        - fieldSummaryMaxNestedDepth
        - maxExecutorsPerSearch
        - maxResultsPerSearch
        - maxSearchDuration
        - searchHistoryMaxJobs
        - searchHistoryTTL
    CommonServiceLimitConfigs:
      type: object
      properties:
        memoryLimit:
          type: string
      required:
        - memoryLimit
    ServicesLimits:
      type: object
      properties:
        connections:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
        id:
          type: string
        metrics:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
        notifications:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
      required:
        - connections
        - id
        - metrics
        - notifications
    UpgradeGroupSettings:
      type: object
      properties:
        isRolling:
          type: boolean
        quantity:
          type: integer
        retryCount:
          type: integer
        retryDelay:
          type: integer
    UpgradePackageUrls:
      type: object
      properties:
        packageHashUrl:
          type: string
        packageUrl:
          type: string
      required:
        - packageUrl
    UpgradeSettings:
      type: object
      properties:
        automaticUpgradeCheckPeriod:
          type: string
        disableAutomaticUpgrade:
          type: boolean
        packageUrls:
          type: array
          items:
            $ref: "#/components/schemas/UpgradePackageUrls"
        upgradeSource:
          type: string
      required:
        - disableAutomaticUpgrade
        - upgradeSource
    SystemSettings:
      type: object
      properties:
        api:
          type: object
          properties:
            baseUrl:
              type: string
            disableApiCache:
              type: boolean
            disabled:
              type: boolean
            headers:
              type: object
            host:
              type: string
            idleSessionTTL:
              type: string
            loginRateLimit:
              type: integer
            port:
              type: integer
            ssl:
              type: object
              properties:
                caPath:
                  type: string
                certPath:
                  type: string
                disabled:
                  type: boolean
                passphrase:
                  type: string
                privKeyPath:
                  type: string
              required:
                - certPath
                - disabled
                - passphrase
                - privKeyPath
            ssoRateLimit:
              type: string
            workerRemoteAccess:
              type: boolean
          required:
            - disabled
            - host
            - port
            - ssl
            - workerRemoteAccess
        auth:
          $ref: "#/components/schemas/AuthConfig"
        backups:
          type: object
          properties:
            backupPersistence:
              type: string
            backupsDirectory:
              type: string
          required:
            - backupPersistence
            - backupsDirectory
        customLogo:
          type: object
          properties:
            enabled:
              type: boolean
            logoDescription:
              type: string
            logoImage:
              type: string
          required:
            - enabled
            - logoDescription
            - logoImage
        distributed:
          type: object
          properties:
            mode:
              $ref: "#/components/schemas/AppMode"
          required:
            - mode
        git:
          $ref: "#/components/schemas/GitSettings"
        jobLimits:
          $ref: "#/components/schemas/JobSettings"
        limits:
          $ref: "#/components/schemas/Limits"
        proxy:
          type: object
          properties:
            useEnvVars:
              type: boolean
          required:
            - useEnvVars
        redisCacheLimits:
          $ref: "#/components/schemas/RedisCacheLimits"
        rollback:
          type: object
          properties:
            rollbackEnabled:
              type: boolean
            rollbackRetries:
              type: integer
            rollbackTimeout:
              type: integer
          required:
            - rollbackEnabled
        searchLimits:
          $ref: "#/components/schemas/SearchSettings"
        servicesLimits:
          $ref: "#/components/schemas/ServicesLimits"
        shutdown:
          type: object
          properties:
            drainTimeout:
              type: integer
          required:
            - drainTimeout
        system:
          type: object
          properties:
            intercom:
              type: boolean
          required:
            - intercom
        tls:
          type: object
          properties:
            defaultCipherList:
              type: string
            defaultEcdhCurve:
              type: string
            maxVersion:
              type: string
            minVersion:
              type: string
            rejectUnauthorized:
              type: boolean
          required:
            - defaultCipherList
            - defaultEcdhCurve
            - maxVersion
            - minVersion
            - rejectUnauthorized
        upgradeGroupSettings:
          $ref: "#/components/schemas/UpgradeGroupSettings"
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
        workers:
          type: object
          properties:
            count:
              type: integer
            loadThrottlePerc:
              type: integer
            memory:
              type: integer
            minimum:
              type: integer
            startupMaxConns:
              type: integer
            startupThrottleTimeout:
              type: integer
            v8SingleThread:
              type: boolean
          required:
            - count
            - memory
            - minimum
      required:
        - api
        - auth
        - backups
        - customLogo
        - distributed
        - git
        - jobLimits
        - limits
        - proxy
        - redisCacheLimits
        - rollback
        - searchLimits
        - servicesLimits
        - shutdown
        - system
        - tls
        - upgradeGroupSettings
        - upgradeSettings
        - workers
    VersionInfo:
      type: object
      properties:
        architecture:
          type: string
        build:
          type: string
        downloadUrl:
          type: string
        fullVersion:
          type: string
        major:
          type: integer
        minor:
          type: integer
        platform:
          type: string
        point:
          type: integer
        preRelease:
          type: string
      required:
        - build
        - fullVersion
        - major
        - minor
    UpgradeResult:
      type: object
      properties:
        availableVersions:
          type: array
          items:
            $ref: "#/components/schemas/VersionInfo"
        canUpgrade:
          type: boolean
        installedVersion:
          $ref: "#/components/schemas/VersionInfo"
        isSuccess:
          type: boolean
        message:
          type: string
        upgradedToVersion:
          $ref: "#/components/schemas/VersionInfo"
      required:
        - availableVersions
        - canUpgrade
        - installedVersion
        - isSuccess
        - message
        - upgradedToVersion
    UpgradeMasterRequest:
      type: object
      properties:
        packages:
          title: Custom Path
          description: Provide your own URLs or local paths for platform-specific Cribl
            packages.
          type: array
          maxItems: 2
          items:
            type: object
            required:
              - packageUrl
            properties:
              packageUrl:
                type: string
                title: Platform-specific package location
                description: Package HTTP URL or local path.
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([a-zA-Z0-9]*)-?([a-z0-9]{8})?-?(linux|darwin|win32)?-?([0-9a-zA-Z]+)?
                minLength: 1
              packageHashUrl:
                type: string
                title: Package hash location
                description: Package's MD5 or SHA256 hash HTTP URL or local path.
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([a-zA-Z0-9]*)-?([a-z0-9]{8})?-?(linux|darwin|win32)?-?([0-9a-zA-Z]+)?(\.tgz)?\.(md5|sha256)
                minLength: 1
    IAMTrustPolicy:
      type: object
      properties:
        Statement:
          type: array
          items:
            type: object
            properties:
              Action:
                type: array
                items:
                  type: string
              Condition:
                type: object
                properties:
                  StringEquals:
                    type: object
              Effect:
                type: string
              Principal:
                type: object
                properties:
                  AWS:
                    type: string
                required:
                  - AWS
            required:
              - Action
              - Effect
              - Principal
        Version:
          type: string
      required:
        - Statement
        - Version
    TrustPolicy:
      type: object
      properties:
        id:
          type: string
        policy:
          $ref: "#/components/schemas/IAMTrustPolicy"
      required:
        - id
        - policy
    UiStatePatch:
      type: object
      required:
        - op
        - value
      properties:
        op:
          type: string
          enum:
            - set
            - push-recent
        value: {}
        args:
          type: object
          additionalProperties: true
    GitFileStatus: {}
    GitCommitSummary:
      type: object
      properties:
        author:
          type: object
          properties:
            email:
              type: string
            name:
              type: string
          required:
            - email
            - name
        branch:
          type: string
        commit:
          type: string
        files:
          $ref: "#/components/schemas/GitFileStatus"
        summary:
          type: object
          properties:
            changes:
              type: integer
            deletions:
              type: integer
            insertions:
              type: integer
          required:
            - changes
            - deletions
            - insertions
      required:
        - author
        - branch
        - commit
        - files
        - summary
    GitCommitParams:
      type: object
      properties:
        effective:
          type: boolean
        group:
          type: string
        message:
          type: string
      required:
        - message
    GitFile:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
        name:
          type: string
        state:
          type: string
      required:
        - name
    GitFilesResponse:
      type: object
      properties:
        commitMessage:
          type: object
          additionalProperties: true
        count:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
      required:
        - commitMessage
        - count
        - items
    GitInfo:
      type: object
      properties:
        versioning:
          type: boolean
      required:
        - versioning
    GitStatusResult:
      type: object
      properties:
        ahead:
          type: integer
        behind:
          type: integer
        conflicted:
          type: array
          items:
            type: string
        created:
          type: array
          items:
            type: string
        current:
          type: string
        deleted:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            type: object
            properties:
              index:
                type: string
              path:
                type: string
              working_dir:
                type: string
            required:
              - index
              - path
              - working_dir
        modified:
          type: array
          items:
            type: string
        not_added:
          type: array
          items:
            type: string
        renamed:
          type: array
          items:
            type: object
            properties:
              from:
                type: string
              to:
                type: string
            required:
              - from
              - to
        staged:
          type: array
          items:
            type: string
        tracking:
          type: string
      required:
        - ahead
        - behind
        - conflicted
        - created
        - current
        - deleted
        - files
        - modified
        - not_added
        - renamed
        - staged
        - tracking
    ContainerdMount:
      type: object
      properties:
        destination:
          type: string
        source:
          type: string
      required:
        - destination
        - source
    ContainerdRoot:
      type: object
      properties:
        path:
          type: string
      required:
        - path
    ContainerdContainer:
      type: object
      properties:
        mounts:
          type: array
          items:
            $ref: "#/components/schemas/ContainerdMount"
        root:
          $ref: "#/components/schemas/ContainerdRoot"
      required:
        - mounts
        - root
    ContainerdTask:
      type: object
      properties:
        process:
          type: object
          additionalProperties: true
    ContainerdInfo:
      type: object
      properties:
        container:
          $ref: "#/components/schemas/ContainerdContainer"
        image:
          type: object
          additionalProperties: true
        metrics:
          type: object
          additionalProperties: true
        namespace:
          type: object
          additionalProperties: true
        task:
          $ref: "#/components/schemas/ContainerdTask"
      required:
        - container
    DockerGraphDriverData:
      type: object
      properties:
        MergedDir:
          type: string
      required:
        - MergedDir
    DockerGraphDriver:
      type: object
      properties:
        Data:
          $ref: "#/components/schemas/DockerGraphDriverData"
    DockerMount:
      type: object
      properties:
        Destination:
          type: string
        Source:
          type: string
      required:
        - Destination
        - Source
    DockerInfo:
      type: object
      properties:
        Config:
          type: object
          additionalProperties: true
        GraphDriver:
          $ref: "#/components/schemas/DockerGraphDriver"
        LogPath:
          type: string
        Mounts:
          type: array
          items:
            $ref: "#/components/schemas/DockerMount"
        NetworkSettings:
          type: object
          additionalProperties: true
        Path:
          type: string
        State:
          type: object
          additionalProperties: true
        Stats:
          type: object
          additionalProperties: true
    ContainerPort:
      type: object
      properties:
        privatePort:
          type: integer
        publicPort:
          type: integer
      required:
        - privatePort
        - publicPort
    Container:
      type: object
      properties:
        containerd:
          $ref: "#/components/schemas/ContainerdInfo"
        created:
          type: integer
        docker:
          $ref: "#/components/schemas/DockerInfo"
        id:
          type: string
        image:
          type: string
        ips:
          type: array
          items:
            type: string
        name:
          type: string
        ports:
          type: array
          items:
            $ref: "#/components/schemas/ContainerPort"
        status:
          type: string
        type:
          type: string
          enum:
            - docker
            - containerd
      required:
        - created
        - id
        - image
        - name
        - status
        - type
    FileProcessInfo:
      type: object
      properties:
        pid:
          type: integer
        process:
          type: string
      required:
        - pid
        - process
    EdgeFile:
      type: object
      properties:
        filePath:
          type: string
        id:
          type: string
        modTime:
          type: integer
        mode:
          type: string
        owner:
          type: integer
        processInfo:
          type: array
          items:
            $ref: "#/components/schemas/FileProcessInfo"
        size:
          type: integer
      required:
        - filePath
        - id
        - modTime
        - mode
        - owner
        - size
    Process:
      type: object
      properties:
        id:
          type: string
        pid:
          type: integer
      required:
        - id
        - pid
    Collector:
      $ref: "#/components/schemas/Function"
    Executor:
      $ref: "#/components/schemas/Function"