// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuthConfigType string

const (
	AuthConfigTypeSplunk AuthConfigType = "splunk"
	AuthConfigTypeLocal  AuthConfigType = "local"
	AuthConfigTypeLdap   AuthConfigType = "ldap"
	AuthConfigTypeOpenid AuthConfigType = "openid"
	AuthConfigTypeSaml   AuthConfigType = "saml"
)

func (e AuthConfigType) ToPointer() *AuthConfigType {
	return &e
}

func (e *AuthConfigType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "splunk":
		fallthrough
	case "local":
		fallthrough
	case "ldap":
		fallthrough
	case "openid":
		fallthrough
	case "saml":
		*e = AuthConfigType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthConfigType: %v", v)
	}
}

type AuthConfig struct {
	CanChangePassword *bool          `json:"canChangePassword,omitempty"`
	Fallback          bool           `json:"fallback"`
	FallbackBadLogin  bool           `json:"fallbackBadLogin"`
	FilterType        *string        `json:"filter_type,omitempty"`
	Host              string         `json:"host"`
	Port              int64          `json:"port"`
	Ssl               bool           `json:"ssl"`
	Type              AuthConfigType `json:"type"`
}
