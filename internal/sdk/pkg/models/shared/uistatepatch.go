// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UIStatePatchOp string

const (
	UIStatePatchOpSet        UIStatePatchOp = "set"
	UIStatePatchOpPushRecent UIStatePatchOp = "push-recent"
)

func (e UIStatePatchOp) ToPointer() *UIStatePatchOp {
	return &e
}

func (e *UIStatePatchOp) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "set":
		fallthrough
	case "push-recent":
		*e = UIStatePatchOp(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UIStatePatchOp: %v", v)
	}
}

// UIStatePatch - UI State Patch object
type UIStatePatch struct {
	Args  map[string]interface{} `json:"args,omitempty"`
	Op    UIStatePatchOp         `json:"op"`
	Value interface{}            `json:"value"`
}
