// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type State string

const (
	StatePrime            State = "prime"
	StateStart            State = "start"
	StateOpName           State = "opName"
	StateParamList        State = "paramList"
	StateParamVal         State = "paramVal"
	StateString           State = "string"
	StateAtString         State = "@string"
	StateQuotedIdentifier State = "quotedIdentifier"
	StateKusto            State = "kusto"
)

func (e State) ToPointer() *State {
	return &e
}

func (e *State) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "prime":
		fallthrough
	case "start":
		fallthrough
	case "opName":
		fallthrough
	case "paramList":
		fallthrough
	case "paramVal":
		fallthrough
	case "string":
		fallthrough
	case "@string":
		fallthrough
	case "quotedIdentifier":
		fallthrough
	case "kusto":
		*e = State(v)
		return nil
	default:
		return fmt.Errorf("invalid value for State: %v", v)
	}
}
