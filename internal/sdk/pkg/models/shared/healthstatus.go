// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HealthStatusStatus string

const (
	HealthStatusStatusHealthy      HealthStatusStatus = "healthy"
	HealthStatusStatusShuttingDown HealthStatusStatus = "shutting down"
)

func (e HealthStatusStatus) ToPointer() *HealthStatusStatus {
	return &e
}

func (e *HealthStatusStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "healthy":
		fallthrough
	case "shutting down":
		*e = HealthStatusStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HealthStatusStatus: %v", v)
	}
}

// HealthStatus - Healthy
type HealthStatus struct {
	Status HealthStatusStatus `json:"status"`
}
