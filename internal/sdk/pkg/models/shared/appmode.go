// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppMode string

const (
	AppModeSingle      AppMode = "single"
	AppModeMaster      AppMode = "master"
	AppModeWorker      AppMode = "worker"
	AppModeEdge        AppMode = "edge"
	AppModeManagedEdge AppMode = "managed-edge"
)

func (e AppMode) ToPointer() *AppMode {
	return &e
}

func (e *AppMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "single":
		fallthrough
	case "master":
		fallthrough
	case "worker":
		fallthrough
	case "edge":
		fallthrough
	case "managed-edge":
		*e = AppMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppMode: %v", v)
	}
}
