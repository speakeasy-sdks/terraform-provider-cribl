// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppscopeTransportBuffer string

const (
	AppscopeTransportBufferLine AppscopeTransportBuffer = "line"
	AppscopeTransportBufferFull AppscopeTransportBuffer = "full"
)

func (e AppscopeTransportBuffer) ToPointer() *AppscopeTransportBuffer {
	return &e
}

func (e *AppscopeTransportBuffer) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "line":
		fallthrough
	case "full":
		*e = AppscopeTransportBuffer(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppscopeTransportBuffer: %v", v)
	}
}

type AppscopeTransportTLS struct {
	Cacertpath     *string `json:"cacertpath,omitempty"`
	Enable         *bool   `json:"enable,omitempty"`
	Validateserver *bool   `json:"validateserver,omitempty"`
}

type AppscopeTransport struct {
	Buffer *AppscopeTransportBuffer `json:"buffer,omitempty"`
	Host   *string                  `json:"host,omitempty"`
	Path   *string                  `json:"path,omitempty"`
	Port   *int64                   `json:"port,omitempty"`
	TLS    *AppscopeTransportTLS    `json:"tls,omitempty"`
	Type   *string                  `json:"type,omitempty"`
}
