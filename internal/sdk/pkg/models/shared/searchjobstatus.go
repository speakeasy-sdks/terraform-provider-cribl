// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SearchJobStatus - SearchJobStatus object
type SearchJobStatus string

const (
	SearchJobStatusNew       SearchJobStatus = "new"
	SearchJobStatusRunning   SearchJobStatus = "running"
	SearchJobStatusCompleted SearchJobStatus = "completed"
	SearchJobStatusFailed    SearchJobStatus = "failed"
	SearchJobStatusCanceled  SearchJobStatus = "canceled"
	SearchJobStatusQueued    SearchJobStatus = "queued"
)

func (e SearchJobStatus) ToPointer() *SearchJobStatus {
	return &e
}

func (e *SearchJobStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "new":
		fallthrough
	case "running":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		fallthrough
	case "canceled":
		fallthrough
	case "queued":
		*e = SearchJobStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchJobStatus: %v", v)
	}
}
