// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Cribl/internal/sdk/pkg/models/shared"
	"net/http"
)

type ListLogFilesContentsRequest struct {
	// Epoch timestamp of the earliest event (includes rolled files present on disk)
	Et *int64 `queryParam:"style=form,explode=true,name=et"`
	// query string[] optional file or files to query
	Files *string `queryParam:"style=form,explode=true,name=files"`
	// Filter
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// id of the group to query
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// Maximum number of log lines to retrieve starting from offset.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Epoch timestamp of the latest event (includes rolled files present on disk)
	Lt *int64 `queryParam:"style=form,explode=true,name=lt"`
	// type of logs request single multi group
	Type string `queryParam:"style=form,explode=true,name=type"`
}

type ListLogFilesContentsResponse struct {
	ContentType string
	// Unauthorized
	Error *shared.Error
	// a list of any objects
	LogFileContents *shared.LogFileContents
	StatusCode      int
	RawResponse     *http.Response
}
