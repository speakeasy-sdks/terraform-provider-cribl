// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"Cribl/internal/sdk/pkg/models/shared"
	"encoding/json"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *ScriptDataSourceModel) RefreshFromGetResponse(resp *shared.ScriptLibEntry) {
	r.Args = nil
	for _, v := range resp.Args {
		r.Args = append(r.Args, types.StringValue(v))
	}
	r.Command = types.StringValue(resp.Command)
	if resp.Description != nil {
		r.Description = types.StringValue(*resp.Description)
	} else {
		r.Description = types.StringNull()
	}
	if r.Env == nil && len(resp.Env) > 0 {
		r.Env = make(map[string]types.String)
		for key, value := range resp.Env {
			r.Env[key] = types.StringValue(value)
		}
	}
	r.ID = types.StringValue(resp.ID)
	if r.AdditionalProperties.IsUnknown() {
		if resp.AdditionalProperties == nil {
			r.AdditionalProperties = types.StringNull()
		} else {
			additionalPropertiesResult, _ := json.Marshal(resp.AdditionalProperties)
			r.AdditionalProperties = types.StringValue(string(additionalPropertiesResult))
		}
	}
}
