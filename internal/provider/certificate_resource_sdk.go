// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"Cribl/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *CertificateResourceModel) ToCreateSDKType() *shared.Certificate {
	ca := new(string)
	if !r.Ca.IsUnknown() && !r.Ca.IsNull() {
		*ca = r.Ca.ValueString()
	} else {
		ca = nil
	}
	cert := r.Cert.ValueString()
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	id := r.ID.ValueString()
	var inUse []string = nil
	for _, inUseItem := range r.InUse {
		inUse = append(inUse, inUseItem.ValueString())
	}
	passphrase := new(string)
	if !r.Passphrase.IsUnknown() && !r.Passphrase.IsNull() {
		*passphrase = r.Passphrase.ValueString()
	} else {
		passphrase = nil
	}
	privKey := r.PrivKey.ValueString()
	out := shared.Certificate{
		Ca:          ca,
		Cert:        cert,
		Description: description,
		ID:          id,
		InUse:       inUse,
		Passphrase:  passphrase,
		PrivKey:     privKey,
	}
	return &out
}

func (r *CertificateResourceModel) ToGetSDKType() *shared.Certificate {
	out := r.ToCreateSDKType()
	return out
}

func (r *CertificateResourceModel) ToUpdateSDKType() *shared.Certificate {
	out := r.ToCreateSDKType()
	return out
}

func (r *CertificateResourceModel) ToDeleteSDKType() *shared.Certificate {
	out := r.ToCreateSDKType()
	return out
}

func (r *CertificateResourceModel) RefreshFromGetResponse(resp *shared.Certificate) {
	if resp.Ca != nil {
		r.Ca = types.StringValue(*resp.Ca)
	} else {
		r.Ca = types.StringNull()
	}
	r.Cert = types.StringValue(resp.Cert)
	if resp.Description != nil {
		r.Description = types.StringValue(*resp.Description)
	} else {
		r.Description = types.StringNull()
	}
	r.ID = types.StringValue(resp.ID)
	r.InUse = nil
	for _, v := range resp.InUse {
		r.InUse = append(r.InUse, types.StringValue(v))
	}
	if resp.Passphrase != nil {
		r.Passphrase = types.StringValue(*resp.Passphrase)
	} else {
		r.Passphrase = types.StringNull()
	}
	r.PrivKey = types.StringValue(resp.PrivKey)
}

func (r *CertificateResourceModel) RefreshFromCreateResponse(resp *shared.Certificate) {
	r.RefreshFromGetResponse(resp)
}

func (r *CertificateResourceModel) RefreshFromUpdateResponse(resp *shared.Certificate) {
	r.RefreshFromGetResponse(resp)
}
